<?xml version="1.0"?>
<doc>
  <assembly>
    <name>SuperMap.Analyst.SpatialAnalyst</name>
  </assembly>
  <members>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.AggregationType">
      <summary>
            This enumeration defines the constants representing the types of modes for calculating the result grid datasets in aggregation operations.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.AggregationType.Sum">
      <summary>
            An aggregated cell contains the sum of all the corresponding cell values. 
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.AggregationType.Min">
      <summary>
            An aggregated cell contains the minimum value of all the corresponding cell values.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.AggregationType.Max">
      <summary>
            An aggregated cell contains the maximum value of all the corresponding cell values.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.AggregationType.Average">
      <summary>
            An aggregated cell contains the mean of all the corresponding cell values.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.AggregationType.Median">
      <summary>
            An aggregated cell contains the median of all the corresponding cell values.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult">
      <summary>
            The BasicStatisticsAnalystResult class.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.#ctor">
      <summary>
            The Constructor.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.Max">
      <summary>
            Gets the max of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.Mean">
      <summary>
            Gets the mean of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.Min">
      <summary>
            Gets the min of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.StandardDeviation">
      <summary>
            Gets the standard deviation of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.Median">
      <summary>
            Gets the median of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.FirstQuartile">
      <summary>
            Gets the first and fourth score of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.ThirdQuartile">
      <summary>
            Gets the third and fourth score of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.Skewness">
      <summary>
            Gets the skewness of the basic statistics analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.BasicStatisticsAnalystResult.Kurtosis">
      <summary>
            Gets the kurtosis of the basic statistics analysis.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.BoundsType">
      <summary>
            Defines the enumeration of the BoundsType.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.BoundsType.Intersection">
      <summary>
            The intersection of extents of the input grid datasets.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.BoundsType.Union">
      <summary>
            The union of extents of the input grid datasets.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.BoundsType.Custom">
      <summary>
            A custom extent.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst">
      <summary>
            The BufferAnalyst class is used to create buffers for the point/line/polygon dataset (or recordset) and network dataset, which include single buffer, multi buffer, and one-side multi buffer for a line.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.CreateBuffer(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.BufferAnalystParameter,System.Boolean,System.Boolean)">
      <summary>
             Creates the buffer for the vector dataset.
             </summary>
      <param name="sourceDataset">The specified source vector dataset for creating buffer zones. It supports the point dataset, line dataset, polygon dataset and network dataset. The buffer analyst of the network dataset focuses on edges.</param>
      <param name="resultDataset">The vector dataset to store the result of the buffer analysis. It must be the region dataset.</param>
      <param name="bufferAnalystParameter">The specified BufferAnalystParameter object.</param>
      <param name="isUnion">Whether to merge all buffers, i.e., whether to perform a union operation on the buffers of the objects in the source data and return the result. For region objects, it is required that the objects in the source data do not intersect with each other.</param>
      <param name="isAttributeRetained">Specifies whether to reserve the fields of the objects in the source dataset. However, For the region dataset, if union the objects and the buffer zone, this parameter is invalid, namely the isUnion is set to true.</param>
      <returns>True if it is removed successfully; false otherwise.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.CreateBuffer(SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.BufferAnalystParameter,System.Boolean,System.Boolean)">
      <summary>
            Creates the buffer according to the given vector recordset.
            </summary>
      <param name="sourceRecordset">The specified vector recordset that creates buffer area. It supports point, line and region recordset.</param>
      <param name="resultDataset">The vector dataset to store the result of the buffer analysis. It must be the region dataset.</param>
      <param name="bufferAnalystParameter">The specified BufferAnalystParameter object.</param>
      <param name="isUnion">Whether to merge all buffers, i.e., whether to perform a union operation on the buffers of the objects in the source data and return the result. For region objects, it is required that the objects in the source data do not intersect with each other.</param>
      <param name="isAttributeRetained">Specifies whether to reserve the fields of the objects in the source dataset. However, For the region dataset, if union the objects and the buffer zone, this parameter is invalid, namely the isUnion is set to true.</param>
      <returns>True if it is removed successfully; false otherwise.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.CreateLineOneSideMultiBuffer(SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,System.Double[],SuperMap.Analyst.SpatialAnalyst.BufferRadiusUnit,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates the one-side multi buffer for a vector line recordset.
            </summary>
      <param name="sourceRecordset">The specified vector recordset that creates buffer area. It only supports line recordset.</param>
      <param name="resultDataset">The vector dataset to store the result of the buffer analysis. It must be the region dataset.</param>
      <param name="BufferRadii">The specified multi buffer radius list. Its unit is determined by the bufferRadiusUnit parameter.</param>
      <param name="bufferRadiusUnit">The specified buffer radius unit.</param>
      <param name="semicircleSegments">The specified arc segment count.</param>
      <param name="isLeft">Whether to generate a left buffer. Generates the buffer zone on the left side if true, otherwise, generates the right buffer.</param>
      <param name="isUnion">Whether to merge all buffers, i.e., whether to perform a union operation on the buffers of the objects in the source data and return the result.</param>
      <param name="isAttributeRetained">Specifies whether to reserve the fields of the objects in the source dataset. However, For the region dataset, if union the objects and the buffer zone, this parameter is invalid, namely the isUnion is set to true.</param>
      <param name="isRing">Whether to generate a ring buffer. If true, then it will generate a multiple ring buffer zone whose outer buffer zone is adjacent to the inner buffer zone. If false, the outer buffer zone contains the inner buffer zone.</param>
      <returns>True if it is removed successfully; false otherwise.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.CreateLineOneSideMultiBuffer(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,System.Double[],SuperMap.Analyst.SpatialAnalyst.BufferRadiusUnit,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
             Creates the one-side multi buffer for a vector line dataset.
             </summary>
      <param name="sourceDataset">The specified vector dataset that creates multiple ring buffer area. It only supports line dataset.</param>
      <param name="resultDataset">The vector dataset to store the result of the buffer analysis. It must be the region dataset.</param>
      <param name="BufferRadii">The specified multi buffer radius list. Its unit is determined by the bufferRadiusUnit parameter.</param>
      <param name="bufferRadiusUnit">The specified buffer radius unit.</param>
      <param name="semicircleSegments">The specified arc segment count.</param>
      <param name="isLeft">Whether to generate a left buffer. Generates the buffer zone on the left side if true, otherwise, generates the right buffer.</param>
      <param name="isUnion">Whether to merge all buffers, i.e., whether to perform a union operation on the buffers of the objects in the source data and return the result.</param>
      <param name="isAttributeRetained">Specifies whether to reserve the fields of the objects in the source dataset. However, For the region dataset, if union the objects and the buffer zone, this parameter is invalid, namely the isUnion is set to true.</param>
      <param name="isRing">Whether to generate a ring buffer. If true, then it will generate a multiple ring buffer zone whose outer buffer zone is adjacent to the inner buffer zone. If false, the outer buffer zone contains the inner buffer zone.</param>
      <returns>True if it is removed successfully; false otherwise.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.CreateMultiBuffer(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,System.Double[],SuperMap.Analyst.SpatialAnalyst.BufferRadiusUnit,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates the multi-buffers according to the given vector dataset.
            </summary>
      <param name="sourceDataset">The specified source vector dataset for creating multiple ring buffer zones. It supports the point dataset, line dataset, polygon dataset and network dataset. The buffer analyst of the network dataset focuses on edges.</param>
      <param name="resultDataset">The specified dataset for storing the buffer analysis result.</param>
      <param name="BufferRadii">The specified multi buffer radius list. Its unit is determined by the bufferRadiusUnit parameter.</param>
      <param name="bufferRadiusUnit">The specified buffer radius unit.</param>
      <param name="semicircleSegments">The specified arc segment count.</param>
      <param name="isUnion">Whether to merge all buffers, i.e., whether to perform a union operation on the buffers of the objects in the source data and return the result.</param>
      <param name="isAttributeRetained">Specifies whether to reserve the fields of the objects in the source dataset. However, For the region dataset, if union the objects and the buffer zone, this parameter is invalid, namely the isUnion is set to true.</param>
      <param name="isRing">Whether to generate a ring buffer. If true, then it will generate a multiple ring buffer zone whose outer buffer zone is adjacent to the inner buffer zone. If false, the outer buffer zone contains the inner buffer zone.</param>
      <returns>True if it is removed successfully; false otherwise.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.CreateMultiBuffer(SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,System.Double[],SuperMap.Analyst.SpatialAnalyst.BufferRadiusUnit,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates the multi-buffers for a vector recordset.
            </summary>
      <param name="sourceRecordset">The specified vector recordset that creates multiple ring buffer area. It supports point, line and region recordset.</param>
      <param name="resultDataset">The specified dataset for storing the buffer analysis result.</param>
      <param name="BufferRadii">The specified multi buffer radius list. Its unit is determined by the bufferRadiusUnit parameter.</param>
      <param name="bufferRadiusUnit">The specified buffer radius unit.</param>
      <param name="semicircleSegments">The specified arc segment count.</param>
      <param name="isUnion">Whether to merge all buffers, i.e., whether to perform a union operation on the buffers of the objects in the source data and return the result.</param>
      <param name="isAttributeRetained">Specifies whether to reserve the fields of the objects in the source dataset. However, For the region dataset, if union the objects and the buffer zone, this parameter is invalid, namely the isUnion is set to true.</param>
      <param name="isRing">Whether to generate a ring buffer. If true, then it will generate a multiple ring buffer zone whose outer buffer zone is adjacent to the inner buffer zone. If false, the outer buffer zone contains the inner buffer zone.</param>
      <returns>True if it is removed successfully; false otherwise.</returns>
    </member>
    <member name="E:SuperMap.Analyst.SpatialAnalyst.BufferAnalyst.Stepped">
      <summary>
            The event is trigged when the process bar is activated.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain">
      <summary>
            The CalculationTerrain class. It is used to calculate aspect, slope, surface area, surface distance, surface volume, profile, cut/fill, find extremes, hill shade, as well as orthographic projection images.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateSlope(SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.SlopeType,System.Double,SuperMap.Data.Datasource,System.String)">
      <summary>
            Calculates slope, and returns the slope grid dataset, i.e., slope map.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM raster to be calculated.</param>
      <param name="slopeType">The specified unit type of the slope.</param>
      <param name="zFactor">The specified elevation factor (the coefficient for transforming Z values to values with X and Y units in a Grid). For a calculation involving X, Y, and Z values, usually a zFactor needs to be set to make their units consistent. For example, X and Y units are meters, and Z unit is feet. One feet is equal to 0.3048 meter, so the specified zFacor is 0.3048. If you set it as 1.0, then it will not zoom.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The slope grid dataset.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateAspect(SuperMap.Data.DatasetGrid,SuperMap.Data.Datasource,System.String)">
      <summary>
            Calculates aspect, and returns the aspect grid dataset, i.e., slope map.
            </summary>
      <param name="sourceDatasetGrid">The specified aspect DEM raster to be calculated.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The aspect grid dataset.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateCurvature(SuperMap.Data.DatasetGrid,System.Double,SuperMap.Data.Datasource,System.String,System.String,System.String)">
      <summary>
            Calculate curvature, and return the average curvature grid dataset.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM grid to be calculated.</param>
      <param name="zFactor">The specified elevation factor (the coefficient for transforming Z values to values with X and Y units in a Grid). For a calculation involving X, Y, and Z values, usually a zFactor needs to be set to make their units consistent. For example, X and Y units are meters, and Z unit is feet. One feet is equal to 0.3048 meter, so the specified zFacor is 0.3048. If you set it as 1.0, then it will not zoom.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="averageCurvatureName">The dataset name of the mean curvature.</param>
      <param name="profileCurvatureName">The dataset name of the mean profile curvature. The parameter is optional. It is null if you don't need the profile curvature.</param>
      <param name="planCurvatureName">The dataset name of the mean plan curvature. The parameter is optional. It is null if you don't need the plan curvature.</param>
      <returns>The raster dataset for the mean curvature.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.ComputeSurfaceDistance(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoLine)">
      <summary>
            Gird surface distance calculation. It is used to calculate curved surface distances along specified line segments or polyline segments on a 3D curved surface simulated by a grid dataset.
            </summary>
      <param name="sourceDatasetGrid">The specified surface distance DEM raster to be calculated.</param>
      <param name="line">The specified 2D line for calculating the surface distance.</param>
      <returns>The value of the surface distance. The unit is meter.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.ComputeSurfaceVolume(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,System.Double)">
      <summary>
            Surface volume calculation. It calculates the volume of the space corresponding to a selected polygon region. The space is between a 3D curved surface simulated by grid dataset and a base plane.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM raster to be calculated the volume.</param>
      <param name="region">The specified polygon for volume calculation.</param>
      <param name="baseValue">The specified base surface value. It has the same unit with the cell value of the raster dataset to be calculated.</param>
      <returns>The value of the surface volume. Its unit is the square meter multiplied by the value of the raster dataset to be calculated.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.ComputeSurfaceArea(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion)">
      <summary>
            Surface volume calculation. It calculates the volume of the space corresponding to a selected polygon region. The space is between a 3D curved surface simulated by grid dataset and a base plane.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM raster to be calculated the surface area.</param>
      <param name="region">The specified polygon for surface area calculation.</param>
      <returns>The value of the surface area. Its unit is meter. Returns -1 indicating the calculation fails.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.FindExtremum(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,System.Int32)">
      <summary>
            Finding extrema. It searches a specified extent in a grid dataset for extrema including the point with the maximum value and the one with the minimum value.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM raster to be calculated the extrema.</param>
      <param name="region">The user-specified extent to search for extrema.</param>
      <param name="maxCount">The specified expected count of extrema to be found.</param>
      <returns>The extrema information.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Data.Datasource,System.String)">
      <summary>
            Grid cut and fill calculation for conducting calculation on the cell values in the grid datasets before and after a cutting and filling operation.
            </summary>
      <param name="beforeCutFillDataGrid">The grid dataset before the cut and fill operation.</param>
      <param name="afterCutFillDataGrid">The grid dataset after the cut and fill operation.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The cut and fill result information.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,System.Double,SuperMap.Data.Datasource,System.String)">
      <summary>
            Cut and fill calculation for a selected region.
            </summary>
      <param name="sourceDatasetGrid">The specified grid dataset to be cut and filled.</param>
      <param name="region">The specified region to be cut and filled.</param>
      <param name="baseAltitude">The result elevation of the specified region to be cut and filled. It has the same unit with the cell value of the raster dataset to be cut and filled.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The cut and fill result information.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoLine3D,System.Double,System.Boolean,SuperMap.Data.Datasource,System.String)">
      <summary>
            Incline Cut and Fill.
            </summary>
      <param name="sourceDatasetGrid">The specified grid dataset for the cut and fill operation.</param>
      <param name="line">The specified route for cutting and filling.</param>
      <param name="bufferRadius">The buffer radius of the specified route to be cut and filled. It has the same unit with the raster dataset to be cut and filled.</param>
      <param name="isRoundHead">Specifies whether to use a round buffer for the cut and fill line.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The cut and fill result information.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,System.Double)">
      <summary>
            Calculate the cut and fill by region. There is no result grid dataset.
            </summary>
      <param name="sourceDatasetGrid">The specified grid dataset to be cut and filled.</param>
      <param name="region">The specified region to be cut and filled.</param>
      <param name="baseAltitude">The result elevation of the specified region to be cut and filled. It has the same unit with the cell value of the raster dataset to be cut and filled.</param>
      <returns>The cut and fill result information.</returns>
      <overloads>
        <summary>
            The cut/fill calcuation includes grid cut/fill, cut/fill by region, cut/fill by inclined region, and inverse cut/fill.
            </summary>
      </overloads>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion3D,SuperMap.Data.Datasource,System.String)">
      <summary>
            3D surface excavation calculation.
            </summary>
      <param name="sourceDatasetGrid">The specified raster data set.</param>
      <param name="region3D">The specified 3D surface object.</param>
      <param name="targetDatasource">Specifies the data source for the resulting dataset.</param>
      <param name="targetDatasetName">The name of the specified result data set.</param>
      <returns>Fill in the results of the excavation.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateHillShade(SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.ShadowMode,System.Double,System.Double,System.Double,SuperMap.Data.Datasource,System.String)">
      <summary>
            Creates hillshade.
            </summary>
      <param name="sourceDatasetGrid">The specified grid dataset to generate a 3D hillshade.</param>
      <param name="shadowMode">The render type for the 3D hillshade.</param>
      <param name="azimuth">
        <para>The specified azimuth of the light source. It is used to determine the direction of the light source, which is the included angle from the the north line of the light source, according to a clockwise direction, to the target direction. The range of the angle is from 0° to 360°. The north direction is 0°, and it increases in a clockwise direction.</para>
        <para>
        </para>
      </param>
      <param name="altitudeAngle">
        <para>The specified altitude angle of the light source. It is used to determine the angle of inclination of the light source, which is the included angle between the direction from the light source to the target and the horizontal plane. It ranges from 0-90. If the altitude angle of the light source is 90°, the light source will orthographically  illuminate the ground surface.</para>
        <para>
        </para>
      </param>
      <param name="zFactor">The specified elevation factor (the coefficient for transforming Z values to values with X and Y units in a Grid). For a calculation involving X, Y, and Z values, usually a zFactor needs to be set to make their units consistent. For example, X and Y units are meters, and Z unit is feet. One feet is equal to 0.3048 meter, so the specified zFacor is 0.3048. If you set it as 1.0, then it will not zoom.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>Creates the 3D hillshade.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateOrthoImage(SuperMap.Data.DatasetGrid,SuperMap.Data.Colors,System.Drawing.Color,System.Double,SuperMap.Data.Datasource,System.String)">
      <summary>
            Creates an orthophotography. It is outdated. Now we use <see cref="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateOrthoImage(SuperMap.Data.DatasetGrid,SuperMap.Data.Colors,System.Drawing.Color,SuperMap.Data.Datasource,System.String)">CalculateOrthoImage</see>.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM grid dataset for orthophotography to be calculated.</param>
      <param name="colors">The color look-up table after the specified is projected.</param>
      <param name="noValueColor">The specified no-value grid color.</param>
      <param name="zFactor">The specified elevation factor (the coefficient for transforming Z values to values with X and Y units in a Grid). For a calculation involving X, Y, and Z values, usually a zFactor needs to be set to make their units consistent. For example, X and Y units are meters, and Z unit is feet. One feet is equal to 0.3048 meter, so the specified zFacor is 0.3048. If you set it as 1.0, then it will not zoom.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The orthophotography.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateOrthoImage(SuperMap.Data.DatasetGrid,SuperMap.Data.Colors,System.Drawing.Color,SuperMap.Data.Datasource,System.String)">
      <summary>
            Creates the orthoimage according to the specified color collection.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM grid dataset for orthophotography to be calculated.</param>
      <param name="colors">The specified color collection after 3D projection.</param>
      <param name="noValueColor">The specified no-value grid color.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The orthophotography.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateOrthoImage(SuperMap.Data.DatasetGrid,SuperMap.Data.ColorDictionary,System.Drawing.Color,SuperMap.Data.Datasource,System.String)">
      <summary>
            Creates the orthoimage according to the specified elevation color dictionary.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM grid dataset for orthophotography to be calculated.</param>
      <param name="colorDictionary">The specified elevation color dictionary.</param>
      <param name="noValueColor">The specified no-value grid color.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <returns>The generated orthoimage.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateProfile(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoLine)">
      <summary>
            The profile analysis is to find the profile of DEM cells along an given line. Returns the profile lines and the coordinates of the sample points.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM dataset for profile analysis.</param>
      <param name="line">The specified line that is a line segment or polyline. The profile analysis gives the profile along this line. </param>
      <returns>The profile analysis result.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateProfile(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoLine,System.Double)">
      <summary>
            The profile analysis is to find the profile of DEM cells along an given line. Returns the profile lines and the coordinates of the sample points.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM dataset for profile analysis.</param>
      <param name="line">The specified line that is a line segment or polyline. The profile analysis gives the profile along this line. </param>
      <param name="resampleTolerance">The specified resample tolerance that is the reserved parameter.</param>
      <returns>The profile analysis result.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.Flood(SuperMap.Data.DatasetGrid,System.Double,SuperMap.Data.GeoRegion)">
      <summary>
            Calculates the flooded area of the DEM data according to the specified elevations.
            </summary>
      <param name="sourceDataset">DEM data for calculating the flood area.</param>
      <param name="height">The specified elevation of the water level after flooding. The cells less than or equal to the value will be allocated into the area. It has the same unit with the value of DEM data to be analyzed.</param>
      <param name="validRegion">The valid region. Only this region is calculated.</param>
      <returns>The merged region object</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,System.Double,System.Boolean)">
      <summary>
            Backcalculate fill and cut, that is, calculating the elevation according to a given volume of the fil lor cut.
            </summary>
      <param name="sourceDatasetGrid">The specified grid data to be cut and filled.</param>
      <param name="volume">The specified cut-and-fill volume. This value is greater than 0. If it is equal to or less than 0, an exception will be thrown. Its unit is square meters * cut-and-fill grid value unit.</param>
      <param name="isFill">Specify whether to do fill and cut calculation. True, calculate; false, otherwise.</param>
      <returns>The elevation after cut or fill. It has the same unit with the grid values to be cut and filled.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CutFill(SuperMap.Data.DatasetGrid,System.Double,System.Boolean,SuperMap.Data.GeoRegion)">
      <summary>
            Backcalculate fill and cut, that is, calculating the elevation according to a given volume of the fill or cut. You can specify a region for this calculation.
            </summary>
      <param name="sourceDatasetGrid">The specified grid data to be cut and filled.</param>
      <param name="volume">The specified cut-and-fill volume. This value is greater than 0. If it is equal to or less than 0, an exception will be thrown. Its unit is square meters * cut-and-fill grid value unit.</param>
      <param name="isFill">Specify whether to do fill and cut calculation. True, calculate; false, otherwise.</param>
      <param name="region">The specified cut and fill area. If it is null, the cut and fill calculation is applied for the entire area.</param>
      <returns>The elevation after cut or fill. It has the same unit with the grid values to be cut and filled.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.ComputePointSlope(SuperMap.Data.DatasetGrid,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.SlopeType,System.Double)">
      <summary>
            Calculates the slope of the given point in DEM grid.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM grid.</param>
      <param name="specifiedPoint">the specified geographical coordinate point.</param>
      <param name="type">The specified unit type of the slope.</param>
      <param name="zFactor">The specified elevation factor (the coefficient for transforming Z values to values with X and Y units in a Grid). For a calculation involving X, Y, and Z values, usually a zFactor needs to be set to make their units consistent. For example, X and Y units are meters, and Z unit is feet. One feet is equal to 0.3048 meter, so the specified zFacor is 0.3048. If you set it as 1.0, then it will not zoom.</param>
      <returns>The slope of the specified point. The type of its unit is specified by the type parameter.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.ComputePointAspect(SuperMap.Data.DatasetGrid,SuperMap.Data.Point2D)">
      <summary>
            Calculates the aspect of the given point in DEM grid.
            </summary>
      <param name="sourceDatasetGrid">The specified DEM grid.</param>
      <param name="specifiedPoint">the specified geographical coordinate point.</param>
      <returns>The aspect of the specified point. The unit is degree.</returns>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.AnalystSetting">
      <summary>
            Gets or sets an environment set object of the terrain analysis.
            </summary>
    </member>
    <member name="E:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.Stepped">
      <summary>
            The event is trigged when the process bar is activated. 
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.ComputeDistanceResult">
      <summary>
            The ComputeDistanceResult class is used to get the results of the nearest distance computation and the range distance computation, including the SMID of source geometry, the SMID of reference geometry and the distance value.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.ComputeDistanceResult.SourceGeometryID">
      <summary>
            Gets the SMID of "source geometry".
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.ComputeDistanceResult.ReferenceGeometryIDs">
      <summary>
            Gets the SMID array of "reference geometry". For the nearest distance computation, Both "source geometry" and "reference geometry" in this array have the nearest distance value.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.ComputeDistanceResult.Distance">
      <summary>
            Getting the nearest distance is to get the distance of "source geometry" from <see cref="P:SuperMap.Analyst.SpatialAnalyst.ComputeDistanceResult.SourceGeometryID">SourceGeometryID</see> and obtain the distance of "reference geometry" from <see cref="P:SuperMap.Analyst.SpatialAnalyst.ComputeDistanceResult.SourceGeometryID">ReferenceGeometryIDs</see>. Its unit is uniform with the dataset unit of the reference recordset.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter">
      <summary>Create a scale value point parameter class.</summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.#ctor">
      <summary>The default constructor constructs a new CreateMarkPointsParameter object.</summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter)">
      <summary>A copy constructor that constructs a new object identical to the given CreateMarkPointsParameter object.</summary>
      <param name="dissolveParameter">The specified CreateMarkPointsParameter object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.LineMDataset">
      <summary>Get or set the routing data set.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.OutputDatasource">
      <summary>Gets or sets the output data source.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.OutputDatasetName">
      <summary>Gets or sets the output dataset name.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.RouteIDField">
      <summary>Gets or sets the route ID field name.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CreateMarkPointsParameter.MarkScale">
      <summary>Gets or sets the scale value range.</summary>
      <value>Starting at 0 scale, a scale point is generated every MarkScale.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.DensityAnalyst">
      <summary>
            The density analysis class. It provides density analysis. In other words, points or lines density in the circle can be calculated for every output raster cell.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.DensityAnalyst.KernelDensity(SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Data.Datasource,System.String)">
      <summary>
             Performs kernel density analysis for point/line dataset,and returns the result.
             </summary>
      <param name="parameter">The specified parameter of kernel density analysis.</param>
      <param name="sourceDataset">Specifies the point/line dataset which needs kernel density analysis</param>
      <param name="valueFieldName">Name field used to store density analysis measure value. All geometry objects are processed as the value 1 if it is null. Density analysis do not support text type field.</param>
      <param name="targetDatasource">Datasource for storing the output datasets</param>
      <param name="targetDatasetName">Specifies the name of the output dataset.</param>
      <returns>The grid dataset resulted from kernel density analysis.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.DensityAnalyst.PointDensity(SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Data.Datasource,System.String)">
      <summary>
             Performs simple point density analysis for point dataset,and returns the analysis result.
             </summary>
      <param name="parameter">The specified parameter of point density analysis.</param>
      <param name="sourceDataset">The point dataset that needs to perform point density analysis.</param>
      <param name="valueFieldName">Name field used to store density analysis measure value. All point objects are processed as the value 1 if it is null. Density analysis do not support text type field.</param>
      <param name="targetDatasource">Datasource for storing the output datasets</param>
      <param name="targetDatasetName">Specifies the name of the output dataset.</param>
      <returns>The grid dataset resulted from point density analysis.</returns>
    </member>
    <member name="E:SuperMap.Analyst.SpatialAnalyst.DensityAnalyst.Stepped">
      <summary>
            The event is trigged when the process bar is activated.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter">
      <summary>
            The density analysis parameter class.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.#ctor">
      <summary>
            Creates a new DensityAnalystParameter object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.#ctor(System.Double,System.Double)">
      <summary>
            Creates a new DensityAnalystParameter object according to given parameters.
            </summary>
      <param name="resolution">The specified resolution used in density analysis.</param>
      <param name="searchRadius">Finds the search range when analyzing density.</param>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.ToString">
      <summary>
            Returns a string that represents the density analysis.The format is {Bounds=,Resolution=,SearchRadius=}
            </summary>
      <returns>A string that represents the current density analysis parameter object.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.Dispose">
      <summary>
            Releases all resources that the object occupies.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.Resolution">
      <summary>
            Gets or sets the resolution of the result grid dataset used in density analysis.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.Bounds">
      <summary>
            Gets or sets the bound of the density analysis.It is used to determine the bound of the output dataset.
            </summary>
      <value>The default value is <see cref="P:SuperMap.Data.Rectangle2D.Empty">Rectangle2D.Empty</see>.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.SearchRadius">
      <summary>
            Gets or sets the search radius for density calculation within the grid neighborhood. The unit is the same to the unit of the dataset to be analyzed.
            </summary>
      <value>The default value is 0.0. For the point dataset, it will calculate the default radius according to the point distribution with the given distance.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.DensityAnalystParameter.SearchNeighbourhood">
      <summary>
            Gets or sets the search neighborhood shape used to calculate density.
            </summary>
      <value>The default value is null.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.EdgeMatchMode">
      <summary>
            This enumeration defines the method constant of sheet join.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.EdgeMatchMode.TheOtherEdge">
      <summary>
            Border matching to on side.
            <para>The border matching connection is the endpoint in the target dataset. The related record endpoint in source dataset will be moved to this connection point.</para></summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.EdgeMatchMode.TheMidPoint">
      <summary>
            Border matching on midpoint.
            <para>The border matching connection is the midpoint in the target dataset and source dataset. The related record endpoint in source dataset and target dataset will be moved to this connection point.</para></summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.EdgeMatchMode.TheIntersection">
      <summary>
            Border matching on intersection.
            <para>The border matching connection is the connection and border matching (<see cref="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.EdgeMatchLine">EdgeMatchLine</see>) in the target dataset and source dataset. The related record endpoint in source dataset and target dataset will be moved to this connection point.</para></summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter">
      <summary>The sheet border matching parameter class.</summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.#ctor">
      <summary>The default constructor for constructing a new EdgeMatchParameter object.</summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter)">
      <summary>Initializes a new instance of the EdgeMatchParameter class which is identical with the specified EdgeMatchParameter object.</summary>
      <param name="edgeMatchParameter">The specified EdgeMatchParameter object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.IsUnion">
      <summary>Gets or sets whether to perform border matching.</summary>
      <value>The default value is false.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.EdgeMatchMode">
      <summary>Gets or sets the border matching mode.</summary>
      <value>The default value is EdgeMatchMode.TheMidPoint.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.Tolerance">
      <summary>Gets or sets the border matching tolerance. It has the same unit with the dataset to be  border matched.</summary>
      <value>The default value is the default tolerance set for the current dataset to be processed.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.EdgeMatchLine">
      <summary>Gets or sets the border matching line of data.</summary>
      <value>Default is no border matching line.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.OutputDatasource">
      <summary>Gets or sets the datasource of border matching data.</summary>
      <value>It doesn't set the datasource by default.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter.OutputDatasetLinkName">
      <summary>Gets or sets the dataset name of border matching.</summary>
      <value>It doesn't set the datasset by default.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.FunctionType">
      <summary>
            This class defines the type constant of transformation function.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.FunctionType.None">
      <summary>
            Represent that don't use transformation function.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.FunctionType.Log">
      <summary>
            The transformation function is log. The original value is larger than 0.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.FunctionType.Arcsin">
      <summary>
            The transformation function is ArcSin. The original value is [-1,1].
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.GridHistogram">
      <summary>
            The GridHistogram class is used to get the result of the grid histogram (<see cref="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.CreateHistogram(SuperMap.Data.DatasetGrid,System.Int32)">CreateHistogram</see>), and renew the group number on the horizontal axis of the grid histogram.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.GridHistogram.GetFrequencies">
      <summary>
            Gets the group frequency of grid histogram. Each group corresponds with a range of grid value. The cell number of the value within the range is the frequency of this group.
            </summary>
      <returns>The frequency of raster histogram.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.GridHistogram.Dispose">
      <summary>
            Disposes the resources occupied by the GridHistogram object.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.GridHistogram.GroupCount">
      <summary>
            Gets or sets the group number on the horizontal axis of the grid histogram. It must be greater than 0.
            </summary>
      <exception cref="T:System.ArgumentException">Sets it as 0 or negative values.</exception>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.GridHistogram.SegmentInfos">
      <summary>
            Gets the interval information in raster histogram.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions">
      <summary>
            The CalibrateOptions class. Calibrate parameters in <see cref="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.CalibrateRoutes(SuperMap.Data.DatasetVector,System.String,SuperMap.Data.DatasetVector,System.String,System.String,SuperMap.Analyst.SpatialAnalyst.CalibrateOptions,SuperMap.Data.Datasource,System.String)">CalibrateRoutes</see>, including tolerance, retaining routes, etc. 
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.#ctor">
      <summary>
            Creates a new instance of the CalibrateOptions object. 
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.#ctor(SuperMap.Data.CalibrateMode,System.Double)">
      <summary>
            Creates a new CalibrateOptions object according to the specified arguments. 
            </summary>
      <param name="mode">The specified mode.</param>
      <param name="tolerance">The specified tolerance. If the distance from a point to the route is greater than its tolerance, this point will not be involved to calibration. </param>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.EnableAll">
      <summary>
            Set all parameters with bool type to true.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.DisableAll">
      <summary>
            Set all parameters with bool type to false. 
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.RouteCalibrationMode">
      <summary>
            Gets or sets the calibration mode.
            </summary>
      <value>The default is <see cref="F:SuperMap.Analyst.SpatialAnalyst.CalibrateMode.ByDistance">CalibrateMode.ByDistance</see>.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.Tolerance">
      <summary>
            Gets or sets the calibration tolerance.
            </summary>
      <value>The default value is 1.0e-10, the unit depends on <see cref="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.ToleranceUnit">ToleranceUnit</see>.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.IgnoringGaps">
      <summary>
            Gets or sets whether to ignore the gap between items. Ignore if true; otherwise, false.
            </summary>
      <value>The default value is true.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.RetainingAllRoutes">
      <summary>
            Gets or sets whether to keep the route object without reference points in the result route dataset. keep it if true; otherwise, false.
            </summary>
      <value>The default is true, which indicates that there are no reference points that belong to the route.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.ToleranceUnit">
      <summary>
            Gets or sets the unit of calibration tolerance.
            </summary>
      <value>The default value is <see cref="F:SuperMap.Data.Unit.Meter">Unit.Meter</see>.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.CalibrateOptions.ErrorInfoField">
      <summary>
            Gets or sets the error information field.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.CellSizeType">
      <summary>
            This enumeration defines the constant representing the cell size type in grid analysis.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.CellSizeType.Min">
      <summary>
            The minimum value.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.CellSizeType.Max">
      <summary>
            The maximum value.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.CellSizeType.Custom">
      <summary>
            A custom cell value.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.EliminateMode">
      <summary>
            This enumeration defines the little polygon eliminate mode constant.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.EliminateMode.EliminateByArea">
      <summary>
            Eliminates by area.
            <para>The tiny polygons are merged to the large polygon nearby.</para></summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.EliminateMode.EliminateByBorder">
      <summary>
            Eliminates by common border, this mode is not supported currently.
            <para>The tiny polygons are merged to the polygon where they share the max common border.</para></summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.Generalization">
      <summary>
            The generalization class provides various functions of cartographic generalization including dissolving the vector data, eliminating the tiny polygons, extracting the center lines from the dual lines, extracting the center line from a region, etc.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.Dissolve(SuperMap.Data.DatasetVector,SuperMap.Data.Datasource,System.String,SuperMap.Analyst.SpatialAnalyst.DissolveParameter)">
      <summary>
            Dissolves vector data, and returns the result dataset.
            </summary>
      <param name="sourceDataset">The specified dataset to be dissolved that must be line dataset or region dataset.</param>
      <param name="targetDatasource">Datasource for storing the output datasets.</param>
      <param name="targetDatasetName">The specified name of the result dataset.</param>
      <param name="dissolveParameter">The specified dissolving parameter setting.</param>
      <returns>The result vector dataset.</returns>
      <exception cref="T:System.ArgumentException">The dataset type specified by sourceDataset is not line or region.</exception>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.Eliminate(SuperMap.Data.DatasetVector,System.Double,System.Double,SuperMap.Analyst.SpatialAnalyst.EliminateMode,System.Boolean)">
      <summary>
            Merges the tiny polygons. The specified tiny polygons that has smaller area will be merged to the adjacent polygon.
            </summary>
      <param name="sourceDataset">The specified dataset to be merged. Only vector region dataset is support. If you specify other type of dataset, an exception will be thrown.</param>
      <param name="regionTolerance">The specified tolerance of the minimum polygon. It has the same unit with the area calculated by the system (SMAREA field). The polygon, if its area is less than the SMAREA field value, will be eliminated. If the value is greater than 0, the value less than 0 will throw an exception.</param>
      <param name="vertexTolerance">The specified vertex tolerance. It has the same unit with the dataset performed the elimination of the tiny polygons. If the distance between two vertex is less than the tolerance, the two vertex can be merged into one vertex automatically. If the value is greater than 0, the value less than 0 will throw an exception.</param>
      <param name="eliminateMode">The specified elimination mode for the tiny polygons. Currently, only <see cref="F:SuperMap.Analyst.SpatialAnalyst.EliminateMode.EliminateByArea">EliminateMode.EliminateByArea</see> is supported, that is to say, the tiny polygons are merged to the large polygon nearby.</param>
      <param name="isDeleteSingleRegion">Specify whether to delete the isolate tiny polygons. Delete them, if true; otherwise, false.</param>
      <returns>True if it is merged successfully; false otherwise.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.DualLineToCenterLine(SuperMap.Data.Recordset,System.Double,System.Double,SuperMap.Data.Datasource,System.String)">
      <summary>
             Extracts the center lines from the dual-line recordset according to the specified width.
            </summary>
      <param name="sourceRecordset">The specified dual-line recordset. The recordset type must be line or region.</param>
      <param name="maxWidth">The specified maximum width of the dual lines. Its value must be greater than 0. It has the same unit with the dual-line recordset.</param>
      <param name="minWidth">The specified minimum width of the dual lines. Its value must be greater than or equal to 0. It has the same unit with the dual-line recordset.</param>
      <param name="outputDatasource">Datasource for storing the output center line datasets.</param>
      <param name="outputDatasetName">The name of the output center line dataset.</param>
      <returns>The output center line dataset is a line dataset.</returns>
      <exception cref="T:System.ArgumentException">maxWidth &lt;=0, or minWidth &lt; 0.</exception>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.RegionToCenterLine(SuperMap.Data.Recordset,SuperMap.Data.Datasource,System.String)">
      <summary>
            Extracts the center line of the region dataset. It is generally used for extracting the center lines of the rivers.
            </summary>
      <param name="regionRecordset">The specified region recordset whose center line is to be extracted.</param>
      <param name="outputDatasource">Datasource for storing the output datasets.</param>
      <param name="outputDatasetName">The specified name of the result dataset.</param>
      <returns>The extracted center line dataset is a 2D line dataset.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.RegionToCenterLine(SuperMap.Data.GeoRegion)">
      <summary>
            Extracts the center line of the region object. It is generally used for extracting the center lines of the rivers.
            </summary>
      <param name="sourceRegion">The specified region object whose center line will be extracted.</param>
      <returns>The extracted center line is a 2D line object.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.RegionToCenterLine(SuperMap.Data.GeoRegion,SuperMap.Data.Point2D,SuperMap.Data.Point2D)">
      <summary>
            Extracts the center line of the region object according to the specified start and end point. It is generally used for extracting the center lines of the rivers.
            </summary>
      <param name="sourceRegion">The specified region object whose center line will be extracted.</param>
      <param name="pointFrom">The start point of the specified center line to be extracted.</param>
      <param name="pointTo">The end point of the specified center line to be extracted.</param>
      <returns>The extracted center line is a 2D line object.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.AutoCompletePolygon(SuperMap.Data.DatasetVector,SuperMap.Data.Rectangle2D,SuperMap.Data.GeoLine)">
      <summary>
            Auto build regions by topology.
            </summary>
      <param name="regionDataset">The referenced region dataset.</param>
      <param name="bounds">Bounds.</param>
      <param name="geoLine">Line objects needed when regions are completed.</param>
      <returns>Returns the result object array.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.AggregatePoints(SuperMap.Data.DatasetVector,System.Double,SuperMap.Data.Unit,System.Int32,SuperMap.Data.Datasource,System.String,System.String)">
      <summary>
            For clustering the point dataset, use the density cluster arithmetic. Return the cluster type or the polygon.
            </summary>
      <param name="pointDataset">The input point dataset.</param>
      <param name="distance">Density cluster radius.</param>
      <param name="unit">The unit of density cluster radius.</param>
      <param name="minPilePointCount">The range of density cluster point count. It should be larger than or equal to 2. The larger the range is, the cluster condition is more strict. The recommended value is 4.</param>
      <param name="outDatasource">The datasource of result region dataset. If resultRegionDatasetName parameter is not null, the outDatasource must be valid.</param>
      <param name="resultRegionDatasetName">Result region dataset name. If this parameter is valid, it will cluster the point object to region object; if it is null, it will not create the region dataset. This parameter and resultClassFieldName will be valid at least.</param>
      <param name="resultClassFieldName">pointDataset is used to store result cluster type fields of density clsuetr. If it isn't null, it should be the legal fields in the point dataset. If this parameter is valid, the cluster type will be saved in the field. This parameter and resultRegionDatasetName should be one valid.</param>
      <returns>a boolean, true if successful; Otherwise returns false.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.EdgeMatch(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.EdgeMatchParameter)">
      <summary>
            Sheet Join.
            </summary>
      <param name="sourceDataset"> Border matching source dataset. It is only 2D line dataset.</param>
      <param name="targetDataset">Border matching target dataset. It is only 2D line dataset. It has the same coordinate system with border matching source data.</param>
      <param name="edgeMatchParameter">The border matching parameter class.</param>
      <returns>Whether the border matching is successful.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.Generalization.LineAttachRegion(SuperMap.Data.GeoLine,SuperMap.Data.GeoRegion,System.Collections.Generic.List{SuperMap.Data.GeoRegion},System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
             Line to region. This interface is primarily used for land data management.
            </summary>
      <param name="geoLine">The line object to be processed.</param>
      <param name="geoRegion">The rgion object to be processed.</param>
      <param name="listRegionCompare">The region object to be compared.</param>
      <param name="toleranceLineAttachRegion">Indicates that while matching line to region, the end pint of line will snap to nodes within the node tolerance. If the tolerance from end point of line to the node is less than toleranceLineAttachRegion, the end point of the line will snap to the node; otherwise, the end point of line will snap to the line segment of region, and will insert foot point on the region. If such nearest foot point does not exist, the line will still snap to region.</param>
      <param name="toleranceRegionMerge">Indicates the tolerance for inserting node among regions, and tolerance for finding repeat lines among regions.</param>
      <param name="toleranceChange">It will return false if the maximum distance between the new line and the old line is bigger than specified tolerance. The tolerance value can be less than or be 0, which means that it will not compare the distance between the two lines.</param>
      <param name="isUsePreProcess">Whether to pre-process the data. It generally is set to be true to ensure the data quality.</param>
      <returns>Return true if processed successfully; false otherwise.</returns>
    </member>
    <member name="E:SuperMap.Analyst.SpatialAnalyst.Generalization.Stepped">
      <summary>
            The event is trigged when the process bar is activated.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo">
      <summary>
            The info class of raster histogram in every segmentation.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo.#ctor">
      <summary>
            The Constructor.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo.RangeMaxValue">
      <summary>
            Gets the maximum value in interval segmentation.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo.RangeMinValue">
      <summary>
            Gets the minimum value in interval segmentation.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo.MaxValue">
      <summary>
            Gets the content maximum value in interval segmentation.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo.MinValue">
      <summary>
            Gets the content minimum value in interval segmentation.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.HistogramSegmentInfo.Count">
      <summary>
            Gets the content count in interval segmentation.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.IsoLineResult">
      <summary>
            The raster extracting the isolines result class. This class is used to get the grid values corresponding to isoline objects and line objects.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.IsoLineResult.Value">
      <summary>Gets the isoline object grid value.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.IsoLineResult.IsoLine">
      <summary>Gets the isoline object.</summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.IsoRegionResult">
      <summary>
            The raster extracting the isoregions result class. This class is used to get the grid values corresponding to isoregion objects and line objects.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.IsoRegionResult.MaxZ">
      <summary>Gets the maximum value of the isoregion object.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.IsoRegionResult.MinZ">
      <summary>Gets the minimum value of the isoregion object.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.IsoRegionResult.IsoRegion">
      <summary>Gets the isoregion object.</summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShape">
      <summary>
            Neighborhood shape base class.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShape.ShapeType">
      <summary>
            Gets the neighborhood shape type.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShape.UnitType">
      <summary>
            Gets or sets the unit type of the neighborhood shape parameter.
            </summary>
      <value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.NeighbourUnitType.Cell">NeighbourUnitType.Cell</see>.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus">
      <summary>
            The Annulus Neighborhood Shape Class. Inherits from the <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShape">NeighbourShape</see> class.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus.#ctor">
      <summary>
            Creates a new NeighbourShapeAnnulus object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus)">
      <summary>
            Constructs a new object identical to the given NeighbourShapeAnnulus object.
            </summary>
      <param name="shape">The specified NeighbourShapeAnnulus object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus.InnerRadius">
      <summary>
            Gets or sets the inner radius of the annular neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus.OuterRadius">
      <summary>
            Gets or sets the outer radius of the annular neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeAnnulus.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeCircle">
      <summary>
            The circle Neighborhood Shape Class. Inherits from the <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShape">NeighbourShape</see> class.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeCircle.#ctor">
      <summary>
            Creates a new NeighbourShapeCircle object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeCircle.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourShapeCircle)">
      <summary>
            Creates a new object identical to the given NeighbourShapeCircle object.
            </summary>
      <param name="shape">
      </param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeCircle.Radius">
      <summary>
            Gets or sets the circular of the sector neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeCircle.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle">
      <summary>
            The Rectangle Neighborhood Shape Class. Inherits from the <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShape">NeighbourShape</see> class.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle.#ctor">
      <summary>
            Creates a new NeighbourShapeRectangle object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle)">
      <summary>
            Initializes a new instance of the NeighbourShapeRectangle class which is a copy of the specified NeighbourShapeRectangle object.
            </summary>
      <param name="shape">The specified NeighbourShapeRectangle object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle.Height">
      <summary>
            Gets or sets the hight of the rectangle neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeRectangle.Width">
      <summary>
            Gets or sets the width of the rectangle neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge">
      <summary>
            The pie neighborhood statistics analysis parameter, inherits from the  <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShape">NeighbourShape</see> class.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge.#ctor">
      <summary>
            Creates a new NeighbourShapeWedge object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge)">
      <summary>
            Initializes a new instance of the NeighbourShapeWedge class which is a copy of the specified NeighbourShapeWedge object.
            </summary>
      <param name="shape">The specified NeighbourShapeWedge object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge.StartAngle">
      <summary>
            Gets or sets the start angle of the sector neighborhood. The unit is degree. 0° is the horizontally right direction, and the rotation angle is clockwise.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge.EndAngle">
      <summary>
            Gets or sets the end angle of the pie neighborhood. The unit is degree. 0° is the horizontally right direction, and the rotation angle is clockwise.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeWedge.Radius">
      <summary>
            Gets or sets the radius of the sector neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter">
      <summary>
            The NeighbourStatisticsAnnulusParameter class, inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter">NeighbourStatisticsParameter</see>. This class provides necessary parameters for the annulus neighborhood statistics, such as inner radius, outer radius, shape type, etc.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter">
      <summary>
            The NeighbourStatisticsParameter class. This class provides parameters for neighborhood statistics, such as statistics mode, unit type, source dataset, target datasource, etc.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.TargetDatasetName">
      <summary>
            Gets or sets the name of the result dataset.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.TargetDatasource">
      <summary>
            Gets or sets the datasource for storing the output datasets.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.IsIgnoreNoValue">
      <summary>
            Gets or sets whether the no value should be ignored.
            </summary>
      <value>The default value is true.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.SourceDataset">
      <summary>
            Gets or set the source dataset to be analyzed.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.StatisticsMode">
      <summary>
            Gets or sets the statistics types of the neighborhood analysis.
            </summary>
      <value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Sum">GridStatisticsMode.Sum</see>.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter.UnitType">
      <summary>
            Gets or sets the unit type of the neighborhood statistics.
            </summary>
      <value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.NeighbourUnitType.Cell">NeighbourUnitType.Cell</see>.</value>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter.#ctor">
      <summary>
            Creates a new NeighbourStatisticsAnnulusParameter object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter)">
      <summary>
            Constructs a new object identical to the given NeighbourStatisticsAnnulusParameter object.
            </summary>
      <param name="parameter">The specified NeighbourStatisticsAnnulusParameter object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter.InnerRadius">
      <summary>
            Gets or sets the inner radius of the annular neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter.OuterRadius">
      <summary>
            Gets or sets the outer radius of the annular neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsAnnulusParameter.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsCircleParameter">
      <summary>
            The NeighbourStatisticsCircleParameter class, inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter">NeighbourStatisticsParameter</see>. This class provides necessary parameters for the circle neighborhood statistics, such as radius, shape type, etc.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsCircleParameter.#ctor">
      <summary>
            Creates a new NeighbourStatisticsCircleParameter object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsCircleParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsCircleParameter)">
      <summary>
            Creates a new object identical to the given NeighbourStatisticsCircleParameter  object.
            </summary>
      <param name="parameter">
      </param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsCircleParameter.Radius">
      <summary>
            Gets or sets the circular of the sector neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsCircleParameter.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter">
      <summary>
            The NeighbourStatisticsRectangleParameter class, inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter">NeighbourStatisticsParameter</see>. This class provides necessary parameters for the rectangle neighborhood statistics, such as width, height, shape type, etc.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter.#ctor">
      <summary>
            Creates a new NeighbourStatisticsRectangleParameter object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter)">
      <summary>
            Constructs a new object identical to the given NeighbourStatisticsRectangleParameter object.
            </summary>
      <param name="parameter">The specified NeighbourStatisticsRectangleParameter object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter.Height">
      <summary>
            Gets or sets the hight of the rectangle neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsRectangleParameter.Width">
      <summary>
            Gets or sets the width of the rectangle neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter">
      <summary>
            The NeighbourStatisticsWedgeParameter class, inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter">NeighbourStatisticsParameter</see>. This class provides necessary parameters for the wedge neighborhood statistics, such as start angle, end angle, radius, shape type, etc.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter.#ctor">
      <summary>
            Creates a new NeighbourStatisticsWedgeParameter object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter)">
      <summary>
            Constructs a new object identical to the given NeighbourStatisticsWedgeParameter  object.
            </summary>
      <param name="parameter">The specified NeighbourStatisticsWedgeParameter object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter.ShapeType">
      <summary>
            Gets the neighborhood type.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter.StartAngle">
      <summary>
            Gets or sets the start angle of the sector neighborhood. The unit is degree. 0° is the horizontally right direction, and the rotation angle is clockwise.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter.EndAngle">
      <summary>
            Gets or sets the end angle of the pie neighborhood. The unit is degree. 0° is the horizontally right direction, and the rotation angle is clockwise.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsWedgeParameter.Radius">
      <summary>
            Gets or sets the radius of the sector neighborhood, and its unit is decided by the attribute of UnitType.
            </summary>
      <value>The default value is 0.0.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NetworkEdge">
      <summary>
            The network arc object represents the network relation, which is composed by line object, unique identifier of line object and the unique identifiers of the head and the tail nodes.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NetworkEdge.#ctor">
      <summary>
            Constructs a new NetworkEdge object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NetworkEdge.#ctor(SuperMap.Data.Geometry,SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID)">
      <summary>
            Constructs a new NetworkEdge object according to the network arc object and network arc identifier.
            </summary>
      <param name="geoEdge">The specified network arc line object.</param>
      <param name="networkEdgeID">The specified network arc identifier object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkEdge.Edge">
      <summary>
            Gets or sets the network arc line object.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkEdge.NetworkEdgeID">
      <summary>
            Gets or sets the network arc ID object.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID">
      <summary>
            Network arc  identification object, which is identified by the arc in network relationship uniquely and composed by the unique arc start and end points.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID.#ctor">
      <summary>
            Constructs a new NetworkEdgeID object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new NetworkEdgeID object by specifying the arc unique identifier, arc unique start point and arc unique end point.
            </summary>
      <param name="edgeID">The specified unique identifier of network arc line object.</param>
      <param name="fromNodeID">The specified unique identifier of network arc line object start point.</param>
      <param name="toNodeID">The specified unique identifier of network arc line object end point.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID.EdgeID">
      <summary>
            Gets or sets the unique identifier of network arc line object.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID.FromNodeID">
      <summary>
            Gets or sets the specified unique identifier of network arc line object start point.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID.ToNodeID">
      <summary>
            Gets or sets the specified unique identifier of network arc line object end point.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.NetworkNode">
      <summary>
            The node object in the arc network relation, represented by the unique identifier of the point and node objects in the network arc relationship.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NetworkNode.#ctor">
      <summary>
            Constructs a new NetworkNode object.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.NetworkNode.#ctor(SuperMap.Data.Geometry,System.Int32)">
      <summary>
             Constructs a new NetworkNode object according to the node object and node unique identifier.
            </summary>
      <param name="geoNode">The specified Node object.</param>
      <param name="nodeID">The unique identifier of the specified node object.</param>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkNode.Node">
      <summary>
            Gets or sets the network node object.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.NetworkNode.NodeID">
      <summary>
            Gets or sets the unique identifier of the network node object.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.OverlayResult">
      <summary>
            Superimpose the analysis result class. This class can be used to obtain the geometric object result of the overlay analysis and its corresponding source geometry object index and target geometry object index.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.OverlayResult.Geometry">
      <summary>
            Get the result of the geometric object of the overlay analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.OverlayResult.SourceIndex">
      <summary>
            Gets the source geometry object index corresponding to the geometry object result of the overlay analysis.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.OverlayResult.TargetIndex">
      <summary>
            Gets the target geometry object index corresponding to the geometric object result of the overlay analysis.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.PathLineResult">
      <summary>
            The result class of the shortest path analysis of the distance raster. Gets the result route and the cost of the shortest path analysis by this class.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.PathLineResult.PathLine">
      <summary>
            Gets the shortest route that is a 2D vector line object.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.PathLineResult.Cost">
      <summary>
            Gets the cost of the shortest route.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType">
      <summary>
            This enumeration defines the file type constant for the clip and output of the grid data.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.TIF">
      <summary>
            Exports the clip results as TIFF file.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.IMG">
      <summary>
            Exports the clip results as Erdas Image file. 
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.SIT">
      <summary>
            Exports the clip results as SuperMap Image Tower (SIT) file. 
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.BMP">
      <summary>
            Exports the clip results as BMP file.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.JPG">
      <summary>
            Exports the clip results as JPG file.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.PNG">
      <summary>
            Exports the clip results as PNG file.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.GIF">
      <summary>
            Exports the clip results as GIF file.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.SolarRadiation">
      <summary>
            The solar radiation class. This class is used to calculate the solar radiation on surface based on DEM.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.SolarRadiation.AreaSolarRadiation(SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter,SuperMap.Data.Datasource,System.String,System.String,System.String,System.String)">
      <summary>
            Calculates the area solar radiation, i.e., the solar radiation for every grid in DEM.
            </summary>
      <param name="sourceDatasetGrid">The DEM grid dataset which needs to calculate the solar radiation.</param>
      <param name="parameter">The solar radiation parameter.</param>
      <param name="targetDatasource">Datasource for storing the output data.</param>
      <param name="totalGridName">The specified name of the result dataset for the total radiation.</param>
      <param name="directGridName">The specified name of the result dataset for the direct radiation.</param>
      <param name="diffuseGridName">The specified name of the result dataset for the diffuse radiation.</param>
      <param name="durationGridName">The specified name of the result dataset for the direct radiation duration. Optional. Null is allowed.</param>
      <returns>The result solar radiation object.</returns>
    </member>
    <member name="E:SuperMap.Analyst.SpatialAnalyst.SolarRadiation.Stepped">
      <summary>
            The event is trigged when the process bar is activated.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter">
      <summary>
            The solar radiation parameter class. It is used to set parameters of solar radiation calculation.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.#ctor">
      <summary>
            Creates a new instance of the SolarRadiationParameter.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.Dispose">
      <summary>
            Releases all resources that the object occupies.
            </summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.Latitude">
      <summary>
            Gets or sets the average latitude of the calcualtion area.
            </summary>
      <value>The default value is 45, and range is [-90,90]</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.TimeMode">
      <summary>
            Gets or sets the time mode.
            </summary>
      <value>The default value is SolarTimeMode.MultiDays.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.DayStart">
      <summary>
            Gets or sets the start date. This property is the specified date if the time mode is WithinDay.
            </summary>
      <value>The default value is 5, and range is (0,365].</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.DayEnd">
      <summary>
            Gets or sets the end date.
            </summary>
      <value>The default value is 160, and range is (0,365].</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.HourStart">
      <summary>
            Gets or sets the start hour.
            </summary>
      <value>The default value is 0, and the range is [0.24].</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.HourEnd">
      <summary>
            Gets or sets the end hour. The end hour must be greater than the start hour.
            </summary>
      <value>The default value is 24, and the range is [0.24].</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.DayInterval">
      <summary>
            Gets or sets the date interval. The unit is in days.
            </summary>
      <value>The default value is 5. It must be greater than 0.</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.HourInterval">
      <summary>
            Gets or sets the hour interval. The unit is in hours.
            </summary>
      <value>The default value is 0.5, and range is (0.24].</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.Transmittance">
      <summary>
            Gets or sets the air transmittance of solar radiation.
            </summary>
      <value>The default value is 0.5, and the range is [0.1].</value>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationParameter.ZFactor">
      <summary>
            Gets or sets the elevation zooming factor.
            </summary>
      <value>The default value is 1.0. It must be greater than 0.</value>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.SolarRadiationResult">
      <summary>The solar radiation result class. This class is used to get the total radiation grid, direct radiation grid, diffuse radiation grid and solar duration grid. The unit of radiation is kwh/m2. For the solar radiation calculation, please see the <see cref="T:SuperMap.Analyst.SpatialAnalyst.SolarRadiation">SolarRadiation</see> class.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationResult.TotalDatasetGrid">
      <summary>Gets the total radiation grid dataset.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationResult.DirectDatasetGrid">
      <summary>Gets the direct radiation grid dataset.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationResult.DiffuseDatasetGrid">
      <summary>Gets the diffuse radiation grid dataset.</summary>
    </member>
    <member name="P:SuperMap.Analyst.SpatialAnalyst.SolarRadiationResult.DurationDatasetGrid">
      <summary>Gets the direct duration grid dataset.</summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.SolarTimeMode">
      <summary>
            This enumeration defines the solar radiation time mode.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.SolarTimeMode.WithinDay">
      <summary>
            Single day mode. It calculates the solar radiation within one day. You should specify the start time, end time and the date.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.SolarTimeMode.MultiDays">
      <summary>
            Multiple-day mode. It calculates the solar radiation in multiple days. You should specify the start time, end time, start date and end date.
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType">
      <summary>
            Defines the constants of the comparison types.
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType.Less">
      <summary>
            Less than
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType.LessOrEqual">
      <summary>
            Less than or equal to
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType.Equal">
      <summary>
            Equal to
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType.Greater">
      <summary>
            Greater than
            </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType.GreaterOrEqual">
      <summary>
            Greater than or equal to
            </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.ComputeType">
      <summary>This enumeration defines the constants representing the types of calculation modes in least-cost path grid analyses.</summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.ComputeType.Cell">
      <summary>
        <para>Cell path. A path is generated for each grid cell corresponding with the target object.</para>
        <para>As shown in the figure below, the red point is the source, and the black-frame polygon is the target. Performing the grid shortest route analysis by this way will get the shortest path denoted by the blue cell in the figure.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.ComputeType.Zone">
      <summary>
        <para>Zone path. A path is generated for each grid region corresponding with the target object.</para>
        <para>As shown in the figure below, the red point is the source, and the black-frame polygon is the target. Performing the grid shortest route analysis by this way will get the shortest path denoted by the blue cell in the figure.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:SuperMap.Analyst.SpatialAnalyst.ComputeType.All">
      <summary>
        <para>Single path. Only one path is generated for all grid cells. This path is the one with the least cost among all the paths connecting the entire target area dataset.</para>
        <para>As shown in the figure below, the red point is the source, and the black-frame polygon is the target. Performing the grid shortest route analysis by this way will get the shortest path denoted by the blue cell in the figure.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="T:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst">
      <summary>
            The ConversionAnalyst class. It is used to convert data between vector and raster.
            </summary>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.VectorToRaster(SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter)">
      <summary>
             Converts raster to vector using specified parameters.
             </summary>
      <param name="parameter">The specified vector to raster parameter setting.</param>
      <returns>The result raster dataset.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.RasterToVector(SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter)">
      <summary>
             Converts vector to raster using specified parameters.
             </summary>
      <param name="parameter">The specified vector to raster parameter setting.</param>
      <returns>The result vector dataset.</returns>
    </member>
    <member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.RasterBoundaryRegion(SuperMap.Data.Dataset)">
             <summary>
             Extracts the raster extent face of the data portion of the raster dataset.
             </summary>
             <param name="sourceDataset">Specified raster dataset to be processed. </param>
             <returns>Grid range faces. </returns>
         </member>
         <member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.RasterBoundaryLine(SuperMap.Data.Dataset)">
             <summary>
             Extracts the raster extent line of the data portion of the raster dataset.
             </summary>
             <param name="sourceDataset">Specified raster dataset to be processed. </param>
             <returns>Grid range lines. </returns>
         </member><member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.ThinRaster(SuperMap.Data.Dataset,System.Int32,System.Double,SuperMap.Data.Datasource,System.String)"><summary>
             Thins the raster. It is used generally before transforming the raster line data into vector line data.
             </summary><param name="sourceDataset">The specified dataset for thinned. The image dataset is supported.</param><param name="backOrNoValue">The specified background color or no-value for cells.</param><param name="backOrNoValueTolerance">The tolerance of the raster background color, or the no-value tolerance.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The result dataset.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.AnalystSetting"><summary>
            Gets or sets the GridAnalysisSetting.
            </summary></member><member name="E:SuperMap.Analyst.SpatialAnalyst.ConversionAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter"><summary>
            The ConversionAnalystParameter class.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.#ctor"><summary>
            Constructs a new ConversionParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter)"><summary>
            Initializes a new instance according to the specified ConversionParameter object.
            </summary><param name="parameter">The specified ConversionParameter object.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.BackOrNoValue"><summary>
            Gets or sets the background color or no values. It is only invalid when converting raster to vector.
            </summary><value>The default value is -9999.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.BackOrNoValueTolerance"><summary>
            Gets or sets the tolerance of the background color or no values. It is only supported when converting raster to vector.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.CellSize"><summary>
            Gets or sets the cell size of the result raster dataset. It is only supported when converting vector to raster. Its unit is same with the coordinate system unit of the output raster dataset. The output raster dataset has a same coordinate system with the vector dataset to be converted.
            </summary><value>The default value is L/500, where L is the length of the diagonal line of the rectangle corresponding to the extent of the source dataset.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SpecifiedValue"><summary>
            Gets or sets the specified raster value when converting to vector according to the value.
            </summary><value>The default value is -999999.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SpecifiedValueTolerance"><summary>
            Gets or sets the specified raster value tolerance when converting to vector according to the value. It is only supported when setting <see cref="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SpecifiedValue">SpecifiedValue</see>.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.ClipRegion"><summary>
            Gets or sets the valid region of the conversion.
            </summary><value>The default value is null. In other words, the analysis extent is set by the user.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.TargetDatasetType"><summary>
            Gets or sets the result vector dataset type. It can be point, line, or region. It is supported only when converting to vector.
            </summary><value>The default value is <b>DatasetType.Point</b>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.TargetDatasource"><summary>
            Gets or sets the datasource for storing the output datasets.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.TargetDatasetName"><summary>
            Gets or sets the name of the result dataset, an exception will thrown if not set.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.PixelFormat"><summary>
            Gets or sets the pixel format of the result raster dataset. It is only supported when converting vector to raster.
            </summary><value>The default value is <b>PixelFormat.Single</b>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SmoothDegree"><summary>
            Gets or sets smooth degree. It is supported only when raster converts to vector, and SmoothMethod is not <see cref="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.None">SmoothMethod.None</see>.
            </summary><value>The default value is 0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SmoothMethod"><summary>
            Gets or sets the smooth method. It is supported only when raster converts to vector.
            </summary><value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.None">SmoothMethod.None</see>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SourceDataset"><summary>
            Gets or sets the dataset to convert or thinning. An exception will be throw if not set.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.IsThinRaster"><summary>
            Gets or sets whether to fine raster before conversion. It is supported only when raster converts to vector.
            </summary><value>The default value is true.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.ValueFieldName"><summary>
            Gets or sets the fields in the vector dataset that stores the raster value. An exception will thrown if not set.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.CostPathLineResult"><summary>The CostPathLineResult class for grid distance analyses. It is outdated. Now we use the <see cref="T:SuperMap.Analyst.SpatialAnalyst.PathLineResult">PathLineResult</see> class.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CostPathLineResult.CostPathLineDataset"><summary>Gets the vector dataset containing the least-cost path.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CostPathLineResult.Cost"><summary>Gets the total cost of the least-cost path.</summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.CutFillResult"><summary>
            The CutFillResult class.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CutFillResult.FillArea"><summary>
            Gets the filled area in the cut-and-fill analysis result. The unit is meter. If the cut-and-fill grid dataset has a geographic coordinate system, this value is an approximate transform.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CutFillResult.FillVolume"><summary>
            Gets the filled volume in the cut-and-fill analysis result. The unit is square meter * cut-and-fill grid value unit (elevation unit).
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CutFillResult.CutArea"><summary>
            Gets the cut area in the cut-and-fill analysis result. The unit is meter. If the cut-and-fill grid dataset has a geographic coordinate system, this value is an approximate transform.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CutFillResult.CutVolume"><summary>
            Gets the cut volume in the cut-and-fill analysis result. The unit is square meter * cut-and-fill grid value unit (elevation unit).
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CutFillResult.RemainderArea"><summary>
            Gets the area that doesn't be cut or filled. The unit is meter. If the cut-and-fill grid dataset has a geographic coordinate system, this value is an approximate transform.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.CutFillResult.CutFillGridResult"><summary>
            Gets the result dataset of a cut and fill analysis.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.DissolveParameter"><summary>The DissolveParameter class.</summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.#ctor"><summary>The default constructor for constructing a new DissolveParameter object.</summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.DissolveParameter)"><summary>Creates a new instance of the DissolveParameter object that is identical with the specified DissolveParameter.</summary><param name="dissolveParameter">The specified DissolveParameter object.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.IsPreProcess"><summary>Gets or sets whether to do topology preprocessing.</summary><value>The default value is true, i.e., topology is to be built.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.IsNullValue"><summary>Gets or sets whether to process the objects whose dissolving field values are null.</summary><value>The default value is false, indicating that the objects whose dissolving field values are null are not processed.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.DissolveType"><summary>Gets or sets the dissolve type.</summary><value>The default value is DissolveType.Single.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.Tolerance"><summary>Gets or sets the dissolve tolerance. It has the same unit with the dataset to be dissolved.</summary><value>The default value is the default tolerance set for the current dataset to be processed.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.FilterString"><summary>Gets or sets the filter expression for dissolving objects in a dataset. Only the objects meeting this condition are to be dissolved.</summary><value>The default value is String.Empty, i.e., there is no filter condition.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.FieldNames"><summary>Gets or sets the set of names of the dissolving fields.</summary><value>The default value is String.Empty, i.e., there are no dissolving fields.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.StatisticsFieldNames"><summary>Gets or sets the set of names of the statistical fields.</summary><value>The default value is String.Empty, i.e., there are no statistical fields.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.StatisticsTypes"><summary>Gets or sets the collection of the statistics field types. It corresponds to <see cref="P:SuperMap.Analyst.SpatialAnalyst.DissolveParameter.StatisticsFieldNames">StatisticsFieldNames</see>.</summary><value>The default value is String.Empty, i.e., there are no statistical fields.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.DissolveType"><summary>This enumeration defines the constants representing the dissolving types. Also see <see cref="T:SuperMap.Analyst.SpatialAnalyst.DissolveParameter">DissolveParameter</see>.</summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.DissolveType.OnlyMultiPart"><summary><para>Group. Groups objects with the same dissolving field values to form a compound object.</para><para>In the figure below, an area filled with the same color represents one object. The left figure shows the original region dataset with 3 region objects, A, B, and C. Assume that the Name field values of the objects are all the same. A DissolveType.OnlyMultiPart method with the Name field as the dissolving field results in 1 compound objects (D) as shown in the right figure. This compound object is composed of three sub-objects (D1, D2, and D3).</para><para></para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.DissolveType.Single"><summary><para>Dissolve. Merges objects that have the same dissolving field values and are topologically adjacent to form a simple object.</para><para>In the figure below, an area filled with the same color represents one object. The left figure shows the original region dataset with 3 region objects, A, B, and C. Assume that the Name field values of the objects are all the same. A DissolveType.Single method with the Name field as the dissolving field results in 2 simple objects (C and D) as shown in the right figure. Only the objects that have the same dissolving field values and are topologically adjacent are merged.</para><para></para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.DissolveType.MultiPart"><summary><para>Group after Dissolve. Merges objects that have the same dissolving field values and are topologically adjacent to form a simple object, and then groups objects that have the same dissolving field values but are not topologically adjacent to form a compound object.</para><para>In the figure below, an area filled with the same color represents one object. The left figure shows the original region dataset with 3 region objects, A, B, and C. Assume that the Name field values of the objects are all the same. A DissolveType.MultiPart method with the Name field as the dissolving field results in 1 compound object (D) as shown in the right figure. This compound object is composed of 2 sub-objects (D1 and D2).</para><para></para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst"><summary>The DistanceAnalyst class. This class provides straight-line distances grid analysis, cost distance grid analysis, and shortest path analysis.</summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.StraightDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)"><summary>
            Generates the straight-line distance grid according to the specified parameter, as well as the straight-line direction grid and the straight-line allocation grid. 
            </summary><param name="parameter">The specified parameters for a distance grid analysis.</param><returns>The result of the straight-line distance grid analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)"><summary>Generates the straight-line cost grid according to the specified parameter, as well as the cost direction grid and the cost allocation grid.</summary><param name="parameter">The specified parameters for a distance grid analysis.</param><returns>The result of the cost distance analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)"><summary>
            Generates the surface distance grid according to the specified parameter, as well as the surface direction grid and the surface allocation grid.
            </summary><param name="parameter">The specified parameters for a distance grid analysis.</param><returns>The result of the surface distance analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostPath(SuperMap.Data.Dataset,SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.ComputeType,SuperMap.Data.Datasource,System.String)"><summary>Analyzes the shortest distance grid from the specified point to the closest source according to the cost distance grid and the cost direction grid.</summary><param name="sourceDataset">A dataset that contains target, which can be point, line, region or raster dataset. For the raster dataset, the cells that do not label the source must be no value.</param><param name="distanceDataset">The specified parameter for the cost distance grid dataset.</param><param name="directionDataset">The specified parameter for the cost direction grid dataset.</param><param name="computeType">The specified calculation method for the least-cost path grid analysis.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The name of the dataset that has the shortest path.</param><returns>The grid dataset containing the least-cost path result.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostPathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.SmoothMethod,System.Int32,SuperMap.Data.Datasource,System.String)"><summary>Calculates the least cost path between the source and the target according to the specified parameter. It is outdated. Now we use <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostPathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.SmoothMethod,System.Int32,SuperMap.Data.Datasource,System.String)">CostPathLine</see>.</summary><param name="sourcePoint">The specific source point.</param><param name="targetPoint">The specified target point.</param><param name="costGrid">The specified cost grid. It is used to determine the cost to pass each cell. For more information, see the introduction of the <see cref="T:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst">DistanceAnalyst</see> class.</param><param name="smoothMethod">The specified smoothing method for processing the least-cost paths.</param><param name="smoothDegree">The value of smooth degree is decided by the smooth method. For more information, see the <see cref="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SmoothDegree">SmoothDegree</see> attribute of ConversionAnalystParamete.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The name of the dataset that has the least-cost path.</param><returns>The result of the shortest path analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostPathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)"><summary>
            Calculates the least cost path between the source and the target (a 2D vector object).
            </summary><param name="sourcePoint">The specific source point.</param><param name="targetPoint">The specified target point.</param><param name="parameter">The specified parameters for a distance grid analysis.</param><returns>The analysis results of the least cost path.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)"><summary>
             Calculates the shortest surface length (a 2D vector object) between the source and the target according to the specified parameters.
             </summary><param name="sourcePoint">The specific source point.</param><param name="targetPoint">The specified target point.</param><param name="parameter">The specified parameters for a distance grid analysis.</param><returns>The result of the shortest path analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.PathLine(SuperMap.Data.Point2D,SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.SmoothMethod,System.Int32)"><summary>
            Analyzes the shortest path from the specified point to the closest source according to the distance grid and the direction grid.
            </summary><param name="targetPoint">The specified target point.</param><param name="distanceDataset">The specified distance grid. It can be the cost distance grid or  surface distance grid.</param><param name="directionDataset">The specified direction grid. It can be the cost direction grid or surface direction grid.</param><param name="smoothMethod">The specified smoothing method for processing the shortest route.</param><param name="smoothDegree">The value of smooth degree is decided by the smooth method. For more information, see the <see cref="P:SuperMap.Analyst.SpatialAnalyst.ConversionAnalystParameter.SmoothDegree">SmoothDegree</see> attribute of ConversionAnalystParamete.</param><returns>The result of the shortest path analysis.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.AnalystSetting"><summary>
            Gets or sets the basic analysis environment for grid analyses.
            </summary></member><member name="E:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter"><summary>The DistanceAnalystParameter class is used to set the parameters for distance raster analysis such as creating a distance raster and calculating the shortest route between two points.</summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.#ctor"><summary>The default constructor for constructing a new DistanceAnalystParameter object.</summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)"><summary>Initializes a new instance of the DistanceAnalystParameter class which is identical with the specified DistanceAnalystParameter object.</summary><param name="parameter">The given DistanceAnalystParameter object.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.CellSize"><summary>Gets or Sets the resolution of the output dataset. It is the optional parameter to create distance raster.</summary><value><para>If the source is vector, then the default resolution is L/500, where L is the length of the diagonal line of the rectangle corresponding to the extent of the source dataset.</para><para>If the source is grid, then the default resolution of "StraightDistance" is same with the source grid, the default resolution of "CostDistance' is same with the cost grid, and the default resolution of "SurfaceDistance" is same with the surface grid.</para></value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.MaxDistance"><summary> Gets or sets the maximum distance for generating the distance grid. The cells with distances greater than this value will have null values in the result dataset.</summary><value> The default value is -1, indicates that it is not restrict to distance.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.SourceDataset"><summary>
            Gets or sets the source dataset for generating the distance grid.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.CostGrid"><summary>
            Gets or sets the cost grid, whose value can not be negative. It only supports <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">CostDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostPathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">CostPathLine</see>.
            </summary><exception cref="T:System.ArgumentException">When calling <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">CostDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostPathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">CostPathLine</see>, this object is null.</exception></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.SurfaceGrid"><summary>
            Gets or sets the surface grid. It only supports <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfacePathLine</see>.
            </summary><exception cref="T:System.ArgumentException">When calling <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfacePathLine</see>, this object is null.</exception></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.TargetDatasource"><summary>Gets or sets the datasource used for storing the output dataset. When generating the distance grid, it can be used for setting the target datasource by this attribute.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.DistanceGridName"><summary>Gets or sets the name for distance grid dataset. It is the required parameter for generating distance grid.</summary><exception cref="T:System.ArgumentException">When calling <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.StraightDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">StraightDistance</see>, <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.CostDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">CostDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> to create distance grid, the object is null.</exception></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.DirectionGridName"><summary>Gets or sets the name for directional grid dataset. It is the optional parameters for generating distance grid. Directional grid dataset only can be generated when you specify its name.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.AllocationGridName"><summary>Gets or sets the name for allocation grid dataset. It is the optional parameters for generating distance grid. Allocation grid dataset only can be generated when you specify its name.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.MaxUpslopeDegree"><summary>
            Gets or sets the maximum upslope angle (max-up-slope angle). Its unit is degree, and the range of its value is greater than or equal to 0. It only supports <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfacePathLine</see>.
            </summary><value>The default value is 90°, which is not to consider the upslope angle.</value><exception cref="T:System.ArgumentException">When calling <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> or <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfacePathLine</see>, it needs to specify a value less than 0.</exception></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.MaxDownslopeDegree"><summary>
            Gets or sets the max-down-slope angle (its unit is degree, and the range of its value is greater than or equal to 0). It only supports <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> and <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfacePathLine</see>.
            </summary><value>The default value is 90°, which is not to consider the downslope angle.</value><exception cref="T:System.ArgumentException">When calling <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfaceDistance(SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfaceDistance</see> or <see cref="M:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst.SurfacePathLine(SuperMap.Data.Point2D,SuperMap.Data.Point2D,SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter)">SurfacePathLine</see>, it needs to specify a value less than 0.</exception></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.PathLineSmoothMethod"><summary>
            Gets or sets the method for smoothing the result route when calculating the shortest route between two points (source and target).
            </summary><value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.None">SmoothMethod.None</see> (i.e., do not perform the smoothing operation).</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.PathLineSmoothDegree"><summary>
            Gets or sets the smooth degree for smoothing the result route when calculating the shortest route between two points (source and target). Note: it only supports the attribute values of <see cref="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystParameter.PathLineSmoothMethod">PathLineSmoothMethod</see> are beyond <see cref="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.None">SmoothMethod.None</see>.
            </summary><value>The default value is 0.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystResult"><summary>The DistanceAnalystResult class  is used to get the distance, direction and cost grid generated by the distance analyst. For more information, see <see cref="T:SuperMap.Analyst.SpatialAnalyst.DistanceAnalyst">DistanceAnalyst</see>.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystResult.DistanceDatasetGrid"><summary>Gets the distance grid dataset.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystResult.DirectionDatasetGrid"><summary>Gets the direction dataset.</summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.DistanceAnalystResult.AllocationDatasetGrid"><summary>Gets the allocation dataset.</summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.EventDissolveType"><summary>
            This enumeration defines the constant of the event dissolve.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.EventDissolveType.EventOverlap"><summary>
            Overlap. If the two events with the same route ID and dissolve field value are overlapped, the two events are merged as one event.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.EventDissolveType.EventConcatenate"><summary>
            Concatenate. If the two events with the same route ID and dissolve field value and they concatenates end to end, the two events are merged as one event.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.EventOverlayType"><summary>
            This enumeration defines the constant of the event overlay.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.EventOverlayType.EventIntersect"><summary>
            Intersect. The intersection of the two events that have the same route ID is treated as a new event.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.EventOverlayType.EventUnion"><summary>
            Union. The event union is complex. First, the intersection is treated as a part of the event. Then, all events (including input and overlap events) are cut by intersection, and the events beyond the intersection are treated as the other part of the event.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.EventType"><summary>
            This enumeration class defines the constants of the event types.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.EventType.LineEvent"><summary>
            Line Event
            <para>Line event is on a segment of route. Such as the building year of the road, the traffic state, the pipe diameter, the segment of pipe that leaks. As shown below, in the line event table, every line event (record) has a route ID, FromM and ToM are used to describe the location of the event.</para><ul><li>FromM: The measure value of the start point of the event on the route.</li><li>ToM: The measure value of the end point of the event on the route.</li></ul><para></para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.EventType.PointEvent"><summary>
            Point Event
            <para>Point event is on a accurate location on a route. For instance, the traffic accident on road, the tachymeter on freeway, the valve on pipe, etc. In point event table, every point event (a record) has a corresponding route ID, the location of the event (the measure field) is stored in a field.</para><para></para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.Exponent"><summary>
            This enumeration defines the constants representing the orders of the trend surface equations in Universal Kriging interpolations. The trend existing among the points in a sample point dataset can be simulated with a function or a polynomial.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.Exponent.exp1"><summary><para>A first-order equation, indicating that a first-order trend exists in the sample point dataset.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.Exponent.exp2"><summary><para>A second-order equation, indicating that a second-order trend exists in the sample point dataset.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ExtremumInfo"><summary>
            The ExtremumInfo class. This class provides the result of the <see cref="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.FindExtremum(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,System.Int32)">FindExtremum</see> method. The result contains the maximum cell value and the minimum cell value as well as the corresponding coordinates.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ExtremumInfo.MaxValue"><summary>
            Gets the maximum cell value found.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ExtremumInfo.MinValue"><summary>
            Gets the minimum cell value found.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ExtremumInfo.MaxPoints"><summary>
            Gets the coordinates of the maximum value found.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ExtremumInfo.MinPoints"><summary>
            Gets the coordinates of the minimum value found.
            
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst"><summary>
            The GeneralizeAnalyst class is used to process a grid dataset to make its resolution coarser such as grid aggregation, reclassifying and resampling.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Aggregate(SuperMap.Data.DatasetGrid,System.Int32,SuperMap.Analyst.SpatialAnalyst.AggregationType,System.Boolean,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            Aggregates raster data, and returns result raster dataset.
            </summary><param name="sourceDataset">The specified raster dataset to be aggregated.</param><param name="scale">The ratio between the result and the input. The value should be integer greater than 1.</param><param name="aggregationType">The specified aggregation type.</param><param name="isExpanded">Whether to handle with expanded area. If the original raster is not the integral times of the scale, the border may appear expanded area.</param><param name="isIgnoreNoVaule">The aggregation for no-value data. If true, no-value data is not calculated on aggregation; if false, the aggregation result is on value.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The result raster dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Reclass(SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable,SuperMap.Analyst.SpatialAnalyst.ReclassPixelFormat,SuperMap.Data.Datasource,System.String)"><summary>
            Reclassifies raster data, and returns result raster dataset.
            </summary><param name="sourceDataset">The specified grid dataset to be reclassified.</param><param name="reclassMappingTable">The specified reclassification mapping table.</param><param name="reclassPixelFormat">The specified storage type of the cell values in the result grid dataset.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The result raster dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Slice(SuperMap.Data.DatasetGrid,SuperMap.Data.Datasource,System.String,System.Int32,System.Int32)"><summary>
            The natural separation weight classification is applied to the distribution of uneven data.
            </summary><param name="sourceDataset">Specifies a raster data set for reclassifying operations.</param><param name="targetDatasource">Specifies the data source for storing the result data set.</param><param name="targetDatasetName">The specified result data set name.</param><param name="numberZones">The number of regions that reclassifications the raster data set.</param><param name="baseOutputZones">Results the values of the lowest area of the grid data set.</param><returns>Results raster data set.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Resample(SuperMap.Data.Dataset,System.Double,SuperMap.Analyst.SpatialAnalyst.ResampleMode,SuperMap.Data.Datasource,System.String)"><summary>
            Resamples raster data, and returns the result dataset.
            </summary><param name="sourceDataset">The specified dataset used for the resampling supports image dataset, including the multiband image at present.</param><param name="newCellSize">The specified cell size of the result grid.</param><param name="resampleMode">The specified algorithm for resampling.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The result dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Replace(SuperMap.Data.DatasetGrid,System.Collections.Generic.Dictionary{System.Double,System.Double},SuperMap.Data.Datasource,System.String)"><summary>
             The lookup and replacement of grid data
             </summary><param name="sourceDataset">The specified grid dataset to be extracted.</param><param name="replaceTable">The specified lookup table used for searching and replacing the corresponding relationship is a dictionary relationship object, and its key represents the source cell value and its value represents the result cell value.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name for the result  grid dataset.</param><returns>The result grid dataset after performing the lookup and replacement operation.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Dissolve(SuperMap.Data.DatasetVector,SuperMap.Data.Datasource,System.String,SuperMap.Analyst.SpatialAnalyst.DissolveParameter)"><summary>
            Vector data fusion, outdated, returns the results vector dataset. Now we use <see cref="M:SuperMap.Analyst.SpatialAnalyst.Generalization.Dissolve(SuperMap.Data.DatasetVector,SuperMap.Data.Datasource,System.String,SuperMap.Analyst.SpatialAnalyst.DissolveParameter)">Dissolve</see>.
            </summary><param name="sourceDataset">The specified dataset to be dissolved that must be line dataset or region dataset.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><param name="dissolveParameter">The specified dissolving parameter setting.</param><returns>The result vector dataset.</returns><exception cref="T:System.ArgumentException">The dataset type specified by sourceDataset is not line or region.</exception></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Eliminate(SuperMap.Data.DatasetVector,System.Double,System.Double,SuperMap.Analyst.SpatialAnalyst.EliminateMode,System.Boolean)"><summary>
            Merges the tiny polygons (the specified tiny polygons that has smaller area will be merged to the adjacent polygon). It has been abolished. Now we use <see cref="M:SuperMap.Analyst.SpatialAnalyst.Generalization.Eliminate(SuperMap.Data.DatasetVector,System.Double,System.Double,SuperMap.Analyst.SpatialAnalyst.EliminateMode,System.Boolean)">Eliminate</see>.
            </summary><param name="sourceDataset">The specified dataset to be merged. Only vector region dataset is support. If you specify other type of dataset, an exception will be thrown.</param><param name="regionTolerance">The specified tolerance of the minimum polygon. The polygon, if its area is less than the SmArea field value, will be eliminated. If the value is greater than 0, the value less than 0 will throw an exception.</param><param name="vertexTolerance">The specified vertex tolerance. If the distance between two vertex is less than the tolerance, the two vertex can be merged into one vertex automatically. If the value is greater than 0, the value less than 0 will throw an exception.</param><param name="eliminateMode">The specified elimination mode for the tiny polygons. Currently, only <see cref="F:SuperMap.Analyst.SpatialAnalyst.EliminateMode.EliminateByArea">EliminateMode.EliminateByArea</see> is supported, that is to say, the tiny polygons are merged to the large polygon nearby.</param><param name="isDeleteSingleRegion">Specify whether to delete the isolate tiny polygons. Delete them, if true; otherwise, false.</param><returns>True if it is merged successfully; false otherwise.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.AnalystSetting"><summary>
            Gets or sets an environment set object of the raster analysis.
            </summary></member><member name="E:SuperMap.Analyst.SpatialAnalyst.GeneralizeAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter"><summary>
            The GenerateEventTableParameter class. This class provides the parameter settings for the event table. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.#ctor"><summary>
            Creates a new object of GenerateEventTableParameter. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.#ctor(SuperMap.Data.DatasetVector,SuperMap.Data.Datasource,System.String)"><summary>
            Constructs a new object of GenerateEventTableParameter based on the specified parameters.
            </summary><param name="eventDataset">The specified event dataset which can be point or line. </param><param name="outputDatasource">The specified datasource for storing the event table. </param><param name="outputDatasetName">The specified name of the result dataset. </param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.EventDataset"><summary>
            Gets or sets the event dataset that generates the event table. It can be point or line dataset. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.RouteIDField"><summary>
            Gets or sets the route ID field in the route dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.MeasureField"><summary>
            Gets or sets the measure field of the result event table. Only when the event table is point, it is valid. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.MeasureStartField"><summary>
            Gets or sets the start measure field of the result event table. Only when the event is line event, it is valid. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.MeasureEndField"><summary>
            Gets or sets the end measure field of the result event table. Only when the event is line event, it is valid. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.HasDistanceField"><summary>
            Gets or sets whether to create distance field in the result event table for storing distance from point to the route. Only when the event is point, it is valid. 
            </summary><value>The default value is true, that is to create distance field in the output event table.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.FindingClosestRoute"><summary>
            Gets or sets whether to find the closest route. Only when the event is point, it is valid.
            </summary><value>The default is true, only finding the closest route.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.RetainingAllFields"><summary>
            Gets or sets whether to retain all fields (except system fields) in the result event table.
            </summary><value>The default value is true. That is to retain all fields (except system fields) in the result event table.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.OutputDatasource"><summary>
            Gets or sets the datasource for storing the result event table. If null, the result event table will be automatically stored in the datasource where the route is.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.OutputDatasetName"><summary>
            Gets or sets the name of the result event table. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.OutputDatasetRouteField"><summary>
            Gets or sets the route ID field of the result event table. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.SearchRadius"><summary>
            Gets or sets the search radius. The radius based on this value is called the search range. If points or lines is out of the range, the record cannot be created in the event table. Its unit is determined by the <see cref="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.SearchRadiusUnit">SearchRadiusUnit</see> property.
            </summary><value>The default value is 1e-10.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter.SearchRadiusUnit"><summary>
            Gets or sets the search radius unit.
            </summary><value>The default value is Unit.Meter.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter"><summary>
            The GenerateRoutesParameter class. This class provides generate mode, measure field, measure offset, measure ratio and output parameters of the route dataset (<see cref="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.GenerateRoutes(SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter)">LinearReferencing.GenerateRoutes</see>). 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.#ctor"><summary>
            Creates a new object of GenerateRoutesParameter. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.#ctor(SuperMap.Data.Datasource,System.String,System.String)"><summary>
            Constructs a new InterpolationIDWParameter object according to given parameters. 
            </summary><param name="outputDatasource">The specified result datasource. </param><param name="outputDatasetName">The name of the result route dataset. </param><param name="routeIDField">The specified result route ID field. </param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.MeasureOffset"><summary>
            Gets of sets the route measure offset. It has the same unit with the measure value.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.Ratio"><summary>
            Gets or sets the measure ratio, used for unit conversion. 
            </summary><value>The default value is 1.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.Tolerance"><summary>
            Gets or sets the tolerance. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByPoint">GenerateType.ByPoint</see>. It has the same unit with the dataset used for generating the route.
            </summary><value>The default value is 1e-10.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.IgnoringGaps"><summary>
            Gets or sets whether to ignore gaps.
            </summary><value>The default is true.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.OutputDatasource"><summary>
            Gets or sets the datasource used to store the result route dataset. If set to null, the resulting route will be automatically stored in the datasource where the line dataset is. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.OutputDatasetName"><summary>
            Gets or sets the name of the result route dataset. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.Type"><summary>
            Gets or sets the method of generating the route dataset. 
            </summary><value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByLength">GenerateType.ByLength</see>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.ErrorInfoField"><summary>
            Gets or sets the error information field. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByPoint">GenerateType.ByPoint</see>.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.LineRouteIDField"><summary>
            Gets or sets the route ID field for line dataset. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.PointRouteIDField"><summary>
            Gets or sets the route ID field of the reference point dataset. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByPoint">GenerateType.ByPoint</see>. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.MeasureField"><summary>
            Gets or sets the measure field saved in the reference point dataset for generating the route. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByPoint">GenerateType.ByPoint</see>.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.MeasureStartField"><summary>
            Gets or sets the measure start field saved in the line dataset for generating the route. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByDoubleFields">GenerateType.ByDoubleFields</see>.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.MeasureEndField"><summary>
            Gets or sets the measure end field saved in the line dataset for generating the route. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.BySingleField">GenerateType.BySingleField</see> or <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByDoubleFields">GenerateType.ByDoubleFields</see>.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.DatasetPoint"><summary>
            Gets or sets the reference point dataset for generating the route. It is valid only when the routing method is <see cref="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByPoint">GenerateType.ByPoint</see>.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter.ToleranceUnit"><summary>
            Gets or sets the unit of the tolerance when generating route by point/line.
            </summary><value>The default value is Unit.Meter.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter"><summary>
            The GenerateSpatialDataParameter class. This class is used to set parameters for converting event table to spatial data. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.#ctor"><summary>
            Creates a new object of GenerateSpatialDataParameter. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.#ctor(SuperMap.Data.DatasetVector,System.String,System.String,System.String)"><summary>
            Constructs a new GenerateSpatialDataParameter object according to given parameters. 
            </summary><param name="eventTable">The point event table. </param><param name="routeIDField">The specified result route ID field. </param><param name="measureField">The measure field, marking routing node weight. </param><param name="outputDatasetName">The specified name of the result dataset. </param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.#ctor(SuperMap.Data.DatasetVector,System.String,System.String,System.String,System.String)"><summary>
            Constructs a new GenerateSpatialDataParameter object according to given parameters. 
            </summary><param name="eventTable">The line event table. </param><param name="routeIDField">The specified result route ID field. </param><param name="measureStartField">The start measure field, marking start node weight. </param><param name="measureEndField">The end measure field, marking the end node weight. </param><param name="outputDatasetName">The specified name of the result dataset. </param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.EventTable"><summary>
            Gets or sets the event table for spatial data.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.RouteIDField"><summary>
            Gets or sets the route ID field for spatial data. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.ReferenceLineM"><summary>
            Gets or sets the route dataset for spatial data.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.MeasureOffsetField"><summary>
            Gets or sets the offset field. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.MeasureField"><summary>
            Gets or sets the measure field for the event table. It is significant only when it is the point event.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.MeasureStartField"><summary>
            Gets or sets the measure start field for the event table. It is significant only when it is the line event.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.EventRouteIDField"><summary>
            Gets or sets the event route ID field for spatial data.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.MeasureEndField"><summary>
            Gets or sets the measure end field for the event table. It is significant only when it is the line event.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.ErrorInfoField"><summary>
            Gets or sets the error information field of the points or lines for describing the error information that the event can not generate its corresponding points or lines.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.OutputDatasetName"><summary>
            Gets or sets the name of the result dataset. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter.RetainedFields"><summary>
            Gets or sets the field set (except system field) of the result spatial data in the event table.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting"><summary>
            The GridAnalystSetting class. It provides the information about the settings of the basic analysis environment prior to a grid analysis.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.#ctor"><summary>
            Constructs a new <see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see> object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.#ctor(SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting)"><summary>
            Initializes a new instance of the GridAnalystSetting class which is identical with the specified WeightFieldInfos.
            </summary><param name="gridAnalystSetting">The specified GridAnalystSetting object.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.BoundsType"><summary>
            Gets or sets the geographic extent type of the result data.
            </summary><value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.BoundsType.Intersection">BoundsType.Intersection</see>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.Bounds"><summary>
            Gets or sets the extent of the result data.
            </summary><value>The default value is Rectangle(0,0,0,0) .</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.CellSize"><summary>
            Gets or sets the cell size of the result raster dataset. Its unit is same with the coordinate system unit of the output grid dataset.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.ValidRegion"><summary>
            Gets or sets the effective analysis region.
            </summary><value>The default value is null. In other words, the analysis extent is set by the user.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.GridOutputNamePrefix"><summary>
            Gets or sets the prefix of the grid dataset.
            </summary><value>The default value is null.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.VectorOutputNamePrefix"><summary>
            Gets or sets the prefix of the vector dataset.
            </summary><value>The default value is null.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.OutputDatasource"><summary>
            Gets or sets the datasource for storing the output datasets.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.IsShowProgress"><summary>
            Gets or sets whether to show progress bar.
            </summary><value>The default value is true.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting.CellSizeType"><summary>
            Gets or sets the cell size type for the result dataset.
            </summary><value>The default value is the minimum cell value in the input grid dataset, i.e., CellSizeType.Min.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode"><summary>
            This enumeration defines the constants of the raster statistics types.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Min"><summary>
            Min
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Max"><summary>
            Max
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Mean"><summary>
            Mean
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Stdev"><summary>
            Standard Deviation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Sum"><summary>
            Total
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Variety"><summary>
            Calculates the variety. It represents the number of the unique values in a certain area when conducting neighborhood statistics or zonal statistics.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Range"><summary>
            Calculates the value domain which is the difference between the minimum value and the maximum value. Currently it only supports zonal statistics.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Majority"><summary>
            Calculates the majority (i.e., the most frequent cell value). If there are multiple most frequent cell values that occur at the same frequency, then it will take the first value it encounters as the most frequent value.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Minority"><summary>
            Calculates the minority (i.e., the cell value with the lowest frequency). If there are multiple lowest frequent cell values that occur at the same frequency, then it will take the first value it encounters as the lowest frequent cell value.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GridStatisticsMode.Median"><summary>
            Calculates the median (put the raster values ​​in an ascending order, and then select the value located in the middle). If the number of the cell values is an even number, then it will take the mean of the two middle values.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType"><summary>
            This enumeration defines the constants representing the types of interpolation methods.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW"><summary>
            Inverse Distance Weighted (IDW) method.
            <para>IDW is using the mean value of the neighboring discrete points to estimate each grid value to generate the grid dataset. It affects the estimate value most when the point is closer to the center of the discrete area. IDW is a simple method, and the speed of this method is a little faster.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.SimpleKriging"><summary>
            Simple Kriging method.
            <para>Simple Kriging is a commonly-used Kriging interpolation method. It assumes that the expected value (mean) of the field values for interpolation is a known constant.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.Kriging"><summary>
            Ordinary Kriging method.
            <para>This method generates the grid dataset by simulating the grid value according to some given points and a certain math functions. It not only can generate a surface, but also can calculate the accuracy of the estimated result. So, this method has a higher precision.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.UniversalKriging"><summary>
            Universal Kriging method.
            <para>Universal Kriging is also a commonly-used Kriging method. For this method, it is assumed that the expected value (mean) of the field values for interpolation is an unknown variable. Universal Kriging is suitable if there is a certain trend existing in the sample data and this trend can be fit with a function or a polynomial.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.RBF"><summary>
            Radial Basis Function (RBF) method.
            <para>This method supposes the variety is smooth, and it has two characteristics: 1. The surface should cross the given points.2. The surface should have the minimum curvature.This method has advantage in creating curve and contour which have higher vision request.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.DENSITY"><summary>
            Dot density interpolation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.BarrierKriging"><summary>
            Barrier Kriging method.
            <para>The method allows setting a barrier dataset, the area which locates will be ignored in the analysis.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter"><summary>
            The InterpolationDensityParameter class, inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter">InterpolationParameter</see>. This class provides necessary parameters for the dot density interpolation algorithm.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter"><summary>
            The InterpolationParameter class.This is the base class of classes used for providing parameters for different interpolations.This class supports the necessary parameters of interpolation, such as resolution, search mode, search radius, the number of expected points, and the bound of the interpolation.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.ToString"><summary>
            Returns a string that represents the current object.The format is ｛Bounds=,ExpectedCount=,Resolution=,SearchMode=,SearchRadius=,Type=｝
            </summary><returns>A string that represents the current object.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.Dispose"><summary>
            Releases all resources that the object occupies.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.Resolution"><summary>
            Gets or sets the resolution of the interpolation.This value can not be larger than the length of the bounds to be analyzed.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.SearchMode"><summary>
            Gets or sets the search mode when interpolating. Please refer to the SearchMode class.
            </summary><value>The default value is <see cref="F:SuperMap.Analyst.SpatialAnalyst.SearchMode.KdTreeFixedCount">SearchMode.KdTreeFixedCount</see>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.SearchRadius"><summary>
            Gets or sets the search radius. Its unit is same with the point dataset or the record dataset for the interpolation. The search radius limits the search range of the points involved in the calculation. When calculating an unknown value of some location, all the sample points within the circular range whose center is the location and radius is the value set by this attribute will be involved in the calculation (i.e., the predicted value of this location is determined by the sample points within this range).
            </summary><value>The default value is 0.0. The maximum search radius is 1.2 times larger than the diagonal of the rectangle within the extent of the point dataset.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.MaxPointCountInNode"><summary>
            Gets or sets the maximum count of interpolation points in each quad when searching with the QuadTree mode. Note: this value must be greater than 0.
            </summary><value>The default value is 50.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.MaxPointCountForInterpolation"><summary>
            Gets or sets the maximum count of interpolation points in each quad when searching with the QuadTree mode. Note: this value must be greater than 0.
            </summary><value>The default value is 200.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.ExpectedCount"><summary>
            Gets or Sets the specified count of points participating in the interpolation analysis. When the search mode is fix radius, it means the min sample points; when the search mode is variable, it means the max sample points.
            </summary><value>The default value is 12.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.Bounds"><summary>
            Gets or sets the bound of the interpolation.It is used to determine the bound of the output dataset.
            </summary><value>The default value is <see cref="P:SuperMap.Data.Rectangle2D.Empty">Rectangle2D.Empty</see>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.Type"><summary>
            Gets the type of the interpolation.Please refer to InterpolationAlgorithmType.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.#ctor"><summary>
            Creates a new InterpolationIDWParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.#ctor(System.Double,System.Double)"><summary>
            Constructs a new InterpolationIDWParameter object according to given parameters.
            </summary><param name="resolution">The specified resolution used in interpolation analysis.</param><param name="searchRadius">Finds the search range when interpolating.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.ToString"><summary>
            Returns a string that represents the InterpolationDensityParameter object.
            </summary><returns>A format string that represents the InterpolationDensityParameter object.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.SearchMode"><summary>
            Sets the searching mode.
            </summary><value>The default value is SearchMode.None.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.MaxPointCountForInterpolation"><summary>
            This class does not support the interface.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.MaxPointCountInNode"><summary>
            It is not supported in this class.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationDensityParameter.Type"><summary>
            Gets the type of Interpolation Algorithm
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter"><summary>
            The InterpolationIDWParameter class, inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter">InterpolationParameter</see>. This class provides the necessary parameters for the Inverse Distance Weighted method. These parameters include the power of the distance, search mode, resolution used in the interpolation, search radius, and etc.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.#ctor"><summary>
            Creates a new InterpolationIDWParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.#ctor(System.Double,SuperMap.Analyst.SpatialAnalyst.SearchMode,System.Double,System.Int32)"><summary>
            Constructs a new InterpolationIDWParameter object according to given parameters.
            </summary><param name="resolution">The specified resolution used in interpolation analysis.</param><param name="mode">Specifies the search mode. Please refer to the SearchMode class.</param><param name="searchRadius">The specified query range.</param><param name="expectedCount">The specified the count of points to be found.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.#ctor(System.Double,SuperMap.Analyst.SpatialAnalyst.SearchMode,System.Double,System.Int32,System.Int32)"><summary>
            Constructs a new InterpolationIDWParameter object according to given parameters.
            </summary><param name="resolution">The specified resolution used in interpolation analysis.</param><param name="mode">Specifies the search mode. Please refer to the SearchMode class.</param><param name="searchRadius">The specified query range.</param><param name="expectedCount">The specified the count of points to be found.</param><param name="power">The specified power of the weight distance.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.ToString"><summary>
            Returns a string that represents the InterpolationIDWParameter object.
            </summary><returns>A string that represents the InterpolationIDWParameter object.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.Power"><summary>
            Gets or Sets the power of the distance.
            </summary><value>The default value is 1.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.SearchMode"><summary>
            Sets the searching mode.
            </summary><value>The default value is SearchMode.None.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.Type"><summary>
            Gets the type of Interpolation Algorithm
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.MaxPointCountForInterpolation"><summary>
            This class does not support the interface.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationIDWParameter.MaxPointCountInNode"><summary>
            It is not supported in this class.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter"><summary>
             The InterpolationKrigingParameter class, which is inherited from the <see cref="T:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter">InterpolationParameter</see> class.
             </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.#ctor"><summary>
            Constructs a new InterpolationKrigingParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType)"><summary>
            Constructs a new InterpolationKrigingParameter object according to given parameters.
            </summary><param name="type">The specified algorithm type for an interpolation analysis.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.#ctor(System.Double,SuperMap.Analyst.SpatialAnalyst.SearchMode,System.Double,System.Int32,SuperMap.Analyst.SpatialAnalyst.VariogramMode)"><summary>
            Constructs a new InterpolationKrigingParameter object according to given parameters.
            </summary><param name="resolution">The specified resolution used in interpolation analysis.</param><param name="searchMode">Finds the search mode when interpolating.</param><param name="searchRadius">Finds the search range when interpolating.</param><param name="expectedCount">The specified count of points participating in the interpolation analysis.</param><param name="variogramMode">The specified mode of variogram.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType,System.Double,SuperMap.Analyst.SpatialAnalyst.SearchMode,System.Double,System.Int32,SuperMap.Analyst.SpatialAnalyst.VariogramMode)"><summary>
            Constructs a new InterpolationKrigingParameter object according to given parameters.
            </summary><param name="type">The specified algorithm type for an interpolation analysis.</param><param name="resolution">The specified resolution used in interpolation analysis.</param><param name="searchMode">Finds the search mode when interpolating.</param><param name="searchRadius">Finds the search range when interpolating.</param><param name="expectedCount">The specified count of points participating in the interpolation analysis.</param><param name="variogramMode">The specified mode of variogram.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.ToString"><summary>
            Returns a string that represents the InterpolationKrigingParameter object.
            </summary><returns>A string that represents the InterpolationKrigingParameter object.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.VariogramMode"><summary>
            Gets or sets the semivariogram used in the Kriging Interpolation Method.It supports the Exponential Variogram Mode, Gaussian Variogram Mode and Spherical Variogram Mode. For more details, please refer to VariogramMode enumeration.
            </summary><value>The default value is VariogramMode .Spherical</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Type"><summary>
            Gets the type of Interpolation Algorithm
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Angle"><summary>
            Gets or sets the rotation angle for the Kriging algorithm. This angle is the anti-clockwise rotation angle of each search extent with reference to the horizontal direction.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Range"><summary>
            Gets or sets the range.The distance of two pairs increase, the semivariogram of those two pairs also increase. Eventually, the increase of the distance can not cause the variogram increase.The distance distance which causes the variogram reach plateau is called range.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Sill"><summary>
            Gets or sets the sill.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Nugget"><summary>
            Gets or sets the nugget value.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Mean"><summary>
            Gets or sets the average of the interpolation field values, i.e., the sum of the interpolation field values of the sample points divided by the sample point count. This attribute only applies to the Simple Kriging method.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.Exponent"><summary>
            Gets or sets the order of the trend surface equation fitting the sample point data for interpolation. First-order and second-order equations are supported. For details, please refer to the <see cref="T:SuperMap.Analyst.SpatialAnalyst.Exponent">Exponent</see> class. This attribute only applies to the Universal Kriging method.
            </summary><value>The default value is 1.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationKrigingParameter.BarrierDataset"><summary>
            Gets or sets the barrier dataset. Only used in the barrier Kriging method.
            </summary><value>The default value is null.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter"><summary>
             InterpolationRBFParameter class provides necessary parameters for Radial Basis Function(RBF) interpolation method,which is inherited from <see cref="T:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter">InterpolationParameter</see> class.
             </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.#ctor"><summary>
            Constructs a new InterpolationRBFParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.#ctor(System.Double,System.Double,System.Double)"><summary>
            Constructs a new InterpolationRBFParameter object according to given parameters.
            </summary><param name="tension">The specified tension coefficient.</param><param name="smooth">The specified smooth coefficient.</param><param name="resolution">The specified resolution used in interpolation analysis.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.#ctor(System.Double,System.Double,System.Double,SuperMap.Analyst.SpatialAnalyst.SearchMode,System.Double,System.Int32)"><summary>
            Constructs a new InterpolationRBFParameter object according to given parameters.
            </summary><param name="tension">The specified tension coefficient.</param><param name="smooth">The specified smooth coefficient.</param><param name="resolution">The specified resolution used in interpolation analysis.</param><param name="mode">The specified search mode used in interpolation analysis.</param><param name="searchRadius">The specified search radius used in interpolation analysis.</param><param name="expectedCount">The specified expected count in interpolation analysis.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.ToString"><summary>
            Returns a string that represents the InterpolationRBFParameter object. The format is { Tension =,Smooth =}.
            </summary><returns>A string that represents the InterpolationRBFParameter object.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.Tension"><summary>
            Gets or sets the tension coefficient.
            </summary><value>The default value is 40.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.Type"><summary>
            Gets the type of Interpolation Algorithm
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.InterpolationRBFParameter.Smooth"><summary>
            Gets or sets the smooth coefficient. Its value domain is [0,1].
            </summary><value>The default value is 0.1.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.Interpolator"><summary>
            Interpolator class,supports interpolation analysis,used for returning the grid dataset created by interpolation analysis.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.Interpolator.Interpolate(SuperMap.Analyst.SpatialAnalyst.InterpolationParameter,SuperMap.Data.DatasetVector,System.String,System.Double,SuperMap.Data.Datasource,System.String,SuperMap.Data.PixelFormat)"><summary>
             Performs interpolation analysis for point dataset,and returns the grid dataset created by the interpolation analysis.
             </summary><param name="parameter">Specifies the parameter of interpolation</param><param name="interpolatedPoint">Specifies the point dataset to be interpolated.</param><param name="zValueFieldName">Stores the field name which value is used in the interpolation analysis.The field of text type is not supported by interpolation analysis.</param><param name="zValueScale">Specifies the zoom scale of the value to be interpolated.</param><param name="targetDatasource">Datasource for storing the output datasets</param><param name="targetDatasetName">Specifies the name of the output dataset.</param><param name="pixelFormat">Specifies the pixel format of the output grid dataset. The parameter can not support the Bit64 pixel format. </param><returns>The grid dataset resulted from interpolation analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.Interpolator.Interpolate(SuperMap.Analyst.SpatialAnalyst.InterpolationParameter,SuperMap.Data.Recordset,System.String,System.Double,SuperMap.Data.Datasource,System.String,SuperMap.Data.PixelFormat)"><summary>
             Performs interpolation analysis for point dataset,and return the grid dataset created by the interpolation analysis.
             </summary><param name="parameter">Specifies the parameter of interpolation</param><param name="interpolatedPointRecordset">Point recordset to be interpolated.</param><param name="zValueFieldName">Stores the field name which value is used in the interpolation analysis.The field of text type is not supported by interpolation analysis.</param><param name="zValueScale">Specifies the zoom scale of the value to be interpolated.</param><param name="targetDatasource">Datasource for storing the output datasets</param><param name="targetDatasetName">Specifies the name of the output dataset.</param><param name="pixelFormat">Specifies the pixel format of the output grid dataset. The parameter can not support the Bit64 pixel format. </param><returns>The grid dataset resulted from interpolation analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.Interpolator.Interpolate(SuperMap.Analyst.SpatialAnalyst.InterpolationParameter,SuperMap.Data.Point2D[],System.Double[],SuperMap.Data.PrjCoordSys,System.Double,SuperMap .Data.Datasource,System.String,SuperMap.Data.PixelFormat)">
            <summary>
            Interpolate the point array and return the analysis results.
            </summary>
            <param name="parameter">Specifies the parameter information required for the interpolation method. </param>
            <param name="points">An array of points that need to be interpolated. </param>
            <param name="values">The value of the point array corresponding to the interpolation analysis. </param>
            <param name="prjCoordSys">The coordinate system of the point array. The resulting data set is also referenced to the coordinate system. </param>
            <param name="zValueScale">The scaling ratio used to interpolate the analysis values. The value participating in the interpolation analysis is multiplied by the parameter value and then interpolated, that is, the value of the interpolation analysis is uniformly expanded or reduced. </param>
            <param name="targetDatasource">The data source used to hold the result dataset. </param>
            <param name="targetDatasetName">Specify the name of the result dataset. </param>
            <param name="pixelFormat">Specifies the pixel format in which the result raster dataset is stored. This parameter does not support the Bit64 pixel format in the method. </param>
            <returns> The raster dataset obtained by interpolation analysis. </returns>
        </member><member name="P:SuperMap.Analyst.SpatialAnalyst.Interpolator.AnalystSetting"><summary>
            Gets or sets an environment set object of the location-allocation analysis.
            </summary></member><member name="E:SuperMap.Analyst.SpatialAnalyst.Interpolator.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.LinearReferencing"><summary>
            The LinearReferencing class. This class provides generateRoutes, calibrateRoutes, generateRouteTable, overlayRouteEvents, dissolveRouteEvents, and generateSpatialData. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.GenerateRoutes(SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.GenerateRoutesParameter)"><summary>
             Generates the route dataset.
             </summary><param name="referenceLine">The specified line dataset that is used to create the route. The dataset must be line dataset. Other types are invalid.</param><param name="parameter">The parameter for generating the route.</param><returns>The created route dataset. </returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.CalibrateRoutes(SuperMap.Data.DatasetVector,System.String,SuperMap.Data.DatasetVector,System.String,System.String,SuperMap.Analyst.SpatialAnalyst.CalibrateOptions,SuperMap.Data.Datasource,System.String)"><summary>
            Calibrates the route dataset.
            </summary><param name="referenceLineM">The specified route dataset to be calibrated. </param><param name="routeIDField">The specified route ID field of the route dataset. For types, see the note of <see cref="T:SuperMap.Analyst.SpatialAnalyst.LinearReferencing">LinearReferencing</see>.</param><param name="calibratePointDataset">The specified point dataset. It must have the measure field. The type is point. </param><param name="calibrateRouteID">The specified route ID field of the reference point dataset. For types, see the note of <see cref="T:SuperMap.Analyst.SpatialAnalyst.LinearReferencing">LinearReferencing</see>. </param><param name="measureField">The specified measure field of the point dataset. For types, see the note of <see cref="T:SuperMap.Analyst.SpatialAnalyst.LinearReferencing">LinearReferencing</see>. </param><param name="options">The calibration options.</param><param name="outputDatasource">The output datasource where the route dataset exists. If null, the dataset will be automatically saved into the route dataset calibrated.</param><param name="outputDatasetName">The name of the result route dataset.</param><returns>The route dataset after calibrated. Return null if failed.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.GenerateEventTable(SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.GenerateEventTableParameter)"><summary>
             Creates the event table. 
             </summary><param name="referenceLineM">The specified reference route dataset that is used to create the event table. The dataset must be route dataset. Other types are invalid.</param><param name="parameter">The parameter for generating event table. </param><returns>An event table. </returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.GenerateSpatialData(SuperMap.Analyst.SpatialAnalyst.GenerateSpatialDataParameter)"><summary>
             Create spatial data by point or line event table. The line event table generates the route dataset. 
             </summary><param name="parameter">The parameter settings.</param><returns>The spatial data built by the event table. </returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.DissolveRouteEvents(SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter,System.String[],SuperMap.Analyst.SpatialAnalyst.EventDissolveType,SuperMap.Data.Datasource,System.String,SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter,System.String[],SuperMap.Analyst.SpatialAnalyst.StatisticsType[],System.Double)"><summary>
             Dissolve event table refers to removing redundant information from the event table, or splitting one event table into severals.
             </summary><param name="inputEventsParameter">The input event parameter.</param><param name="dissolveFields">The dissolve field collection. Only the events with the same attribute value can be dissolved. It supports all the field types (<see cref="T:SuperMap.Data.FieldType">FieldType</see>) besides except the binary (LongBinary).</param><param name="eventDissolveType">The dissolve type.</param><param name="outputDatasource">The datasource for storing the result event table. If null, the result event table is output to the input datasource.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resultEventsParameter">The result dissolve event parameter.</param><param name="statisticFields">The collection of the specified statistics fields which need to get the new values except the dissolve fields. A specified null array denotes that it will not to do statistics for any fields.</param><param name="statisticModes">The statistic modes.</param><param name="tolerance">The specified dissolve tolerance. It has same unit with the value of the dissolving event table.</param><returns>The dissolved output dataset. It returns null if fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.OverlayRouteEvents(SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter,SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter,SuperMap.Analyst.SpatialAnalyst.EventOverlayType,SuperMap.Data.Datasource,System.String,SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter,System.Double,System.Boolean,System.Boolean)"><summary>
             Overlap event table. Overlap two event tables and output one event table, representing union and intersection.
             </summary><param name="inputEventsParameter">The input event parameter.</param><param name="overlayEventParameter">The overlap event parameter.</param><param name="eventOverlayType">The overlapping event type.</param><param name="outputDatasource">The datasource for storing the result event table. If null, the result event table is output to the input datasource.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resultEventsParameter">The result overlap event parameter.</param><param name="tolerance">The specified tolerance used to determine whether the created  line event is a zero-length event. It has same unit with the value of the output event table.</param><param name="isKeepField">It is used to specify whether to keep the attribute field. If true, it will write all the attribute fields except the system fields of the input event table and the overlay event table into the output event table. The field name ends with "_in" is from the input event table, and its name ends with "_over " is from the overlay event table. If false, it will not to write any field into the output event table.</param><param name="isKeepZeroLengthEvents">Whether to keep the zero-length line event. If true, the zero-length event will be written to the result event table; otherwise, false.</param><returns>The overlapping output dataset. Returns null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.RebuildSpatialData(SuperMap.Data.DatasetVector)"><summary>
            When the event table of the dynamic segmentation is changed, the corresponding spatial data will be rebuilt again.
            </summary><param name="eventTable">The event table to rebuild the spatial data.</param><returns>A boolean value denotes whether the rebuild is successful. True if successful; otherwise, false.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.LinearReferencing.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.MathAnalyst"><summary>
             The MathAnalyst class. It provides mathematical operations and functions on one or more grid datasets.
             </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.Plus(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,SuperMap.Data.Datasource,System.String)"><summary>
            The Add operation on grid datasets. It adds cell values from two input grid datasets pair by pair.
            </summary><param name="firstOperand">The specified first grid dataset.</param><param name="secondOperand">The specified second grid dataset.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>A new grid dataset resulted from a Plus operation on grid datasets.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.Minus(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,SuperMap.Data.Datasource,System.String)"><summary>
            The Subtract operation on grid datasets. It subtracts the cell values in the second dataset from the corresponding ones of the first dataset.
            </summary><param name="firstOperand">The specified first grid dataset.</param><param name="secondOperand">The specified second grid dataset.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>A new grid dataset resulted from a Substract operation on grid datasets.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.Multiply(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,SuperMap.Data.Datasource,System.String)"><summary>
            The Multiply operation on grid datasets. It multiplies corresponding cell values in two input grid datasets pair by pair.
            </summary><param name="firstOperand">The specified first grid dataset.</param><param name="secondOperand">The specified second grid dataset.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>A new grid dataset resulted from a Multiply operation on grid datasets.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.Divide(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,SuperMap.Data.Datasource,System.String)"><summary>
            The Divide operation on grid datasets. It divides the cell values in one grid dataset by the corresponding cell values in another grid dataset.
            </summary><param name="firstOperand">The specified first grid dataset.</param><param name="secondOperand">The specified second grid dataset.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>A new grid dataset resulted from a Divide operation on grid datasets.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.Execute(System.String,SuperMap.Data.GeoRegion,SuperMap.Data.PixelFormat,System.Boolean,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            Applies a mathematical expression to grid datasets. Custom expressions are supported. A custom expression can be an arithmetic operation, a conditional operation, a logical operation, a function (common function or trigonometric function), or a composite operation.
            </summary><param name="expression">The custom mathematical expression for a grid operation.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="pixelFormat">The specified cell size of the result dataset.<b>Notes:</b>If the precision of the pixel format specified is lower than the precision of the raster dataset used in the operation, the result may be incorrect.</param><param name="isZip">Whether to compress the result dataset. True denotes compression. Compression encoding mode is determined by the pixel format of the compressed dataset, please see the <see cref="T:SuperMap.Data.EncodeType">EncodeType</see> enumerated type for the relationship between the two.</param><param name="isIgnoreNoValue">Whether to ignore cells with no data.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>The result is a raster dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.ToInt(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,SuperMap.Data.Datasource,System.String)"><summary>
            The ToInt operation on a grid dataset. It performs a rounding operation on the cell values in the input grid dataset.
            </summary><param name="sourceDataset">The specified grid dataset for the integer operation.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>A new grid dataset resulted from the ToInt operation on a grid dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.ToFloat(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion,SuperMap.Data.Datasource,System.String)"><summary>
            The ToFloat operation on a grid dataset. It converts the cell values in the input grid dataset to single-precision floating-point numbers.
            </summary><param name="sourceDataset">The specified grid dataset to be converted to the float type.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>A new grid dataset resulted from performing the ToFloat operation on a grid dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.ExecuteFromXML(System.String,SuperMap.Data.Datasource,System.String)"><summary>
            Reads an XML file to get the grid operation expression and related parameters and then performs the operation.
            </summary><param name="xmlFileName">The XML file storing the grid operation expression and related parameters.</param><param name="targetDatasource">The datasource to store the result dataset. If null, the result is output to this datasource by (<see cref="T:SuperMap.Analyst.SpatialAnalyst.GridAnalystSetting">GridAnalystSetting</see>), otherwise, to the input datasource.</param><param name="targetDatasetName">The specified result dataset.</param><returns>The result is a raster dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.ToXMLFile(System.String,System.String,SuperMap.Data.GeoRegion,SuperMap.Data.PixelFormat,System.Boolean,System.Boolean)"><summary>
            Saves a custom grid operation expression and related parameters as an XML file.
            </summary><param name="xmlFileName">The specified XML file for storing the grid operation expression and related parameters.</param><param name="expression">The custom mathematical expression for a grid operation.</param><param name="userRegion">The valid computing region that user specified. If null, the entire region will be computed. If the extents of those datasets are not identical the computing region the the intersection region of those datasets.</param><param name="pixelFormat">The specified cell size of the result dataset.<b>Notes:</b>If the precision of the pixel format specified is lower than the precision of the raster dataset used in the operation, the result may be incorrect.</param><param name="isZip">Whether to compress the result dataset. True denotes compression. Compression encoding mode is determined by the pixel format of the compressed dataset, please see the <see cref="T:SuperMap.Data.EncodeType">EncodeType</see> enumerated type for the relationship between the two.</param><param name="isIgnoreNoValue">Whether to ignore cells with no data.</param><returns>Returns true if successful, otherwise false.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.AnalystSetting"><summary>
            Gets or sets an environment set object of the raster analysis.
            </summary></member><member name="E:SuperMap.Analyst.SpatialAnalyst.MathAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeType"><summary>
            The enumeration defines the constants for the neighbor shapes.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeType.Rectangle"><summary>
            Rectangle neighborhood.
            <para></para><para>The size of the rectangle neighbor is determined by its width and height, and all cells placed in the rectangle participate in this operation. The default values for width and height are 0 (in geographic units or grid units).</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeType.Circle"><summary>
            Circle neighborhood.
            <para></para><para>The size of the circle neighborhood is determined by the specified radius. All cells placed in or overlapping the circle participate in this operation. The default radius is 0 (in geographic units or grid units).</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeType.Annulus"><summary>
            Annulus neighborhood.
            <para></para><para>The size of the annulus neighbor is determined by both inner radius and outer radius. All cells placed in the annulus participate in this operation. The default both inner radius and outer radius are 0 (in geographic units or grid units). </para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.NeighbourShapeType.Wedge"><summary>
            Wedge neighborhood.
            <para></para><para>The size of the wedge neighborhood is determined by radius, start angle, and end angle. All cells placed in the wedge participate in this operation. The default radius is 0 (in geographic units or grid units), and the default values of start angle and end angle are 0.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.NeighbourUnitType"><summary>
            The enumeration defines the unit type constant for neighborhood analysis.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.NeighbourUnitType.Cell"><summary>
            Raster coordinates, i.e., using the raster data as the neighborhood unit.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.NeighbourUnitType.Map"><summary>
            Geographic coordinates, i.e., using the map unit as the neighborhood unit.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst"><summary><para>The OverlayAnalyst class is used to perform various types of overlay analyses on two input datasets or recordsets. Common overlay analyses include Clip, Erase, Union, Intersect, Identity, Symmetrical difference, Update, etc.</para></summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Clip(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             Clips a vector dataset with another dataset which can be region. The method will clip and remove parts of the first dataset outside the ones of second dataset.
             </summary><param name="dataset">the identifier of the dataset to be clipped (the first dataset). The type of this dataset can be any of the following: point, line, or region.</param><param name="clipDataset">the identifier of the dataset that is used to clip (the second dataset). The type of this dataset must be region.</param><param name="resultDataset">The result vector dataset.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output. The settings of OverlayAnalystParameter object will be invalid in CLIP operation.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Clip(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             Clips a recordset with another recordset which can be region. The method will clip and remove parts of the first recordset outside the ones of second recordset.
             </summary><param name="recordset">The first recordset to be clipped.</param><param name="clipRecordset">The second recordset used to clip the first recordset.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output. The settings of OverlayAnalystParameter object will be invalid in CLIP operation.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Erase(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             Erases a dataset with a region dataset. The method will erase and remove the part of the first dataset inside the second dataset, and the output dataset will keep all the fields of the first dataset, the others will be updated after erasing.
            </summary><param name="dataset">The first dataset to be erased.</param><param name="eraseDataset">The second dataset used to erase the first dataset.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Erase(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             This is a type of overlay analysis involving erasing objects in a recordset. The process is to clip and delete the first recordset’s object parts that are contained in the second recordset. The geographical coordinate systems of the erasing recordset, the recordset to be erased, and the result dataset must be the same.
            </summary><param name="recordset">The first recordset to be erased, which must be point, line and region type.</param><param name="eraseRecordset">The second recordset used to erase the first recordset, which only is the region type.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Identity(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            Computes an intersection operation on the first dataset and second dataset and uses the intersection to perform the union operation on the first dataset.
             </summary><param name="dataset">The first dataset to be identity.</param><param name="identityDataset">The second dataset used to erase the first dataset.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Identity(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             This is a type of overlay analysis involving determining identity of objects in a recordset. In the process, all the operated recordset's objects as well as the objects resulted from intersecting the operated recordset with the operating recordset are reserved in the result dataset. The geographical coordinate systems of the operating recordset, the operated recordset, and the result dataset in an Identity analysis must be the same.
             </summary><param name="recordset">The first recordset to be identity, which can be point, line, or region.</param><param name="identityRecordset">The second recordset used to erase the first recordset, which must be region.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Intersect(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             Performs an intersection analysis to the input dataset. Removes the portions of the input dataset outside the intersected dataset and the intersected portions will be split and kept in output.
             </summary><param name="dataset">The input dataset to be intersected, which must be point, line and region type.</param><param name="intersectDataset">The intersected dataset used to intersect the first dataset, which only is the region type.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Intersect(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            This is a type of overlay analysis involving intersecting objects on recordsets. In the process, the intersected recordset’s object parts that are not contained in the intersecting dataset are clipped and deleted. The geographical coordinate systems of the intersecting recordset, the intersected recordset, and the result dataset must be the same.
            </summary><param name="recordset">The input recordset to be intersected, which must be point, line and region type.</param><param name="intersectRecordset">The intersected recordset used to intersect the first recordset, which only is the region type.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.XOR(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary><para>Performs symmetry difference analysis on two region datasets.</para></summary><param name="dataset">The dataset to be performed symmetric difference analysis. It can be region dataset.</param><param name="xorDataset">The dataset used to perform symmetric difference analysis.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.XOR(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             This is a type of overlay analysis involving the EXCLUSIVE OR operation on two recordsets. The geographical coordinate systems of the operating dataset, the operated recordset, and the result recordset in an XOR analysis must be the same.
            </summary><param name="recordset">The recordset to be performed symmetric difference analysis. It can be region type.</param><param name="xorRecordset">The recordset used to perform symmetric difference analysis.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Union(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            Performs the union overlay operation on two region datasets, with all the objects from the operated dataset and the operating dataset retained in the result dataset. The intersect and split operations are also performed on the intersected parts during the process.
            </summary><param name="dataset">The dataset to be performed union analysis. It can be region dataset.</param><param name="unionDataset">The dataset used to perform union analysis. It can be region dataset.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Union(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             This is a type of overlay analysis involving the Union operation on two region recordsets. All the objects in the operating recordset and the operated recordset are reserved in the result dataset, with the intersected object parts split into separate objects. The geographical coordinate systems of the operating recordset, the operated recordset, and the result dataset in a Union analysis must be the same.
            </summary><param name="recordset">The recordset to be performed union analysis. It can be region type.</param><param name="unionRecordset">The recordset used to perform union analysis. It can be region recordset.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Update(SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
              Performs an update analysis on two region datasets. The update analysis is the process that the second dataset replace the area they overlap in the first dataset, namely, performed a erasing and pasting operations.
            </summary><param name="dataset">The first dataset to be updated, which must be region dataset.</param><param name="updateDataset">The second dataset used to update the first dataset, which must be region type.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Update(SuperMap.Data.Recordset,SuperMap.Data.Recordset,SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            This is a type of overlay analysis involving updating one region recordset with another. An updating operation is a process of replacing the part in the recordset to be updated with the corresponding overlapped part in the updating recordset. It is a process of an erasing operation followed by a pasting operation. The geographical coordinate systems of the updating recordset, the recordset to be updated, and the result dataset must be the same.
            </summary><param name="recordset">The first recordset to be updated, which must be region type.</param><param name="recordsetOperate">The first recordset to be updated, which must be region type.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Clip(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            Clips a vector dataset with the array of the region objects. The method will clip and remove parts of the dataset outside the ones of the array of the region objects.
            </summary><param name="dataset">The dataset to be clipped.</param><param name="clipGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output. The settings of OverlayAnalystParameter object will be invalid in CLIP operation.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Erase(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            This is a type of overlay analysis involving erasing objects in a dataset. It is a process of clipping and erasing the operated dataset’s object parts that are contained in objects in the Geometry array. The geographical coordinate systems of the clipping Geometry array, the dataset to be clipped, and the result dataset must be the same.
            </summary><param name="dataset">The dataset to be erased.</param><param name="eraseGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Identity(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            This is a type of overlay analysis involving determining identity of objects in a dataset. In the process, all the operated dataset's objects as well as the objects resulted from intersecting the operated dataset and the operating Geometry array are reserved in the result dataset. The geographical coordinate systems of the operating Geometry array, the operated dataset, and the result dataset in an Identity analysis must be the same.
            </summary><param name="dataset">The first dataset to be identity.</param><param name="identityGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Intersect(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
             This is a type of overlay analysis involving the intersecting operation. In the process, the operated dataset’s object parts that are not contained in the objects in the intersecting region Geometry array are clipped and deleted. The geographical coordinate systems of the intersecting region Geometry array, the intersected dataset, and the result dataset must be the same.
             </summary><param name="dataset">The input dataset to be intersected, which must be point, line and region type.</param><param name="intersectGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.XOR(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            Performs symmetry difference analysis. Symmetry difference analysis erases the common portion of  the objects of the dataset and the array of the region objects, then saves the rest part.
            </summary><param name="dataset">The dataset to be performed symmetric difference analysis. It must be a region dataset.</param><param name="xorGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Union(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            This is a type of overlay analysis involving the Union operation on a region dataset and a region Geometry array. All the objects in the operating region Geometry array and the operated dataset are reserved in the result dataset, with the intersected object parts split into separate objects. The geographical coordinate systems of the operating region Geometry array, the operated dataset, and the result dataset in a Union analysis must be the same.
            </summary><param name="dataset">The dataset to be performed union analysis. It must be region dataset.</param><param name="unionGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Update(SuperMap.Data.DatasetVector,SuperMap.Data.Geometry[],SuperMap.Data.DatasetVector,SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            This is a type of overlay analysis involving updating a region dataset with a region Geometry array. An updating operation is a process of replacing the parts on the operated dataset with the corresponding overlapped parts of objects in the updating Geometry array. It is a process of an erasing operation followed by a pasting operation. The geographical coordinate systems of the updating region Geometry array, the dataset to be updated, and the result dataset must be the same.
            </summary><param name="dataset">The dataset to be updated, which must be region dataset.</param><param name="updateGeometries">The array of the region objects.</param><param name="resultDataset">The vector dataset stored output.</param><param name="parameter">The parameter of overlay analysis, which is used to set fields to be kept in output.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Erase(SuperMap.Data.Geometry[],SuperMap.Data.Geometry[],System.Double)"><summary>
            An overlay analysis for erasing an array of source geometry objects, cropping and deleting objects contained in the array of target geometry objects in the array of erased geometry objects.
            </summary><param name="eraseSourceGeometries">An array of erased geometric objects whose geometry object type must be a polygon geometry object.</param><param name="eraseTargetGeometries">An array of geometric objects for erasure, and the geometric objects in the array must be polygon geometry objects.</param><param name="tolerance">Node tolerance.</param><returns>Overlays the result array and returns an array if successful, otherwise returns null.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Identity(SuperMap.Data.Geometry[],SuperMap.Data.Geometry[],System.Double)"><summary>
            Used to perform the same way of superposition analysis on the source geometry object array. The superimposed analysis result array retains all objects of the geometric object array of the same operation and the geometric object array of the same operation intersects with the target geometric object array used for the same operation. Object.
            </summary><param name="identitySourceGeometries">An array of geometric objects that are subject to the same operation. The geometry object type in the array must be a polygon geometry object.</param><param name="identityTargetGeometries">An array of geometric objects used to perform the same operation. The geometric objects in the array must be polygon geometry objects.</param><param name="tolerance">Node tolerance.</param><returns>Overlays the result array and returns an array if successful, otherwise returns null.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Intersect(SuperMap.Data.Geometry[],SuperMap.Data.Geometry[],System.Double)"><summary>
             The overlay analysis of the intersection mode is performed, and the objects of the geometric object array that are intersected and analyzed by the intersecting superposition analysis are not included in the object of the target geometric object array for intersecting the superposition analysis, and are deleted.
             </summary><param name="intersectSourceGeometries">An array of geometric objects that are intersected and analyzed by the intersection. The geometric objects in the array must be polygon geometry objects.</param><param name="intersectTargetGeometries">An array of geometric objects for intersection, and the geometry objects in the array must be polygon geometry objects.</param><param name="tolerance">Node tolerance.</param><returns>Overlays the result array and returns an array if successful, otherwise returns null.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.XOR(SuperMap.Data.Geometry[],SuperMap.Data.Geometry[],System.Double)"><summary>
            The source geometry object array is subjected to a symmetric difference analysis operation using the target geometric object array, that is, the intersection is inverted. The result of the operation is that for each polygon object in the array of source geometry objects, the portion that intersects the object in the array of target geometry objects is removed, leaving the rest.
            </summary><param name="xORSourceGeometries">An array of geometric objects for symmetric difference analysis. The geometric objects in the array must be polygon geometry objects.</param><param name="xORTargetGeometries">An array of geometric objects for symmetric difference analysis, and the geometric objects in the array must be polygon geometry objects.</param><param name="tolerance">Node tolerance.</param><returns>Overlays the result array and returns an array if successful, otherwise returns null.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Union(SuperMap.Data.Geometry[],SuperMap.Data.Geometry[],System.Double)"><summary>
            Overlay analysis of the source geometry object array with the target geometry object array, the overlay analysis result array holds the source geometry object array of the merged overlay analysis and all objects in the target geometry object array for the merge overlay analysis, and intersects Part of the intersection and segmentation operations.
            </summary><param name="unionSourceGeometries">An array of geometric objects that are merged and analyzed, and the geometric objects in the array must be polygon geometry objects.</param><param name="unionTargetGeometries">An array of geometric objects used to merge overlay analysis. The geometry objects in the array must be polygon geometry objects.</param><param name="tolerance">节点容限。</param><returns>Overlays the result array and returns an array if successful, otherwise returns null.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Update(SuperMap.Data.Geometry[],SuperMap.Data.Geometry[],System.Double)"><summary>
           The overlay analysis of the source geometry object array using the target geometry object array update method, the update operation is to replace the overlapped part of the updated source geometry object array with the target geometry object array for updating, which is a process of first erasing and pasting. .
            </summary><param name="updateSourceGeometries">The array of geometric objects that are updated by the overlay analysis. The geometry objects in the array must be polygon geometry objects.</param><param name="updateTargetGeometries">An array of geometric objects used to update the overlay analysis. The geometry objects in the array must be polygon geometry objects.</param><param name="tolerance">Node tolerance.</param><returns>Overlays the result array and returns an array if successful, otherwise returns null.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.OverlayAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter"><summary>
            The OverlayAnalystParameter class. The class mainly provides the output dataset field selection for overlay analysis.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter.#ctor"><summary>
            Initializes a new instance of the OverlayAnalystParameter class.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter)"><summary>
            Initializes a new instance of the OverlayAnalystParameter class which is identical with the specified OverlayAnalystParameter object.
            </summary><param name="overlayAnalystParameter">The specified OverlayAnalystParameter object.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter.OperationRetainedFields"><summary>
            Gets or sets the field names of overlay dataset or the Recordset which are maintained in the output dataset when performing overlay analysis.
            </summary><returns>Returns a field collection.</returns><value>The default value is System.String[].</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter.SourceRetainedFields"><summary>
            Gets or sets the field names of input dataset or the Recordset which are maintained in the output dataset when performing overlay analysis.
            </summary><returns>Returns a field collection.</returns><value>The default value is System.String[].</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.OverlayAnalystParameter.Tolerance"><summary>
            Gets or sets the tolerance of the overlay analysis.
            </summary><value>The default value is 0.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ProfileResult"><summary>
            The ProfileResult class is used to get the results of profile analysis, which include profile lines and sampling points.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProfileResult.#ctor"><summary>
            The Constructor.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ProfileResult.Profile"><summary>
            Gets the profile line. The X coordinate of its vertex represents the straight-line distance from the current sampling point to the start point of the specified line. The Y coordinate represents the elevation of the current sampling data. For more informatiion, see <see cref="M:SuperMap.Analyst.SpatialAnalyst.CalculationTerrain.CalculateProfile(SuperMap.Data.DatasetGrid,SuperMap.Data.GeoLine,System.Double)">CalculateProfile</see>.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ProfileResult.XYCoordinate"><summary>
            Gets the sampling dataset denoted by a two-dimensional line dataset.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst"><summary>
            The ProximityAnalyst class is used for the proximity analysis, including creating Thiessen polygon, and computing the minimum and range distance.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.DatasetVector,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion)"><summary>
             Creates Thiessen polygons according to the specified point dataset.
             </summary><param name="sourcePoint">The point dataset used to create the Thiessen Polygons.</param><param name="outputDatasource">The specified datasource used for storing the result.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The specified region used to clip the result dataset. This parameter can be null, which means not clipping the result dataset.</param><returns>Returns the region dataset storing the Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.DatasetVector,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion,System.String[],SuperMap.Analyst.SpatialAnalyst.StatisticsType[])"><summary>
            Creates Thiessen polygons according to the specified point dataset. If there are repeating objects in the dataset, it supports the attribute field statistics for the point objects.
            </summary><param name="sourcePoint">The point dataset used to create the Thiessen Polygons.</param><param name="outputDatasource">The specified datasource used for storing the result.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The specified region used to clip the result dataset. This parameter can be null, which means not clipping the result dataset.</param><param name="staticsFields">The attribute fields taht need to be statistics. it does not support the system field.</param><param name="statisticTypes">The statistics type corresponding to the attribute field. The number shoule be the same as the staticsFields number.</param><returns>Returns the region dataset storing the Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.Recordset,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion)"><summary>
            Creates the Thiessen Polygons with the given point recordset.
            </summary><param name="sourcePointRecordset">The specified point recordset used to create the Thiessen Polygons.</param><param name="outputDatasource">The specified datasource used for storing the result.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The specified region used to clip the result dataset. This parameter can be null, which means not clipping the result dataset.</param><returns>Returns the region dataset storing the Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.Recordset,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion,System.String[],SuperMap.Analyst.SpatialAnalyst.StatisticsType[])"><summary>
            Creates Thiessen polygons according to the specified point recordset. If there are repeating objects in the dataset, it supports the attribute field statistics for the point objects.
            </summary><param name="sourcePointRecordset">The specified point recordset used to create the Thiessen Polygons.</param><param name="outputDatasource">The specified datasource used for storing the result.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The specified region used to clip the result dataset. This parameter can be null, which means not clipping the result dataset.</param><param name="staticsFields">The attribute fields taht need to be statistics. it does not support the system field.</param><param name="statisticTypes">The statistics type corresponding to the attribute field. The number shoule be the same as the staticsFields number.</param><returns>Returns the region dataset storing the Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.Point2Ds,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion)"><summary>
             Creates Thiessen polygons according to the specified collection of points.
             </summary><param name="sourcePoints">The specified Point2Ds object which is the collection of the points used to create the Thiessen Polygons.</param><param name="outputDatasource">The specified datasource used for storing the result.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The specified region used to clip the result dataset. This parameter can be null, which means not clipping the result dataset.</param><returns>Returns the region dataset storing the Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.DatasetVector,SuperMap.Data.GeoRegion)"><summary>
            Creates Thiessen polygons according to the specified point dataset.
            </summary><param name="sourcePoint">The point dataset used to create the Thiessen Polygons.</param><param name="clipRegion">The clip region of the specified clip result data. This parameter can be null, which means not clipping the result.</param><returns>Returns the GeoRegion objects which are Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.Recordset,SuperMap.Data.GeoRegion)"><summary>
             Creates the Thiessen Polygons with the given point recordset.
             </summary><param name="sourcePointRecordset">The specified point recordset used to create the Thiessen Polygons.</param><param name="clipRegion">The clip region of the specified clip result data. This parameter can be null, which means not clipping the result.</param><returns>Returns the GeoRegion objects which are Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.CreateThiessenPolygon(SuperMap.Data.Point2Ds,SuperMap.Data.GeoRegion)"><summary>
             Creates Thiessen polygons according to the specified collection of points.
             </summary><param name="sourcePoints">The specified Point2Ds object which is the collection of the points used to create the Thiessen Polygons.</param><param name="clipRegion">The clip region of the specified clip result data. This parameter can be null, which means not clipping the result.</param><returns>Returns the GeoRegion objects which are Thiessen Polygons.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeMinDistance(SuperMap.Data.Geometry[],SuperMap.Data.Recordset,System.Double,System.Double,SuperMap.Data.Datasource,System.String)"><summary>
            Computing minimum distance. Calculates the shortest distance from each object of "source geometry" to all the objects within the lookup range of "reference recordset", and then saves the shortest distance information into a new attribute dataset.
            </summary><param name="sourceGeometries">The specified source geometry only supports 2D point objects.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of reference recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0 and -1, and it has the same unit with the dataset of reference recordset. </param><param name="outputDatasource">Datasource for storing the output attribute dataset.</param><param name="outputDatasetName">The name of the output attribute dataset.</param><returns>The boolean value denotes whether the calculation is successful. True if successful; otherwise, false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeMinDistance(SuperMap.Data.Recordset,SuperMap.Data.Recordset,System.Double,System.Double,SuperMap.Data.Datasource,System.String)"><summary>
            Computing minimum distance. Calculates the shortest distance from each object of "source recordset" to all the objects within the lookup range of "reference recordset", and then saves the shortest distance information into a new attribute dataset.
            </summary><param name="sourceRecordset">The specified source recordset only supports 2D point recordset.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of source recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0 and -1, and it has the same unit with the dataset of source recordset. </param><param name="outputDatasource">Datasource for storing the output attribute dataset.</param><param name="outputDatasetName">The name of the output attribute dataset.</param><returns>The boolean value denotes whether the calculation is successful. True if successful; otherwise, false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeMinDistance(SuperMap.Data.Geometry[],SuperMap.Data.Recordset,System.Double,System.Double)"><summary>
            Computing minimum distance. Calculates the shortest distance from each object of "source geometry" to all the objects within the lookup range of "reference recordset", and then returns the shortest distance information into the ComputeDistanceResult array.
            </summary><param name="sourceGeometries">The specified source geometry only supports 2D point objects.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of reference recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0 and -1, and it has the same unit with the dataset of reference recordset. </param><returns>ComputeDistanceResult Array</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeMinDistance(SuperMap.Data.Recordset,SuperMap.Data.Recordset,System.Double,System.Double)"><summary>
            Computing minimum distance. Calculates the shortest distance from each object of "source recordset" to all the objects within the lookup range of "reference recordset", and then returns the shortest distance information into the ComputeDistanceResult array.
            </summary><param name="sourceRecordset">The specified source recordset only supports 2D point recordset.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of source recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0 and -1, and it has the same unit with the dataset of source recordset. </param><returns>ComputeDistanceResult Array</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeRangeDistance(SuperMap.Data.Recordset,SuperMap.Data.Recordset,System.Double,System.Double,SuperMap.Data.Datasource,System.String)"><summary>
            Computing range distance. Calculates the distance from each object of "source recordset" to all the objects within the lookup range of "reference recordset", and then saves the distance information into a new attribute dataset. 
            </summary><param name="sourceRecordset">The specified source recordset only supports 2D point recordset.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of source recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0, and must be greater than or equal to the minimum distance. It has the same unit with the dataset of source recordset. </param><param name="outputDatasource">Datasource for storing the output attribute dataset.</param><param name="outputDatasetName">The name of the output attribute dataset.</param><returns>The boolean value denotes whether the calculation is successful. True if successful; otherwise, false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeRangeDistance(SuperMap.Data.Geometry[],SuperMap.Data.Recordset,System.Double,System.Double,SuperMap.Data.Datasource,System.String)"><summary>
            Computing range distance. Calculates the distance from each object of "source geometry" to all the objects within the lookup range of "reference recordset", and then saves the distance information into a new attribute dataset.
            </summary><param name="sourceGeometries">The specified source geometry array only supports 2D point objects.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of reference recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0, and must be greater than or equal to the minimum distance. It has the same unit with the dataset of reference recordset. </param><param name="outputDatasource">Datasource for storing the output attribute dataset.</param><param name="outputDatasetName">The name of the output attribute dataset.</param><returns>The boolean value denotes whether the calculation is successful. True if successful; otherwise, false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeRangeDistance(SuperMap.Data.Recordset,SuperMap.Data.Recordset,System.Double,System.Double)"><summary>
            Computing range distance. Calculates the distance from each object of "source recordset" to all the objects within the lookup range of "reference recordset", and then returns the distance information into the ComputeDistanceResult array.
            </summary><param name="sourceRecordset">The specified source recordset only supports 2D point recordset.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of source recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0, and must be greater than or equal to the minimum distance. It has the same unit with the dataset of source recordset. </param><returns>ComputeDistanceResult Array</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.ComputeRangeDistance(SuperMap.Data.Geometry[],SuperMap.Data.Recordset,System.Double,System.Double)"><summary>
            Computing range distance. Calculates the distance from each object of "source geometry" to all the objects within the lookup range of "reference recordset", and then returns the distance information into the ComputeDistanceResult array.
            </summary><param name="sourceGeometries">The specified source geometry only supports 2D point objects.</param><param name="referenceRecordset">The specified reference recordset supports 2D point, line, and region recordset.</param><param name="minDistance">The specified minimum distance within the lookup range. Its value range is greater than or equal to 0, and it has the same unit with the dataset of reference recordset. </param><param name="maxDistance">The specified maximum distance within the lookup range. Its value range is greater than 0, and must be greater than or equal to the minimum distance. It has the same unit with the dataset of reference recordset. </param><returns>ComputeDistanceResult Array</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.RarefyPoints(SuperMap.Data.DatasetVector,System.Double,System.String,SuperMap.Data.Datasource,System.Boolean)"><summary>
            According to the specified distance vacuate point dataset.
            </summary><param name="sourceDataset">The point dataset to be vacuated.</param><param name="radius">The radius of vacuated point. The unit is the same as dataset coordinate system.</param><param name="resultDatasetName">The name of the result dataset after vacuated.</param><param name="outputDatasource">The datasource where the result dataset is included.</param><param name="isSaveAttributes">Whether to keep the attribute field.</param><returns>The result dataset after vacuated, return null if failed.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.RarefyPoints(SuperMap.Analyst.SpatialAnalyst.StatisticsPoint[],System.Double)"><summary>
            According to the specified distance vacuate point dataset.
            </summary><param name="sourcePoints">The statistics set to be vacuated. Please refer to <see cref="T:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint">StatisticsPoint</see>.</param><param name="radius">The radius of vacuated point. The unit is the same as dataset coordinate system.</param><returns>The vacuated statistics point set.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.SummaryPoints(SuperMap.Data.DatasetVector,System.Double,SuperMap.Data.Unit,SuperMap.Analyst.SpatialAnalyst.StatisticsField[],SuperMap.Data.Datasource,System.String,System.Boolean,System.Boolean)"><summary>
            The sparse point data set is drawn from the specified distance, using a point to represent all points within the specified range.
This method supports different units and can selectively select the sparse methods, and can also make statistics on the original point set of the sparse points.
            </summary><param name="sourceDataset">To the sparse point data set.</param><param name="radius">The radius of the dilute point.Let's take a coordinate point, and we're going to represent all the point coordinates in the radius of this coordinate point.Pay attention to the units that select the radius of the sparse point.</param><param name="unit">The unit of the sparse radius.Supports kilometers, meters, sub-meters, degrees, minutes, seconds, etc.</param><param name="outputDatasource">The result data set is located in the data source.</param><param name="resultDatasetName">he name of the result data set after the extraction.</param><param name="isRandomSavePnt">Whether to keep the sparse points at random.True represents the minimum point of the sum of the points within the radius of a single point of concentration of the point set within the radius of the extraction radius.</param><param name="isSaveAttributes">Whether to keep the property field.</param><returns>The result data set is sparse.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.SummaryPoints(SuperMap.Data.Recordset,System.Double,SuperMap.Data.Unit,SuperMap.Analyst.SpatialAnalyst.StatisticsField[],SuperMap.Data.Datasource,System.String,System.Boolean,System.Boolean)"><summary>
            According to the specified distance, a point record set is used to represent all points within the specified distance range.
This method supports different units and can selectively select the sparse methods, and can also make statistics on the original point set of the sparse points.
            </summary><param name="recordset">To the sparse point record set.</param><param name="radius">The radius of the dilute point.Let's take a coordinate point, and we're going to represent all the point coordinates in the radius of this coordinate point.Pay attention to the units that select the radius of the sparse point.</param><param name="unit">The unit of the sparse radius.Supports kilometers, meters, sub-meters, degrees, minutes, seconds, etc.</param><param name="statisticFields">Make statistics on the original point set of the extraction point.You need to set the field name of the statistics, the field name of the statistics, and the statistical schema.When the array is empty, do not do statistics.</param><param name="outputDatasource">The result data set is located in the data source.</param><param name="resultDatasetName">The name of the result data set after the extraction.</param><param name="isRandomSavePnt">Whether to keep the sparse points at random.
True represents the minimum point of the sum of the points within the radius of a single point of concentration of the point set within the radius of the extraction radius。</param><param name="isSaveAttributes">Whether to keep the property field.</param><returns>The result data set is sparse.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.ProximityAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.RasterClip"><summary>
            The RasterClip class for clipping a grid/image map with a specified region. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RasterClip.ClipDatasetRaster(SuperMap.Data.Dataset,SuperMap.Data.GeoRegion,System.Boolean,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            Clips the grid or image dataset, and saves the result into a new grid or image dataset. It has been abolished. Now we use <see cref="M:SuperMap.Analyst.SpatialAnalyst.RasterClip.Clip(SuperMap.Data.Dataset,SuperMap.Data.GeoRegion,System.Boolean,System.Boolean,SuperMap.Data.Datasource,System.String)">Clip</see>.
            </summary><param name="sourceDataset">The specified dataset to be clipped. The grid and image datasets are supported.</param><param name="userRegion">The specified clip region that can be rectangle, circle, polygon, etc.</param><param name="isClipInRegion">Specifies which clipping mode to choose. If true is returned, the part in the dataset within the clipping region will be extracted; if false is returned, the part in the dataset outside of the clipping region will be extracted.</param><param name="isExactClip">Specifies whether to use exact clipping. If true, the exact clipping is used to clip the grid or image datasets.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The clipped result dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RasterClip.Clip(SuperMap.Data.Dataset,SuperMap.Data.GeoRegion,System.Boolean,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            Clips the grid or image dataset, and saves the result into a new grid or image dataset.
            </summary><param name="sourceDataset">The specified dataset to be clipped. The grid and image datasets are supported.</param><param name="userRegion">The specified clip region that can be rectangle, circle, polygon, etc.</param><param name="isClipInRegion">Specifies which clipping mode to choose. If true is returned, the part in the dataset within the clipping region will be extracted; if false is returned, the part in the dataset outside of the clipping region will be extracted.</param><param name="isExactClip">Specifies whether to use exact clipping. If true, the exact clipping is used to clip the grid or image datasets. If false, the display clip is used.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The clipped result dataset.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RasterClip.Split(SuperMap.Data.Dataset,SuperMap.Data.GeoLine,SuperMap.Data.Datasource,System.String,System.String)"><summary>
            The raster split is to split the raster/image dataset into two part according to the specified split line for saving two new dataset respectively.
            </summary><param name="sourceDataset">The specified dataset to be split. The grid and image datasets are supported.</param><param name="splitLine">The specified 2D line for splitting the dataset.<b>Notes:</b>It doesn't support the complex object.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetLeftDatasetName">The specified name of the target dataset on the left of the split line.</param><param name="targetRightDatasetName">The specified name of the target dataset on the right of the split line.</param><returns>The boolean value denotes whether the split is successful. True if successful; otherwise, false.</returns><exception cref="T:System.ArgumentException">The type of the dataset specified by the sourceDataset is vector.</exception></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RasterClip.Clip(SuperMap.Data.DatasetImage,SuperMap.Data.GeoRegion,System.Boolean,System.String,SuperMap.Analyst.SpatialAnalyst.RasterClipFileType)"><summary>
            The RasterClip.Clip method is to clip the image dataset and export the specified type of file (now it only supports the TIF file).
            </summary><param name="sourceDataset">The specified image dataset to be clipped.</param><param name="userRegion">The specified clip region.</param><param name="isClipInRegion">Specifies which clipping mode to choose. If true is returned, the part in the dataset within the clipping region will be extracted; if false is returned, the part in the dataset outside of the clipping region will be extracted.</param><param name="targetFileName">The specified path and name of the output file.</param><param name="targetFileType">The specified output file type. Currently it only supports the TIF files (i.e., it is effective only when you specify it as <see cref="F:SuperMap.Analyst.SpatialAnalyst.RasterClipFileType.TIF">RasterClipFileType.TIF</see>).</param><returns>The boolean value denotes whether the clip is successful. True if successful; otherwise, false.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.RasterClip.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat"><summary>
            This enumeration defines the constants of the pixel format on the mosaic results.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPMono"><summary><see cref="F:SuperMap.Data.PixelFormat.UBit1">PixelFormat.UBit1</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPFBit"><summary><see cref="F:SuperMap.Data.PixelFormat.UBit4">PixelFormat.UBit4</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPByte"><summary><see cref="F:SuperMap.Data.PixelFormat.UBit8">PixelFormat.UBit8</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPTByte"><summary><see cref="F:SuperMap.Data.PixelFormat.Bit16">PixelFormat.Bit16</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPRGB"><summary><see cref="F:SuperMap.Data.PixelFormat.RGB">PixelFormat.RGB</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPRGBA"><summary><see cref="F:SuperMap.Data.PixelFormat.RGBA">PixelFormat.RGBA</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPLongLong"><summary><see cref="F:SuperMap.Data.PixelFormat.Bit64">PixelFormat.Bit64</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPLong"><summary><see cref="F:SuperMap.Data.PixelFormat.Bit32">PixelFormat.Bit32</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPFloat"><summary><see cref="F:SuperMap.Data.PixelFormat.Single">PixelFormat.Single</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPDouble"><summary><see cref="F:SuperMap.Data.PixelFormat.Double">PixelFormat.Double</see></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPFirst"><summary>
            The pixel format of the raster dataset which is the first one participating in the mosaic operation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPLast"><summary>
            The pixel format of the raster dataset which is the last one participating in the mosaic operation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPMax"><summary>
            The maximum pixel format of the raster dataset participating in the mosaic operation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPMin"><summary>
            The minimum pixel format of the raster dataset participating in the mosaic operation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat.RJPMajority"><summary>
            The pixel format of the raster dataset which most frequently appears will be participated in the mosaic operation. If the frequency of two pixel formats are the same, the pixel format with the minimum index value will be adopted.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.RasterJoinType"><summary>
            This enumeration defines the statistics type constants on the mosaic raster.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinType.RJMFirst"><summary>
            Gets the values in the first raster dataset after the overlapping area is mosaicked.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinType.RJMLast"><summary>
            Gets the values in the last raster dataset after the overlapping area is mosaicked. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinType.RJMMax"><summary>
            Gets the maximum values in the datasets after the overlapping area is mosaicked. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinType.RJMMin"><summary>
            Gets the minimum values in the datasets after the overlapping area is mosaicked. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.RasterJoinType.RJMMean"><summary>
            Gets the mean values in the datasets after the overlapping area is mosaicked. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.RasterMosaic"><summary>
            The RasterMosaic class. This class is used to combine two or more raster/image datasets into one dataset according to the geographic coordinates.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RasterMosaic.Mosaic(SuperMap.Data.Dataset[],System.Double,System.Double,SuperMap.Analyst.SpatialAnalyst.RasterJoinType,SuperMap.Analyst.SpatialAnalyst.RasterJoinPixelFormat,System.Double,SuperMap.Data.EncodeType,SuperMap.Data.Rectangle2D,SuperMap.Data.Datasource,System.String)"><summary>
            Raster mosaic. It includes grid datasets and image datasets.
            </summary><param name="sourceDatasets">The specified collection of raster datasets to be mosaicked.</param><param name="backOrNoValue">The specified background color or no value. </param><param name="backTolerance">The specified background color or the tolerance of no value.</param><param name="rasterJoinMethod">The specified mosaic method, i.e., the mode of RasterJoinType.</param><param name="rasterJoinPixelFormatType">The specified pixel format of the mosaic target dataset.</param><param name="cellSize">The specified cell size for the result dataset.</param><param name="encodeType">The specified encoding type of the result dataset.</param><param name="validRect">The specified valid range of the result dataset.</param><param name="targetDatasource">The specified datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name for the result  dataset.</param><returns>The result mosaic dataset.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.RasterMosaic.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable"><summary>
            The ReclassMappingTable class. It reclassifies unique values or value ranges in a source grid dataset. It also processes no-data cells and unclassified cells during reclassification.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.#ctor"><summary>
            Constructs a new ReclassMappingTable object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.#ctor(SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable)"><summary>
            Initializes a new instance of the ReclassMappingTable class which is identical with the specified WeightFieldInfos.
            </summary><param name="reclassSegment">The specified ReclassMappingTable object.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.ToXMLFile(System.String)"><summary>
            Saves mapping table data as a mapping table file in XML format.
            </summary><param name="xmlFile">The name of the specified mapping table in XML format.</param><returns>Returns true if successful, otherwise false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.FromXMLFile(System.String)"><summary>
            Import mapping table data from a mapping table file saved in XML format.
            </summary><param name="xmlFile">The specified mapping table file in XML format.</param><returns>Returns true if successful, otherwise false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.ToXML"><summary>
            Outputs mapping table data as an XML string.
            </summary><returns>The XML string representing mapping table data.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.FromXML(System.String)"><summary>
            Imports parameter values contained in an XML string to mapping table data.
            </summary><param name="StrXml">The specified XML string.</param><returns>Returns true if successful, otherwise false.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.Segments"><summary>
            Gets or sets the reclassification segment set.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.SegmentCount"><summary>
            Gets the count of reclassification segments.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.ReclassType"><summary>
            Gets or sets the type of reclassifying.
            </summary><value>The default is <see cref="F:SuperMap.Analyst.SpatialAnalyst.ReclassType.Unique">Unique</see>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.RetainMissingValue"><summary>
            Gets or sets whether the data values outside of the specified ranges or unique values in the source dataset are reserved.
            </summary><value>The default value is false.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.ChangeMissingValueTo"><summary>
            Gets or sets the value for the cells whose original values are not within the specified ranges or among the specific unique values.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.RetainNoValue"><summary>
            Gets or sets whether to keep the no-value of the source dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassMappingTable.ChangeNoValueTo"><summary>
            Gets or sets the specified value of the no value data.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ReclassPixelFormat"><summary>
            This enumeration defines the constants representing the storage types of the cell values in a grid dataset.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassPixelFormat.Bit32"><summary>
            Integer.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassPixelFormat.Bit64"><summary>
            Long integer.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassPixelFormat.Single"><summary>
            Single precision.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassPixelFormat.Double"><summary>
            Double precision.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ReclassSegment"><summary>
            The ReclassSegment class. This class is used to set segment information for reclassification, such as the start value and end value of each segment.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassSegment.#ctor"><summary>
            The default constructor for constructing a new <see cref="T:SuperMap.Analyst.SpatialAnalyst.ReclassSegment">ReclassSegment</see> object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ReclassSegment.#ctor(SuperMap.Analyst.SpatialAnalyst.ReclassSegment)"><summary>
            Creates a new instance of the <see cref="T:SuperMap.Analyst.SpatialAnalyst.ReclassSegment">ReclassSegment</see> object that is identical with the specified ReclassSegment.
            </summary><param name="reclassSegment">The given ReclassSegment object. </param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassSegment.StartValue"><summary>
            Gets or sets the start value.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassSegment.EndValue"><summary>
             Gets or sets the to node of the ReclassSegment. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassSegment.NewValue"><summary>
             Gets or sets the new value corresponding to a segment value or a single value. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ReclassSegment.SegmentType"><summary>
            Gets or sets the type of reclassifying segments.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ReclassSegmentType"><summary>
            This enumeration defines the constants representing reclassifying segment types.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassSegmentType.OpenClose"><summary>
            The interval is left-open and right-closed, e.g., (number1, number2].
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassSegmentType.CloseOpen"><summary>
            The interval is left-closed and right-open, e.g., [number1, number2).
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ReclassType"><summary>
            This enumeration defines the constants representing the types of grid reclassification.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassType.Unique"><summary>
            Reclassify by unique values.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ReclassType.Range"><summary>
            Reclassify by value ranges.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ResampleMode"><summary>
            This enumeration defines the constants representing the types of grid reclassification algorithms.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ResampleMode.Nearest"><summary>
            Nearest Neighbor.
            <para>The nearest neighbor technique assigns the value of the cell whose center is closest to the center of the output cell. It is the resampling technique of choice for discrete, or categorical, raster data, such as land-use rasters, because it does not change the value of the input cells.</para><para>In the image above, the black line represents the input raster, the green fill represents the output raster, and the red point represents the center for a certain output cell. The value of the grid is recalculated. The value of the cell nearest to this point (in purple) is taken part in the neighborhood analysis.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ResampleMode.Bilinear"><summary>
            Bilinear interpolation
            <para>Bilinear interpolation uses the value of the four nearest input cell centers to determine the value on the output raster. The new value for the output cell is a weighted average of these four values, adjusted to account for their distance from the center of the output cell. Since the values for the output cells are weighted based on distance, and then averaged, the bilinear interpolation is best used for data where the location from a known point or phenomenon determines the value assigned to the cell. For example, elevation, slope, magnitude of earthquake from the epicenter.</para><para>In the image above, the black line represents the input raster, the green fill represents the output raster, and the red point represents the center for a certain output cell. The value of the grid is recalculated. The 4 values of the cells nearest to this point (in purple) is taken part in the bilinear interpolation analysis.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ResampleMode.Cubic"><summary>
            Cubic convolution
            <para>Cubic convolution is a resampling technique similar to bilinear interpolation except that the weighted average is calculated from the values of the 16 nearest input cell centers. Compared with bilinear interpolation, cubic convolution has a tendency to sharpen the edges of the input data since more cells are involved in the calculation of the output value. This method also changes the original cell values, and even exceeds the range of the input raster. The cubic convolution is suit for resampling aviation or RS images.</para><para>In the image above, the black line represents the input raster, the blue fill represents the output raster, and the red point represents the center for a certain output cell. The value of the grid is recalculated. The 16 values of the cells nearest to this point (in purple) is taken part in the IDW.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter"><summary>
            The RouteEventsParameter class is used to overlap and dissolve dynamically.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.Finalize"><summary>
            Releases the resources before recycling RouteEventsParameter.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.#ctor"><summary>
            Creates a new RouteEventsParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter)"><summary>
            Initializes a new instance according to the specified RouteEventsParameter object.
            </summary><param name="routeEventsParameter">The RouteEventsParameter object.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.Dispose"><summary>
            Releases all resources used by the RouteEventsParameter.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.Type"><summary>
            Gets the event type.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.EventDataset"><summary>
            Gets or sets the input event table or overlay table for dissolving and overlaying.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.MeasureStartField"><summary>
            Gets or sets the start measure field.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.MeasureEndField"><summary>
            Gets or sets the end measure field.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.MeasureField"><summary>
            Gets or sets the measure field.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.RouteEventsParameter.RouteIDField"><summary>
            Gets or sets the route ID field.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.GenerateType"><summary>
            This enumeration defines the generate type for route dataset. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByPoint"><summary>
            By point.
            <para>Two types of data: line data and reference point data. The process to generate the routing: firstly, the reference point is matched with the line data by Route Identifier Field; secondly, the scale value of the line vertex is obtained from the scale value of the reference point; finally, the route dataset will be generated. The scale value of the reference point is stored in an attribute field.</para><para>There are generally 3 types of the position situations between the reference point and its corresponding line vertex. As shown in the figure below, the blue line is line data used for generating the routing, the red square point is an reference point, the light-orange circular area is a range decided by the tolerance. The tolerance is used to decide whether the reference point is effective, which can be specified by users. It is different from the vertex tolerance of the dataset.</para><para></para><ul><li>If the reference point coincides with the vertex or is within the specified tolerance (see: reference point 1 in the figure), then the scale value of the reference point will be assigned to the vertex directly. If there are more than one reference points within the tolerance (see: vertex 4), then it will take the M value of the nearest reference point.</li><li>If the reference point is beyond the range of the vertex tolerance, the system will judge whether it is "On the Line". If the vertical distance between the reference point and its corresponding arc is less than the tolerance, then it is "On the Line" and the M value of  the reference point can be used to calculate the M value of the vertex. If it is greater than the tolerance, then the reference point will be treated as "Not on the Line" and it will not participate in calculating the M value of the tolerance. For example, the vertex 2 in the figure is not within the range of the tolerance, but it is "On the Line" according to the rule, then the value of the vertex 2 can be got from the interpolation of the M values of reference point 1 and 2. The reference 3 is not either within the range of the tolerance or "On the Line", so it is an invalid reference point and will not participate in calculating the M value of vertex 3. Hence, the M value of vertex 3 will be got from the interpolation of the reference point 2 and 4.</li><li>If there are no reference points around the line object for calculating (i.e., within the tolerance of the vertex, it neither have reference points nor have these points that can be treated as "On the Line"), then this line object will not generate its routing. Hence, it may be different between the object number of the route dataset generated by this way and the object number of the original line dataset.</li></ul><para>It may be different between the object number of the route dataset generated by this way and the object number of the original line dataset.</para><para>Note: The M values of the reference points corresponding to the same line object that are arranged in a certain direction should be incremented, decremented or remain constant.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.BySingleField"><summary>
            By single field.
            <para>This method is to generate the route dataset according to an attribute field of the line data. This field records a scale value which will be the end-M value (i.e., the M value of the last vertex on a route). The start-M value (i.e., the M value of the first vertex) is 0. If there is an intermediate vertex, then its M value will be got by interpolation.</para><para>The object number of the original line dataset is consistent with the object number of the route dataset generated by this way.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByDoubleFields"><summary>
            By double field.
            <para>This method is to generate the route dataset according to two attribute fields of the line data. The scale values of the two fields will be treated as the start-M value and end-M value of the corresponding routes respectively, and the M value of the intermediate vertex is also calculated by the interpolation.</para><para>The object number of the original line dataset is consistent with the object number of the route dataset generated by this way.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.GenerateType.ByLength"><summary>
            By double fields.
            <para>This method is to use the distance along the line from the vertex of the line object to its start vertex as the scale value of each vertex so as to generate the route dataset. Obviously, the start-M value of each route is 0 in the result route dataset, and the end-M value is the length of the corresponding line. The unit of the scale value of the result route is meter.</para><para>The object number of the original line dataset is consistent with the object number of the route dataset generated by this way.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.SearchMode"><summary>
            The SearchMode class is used to set the search mode for interpolation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SearchMode.None"><summary>
            No searching. All input points are made by interpolation analysis.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SearchMode.QuadTree"><summary>
            The QuadTree mode. The dataset is blocked according to the maximum number of points in each block, and interpolation operation is conducted in each block.
            <para>Note: This mode only applies to kriging and RBF interpolation.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SearchMode.KdTreeFixedRadius"><summary>
            The KdTreeFixedRadius mode. All the sample points within the specified radius are taken part in the cell interpolation operation.
            <para>This method is to determine the sample points by the search radius (<see cref="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.SearchRadius">SearchRadius</see>) and the expected minimum sample points (<see cref="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.ExpectedCount">ExpectedCount</see>).</para><para>That is to say, the value of this certain point is determined by the points located in your setting radius.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SearchMode.KdTreeFixedCount"><summary>
            The KdTreeFixedCount mode. The number of sample points you set are participated in the interpolation analysis.
            <para>This method is to determine the sample points by the search radius (<see cref="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.SearchRadius">SearchRadius</see>) and the expected maximum sample points (<see cref="P:SuperMap.Analyst.SpatialAnalyst.InterpolationParameter.ExpectedCount">ExpectedCount</see>).</para><para>That is to say, the value of this certain point is determined by those N points.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ShadowMode"><summary>
            This enumeration defines the constants of the shadow modes.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ShadowMode.IlluminationAndShadow"><summary>
            Illumination and shadow.
            <para>Both illumination and shadow are considered.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ShadowMode.Shadow"><summary>
            Shadow.
            <para>Only shadow is considered.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ShadowMode.Illumination"><summary>
            Illumination.
            <para>Only illumination is considered.</para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.SlopeType"><summary>
            Defines the type constant of the slope unit.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SlopeType.Degree"><summary>
            The slope unit is degree.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SlopeType.Radian"><summary>
            The slope unit is radian.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SlopeType.Percent"><summary>
            The slope unit is percentage.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.SmoothMethod"><summary>
            Used to smooth the boundary when the isoline or isoregion from grid or DEM data is generated.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.BSpline"><summary>
            The B-spline method.
            <para>In the computer science subfields of computer-aided design and computer graphics, the term B-spline frequently refers to a spline curve parametrized by spline functions that are expressed as linear combinations of B-splines (in the mathematical sense above). A B-spline is simply a generalisation of a Bézier curve, and it can avoid the Runge phenomenon without increasing the degree of the B-spline.</para><para></para><para>After using the B-spline method for the non-closed line object, the relative position of its two endpoints remains the same.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.Polish"><summary>
            The polish method.
            <para>The polish method is a relatively simple calculation, smooth way faster processing speed, but the effect is relatively limited. Its main process is the folding line of the two adjacent segments, respectively, at a distance of the angle vertex third segment length is added at the node, and the newly added on both sides of the angle between the two nodes connected to the original line segment node polished.</para><para></para><para>A close smooth line can be got by repeatedly polishing its angle. After using the polish method for the non-closed line object, the relative position of its two endpoints remains the same.</para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.SmoothMethod.None"><summary>
            Do not smooth the data.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst"><summary>
            The StatisticsAnalyst class. This class provides multiple statistical analysis for raster, such as basic, common, neighbor, zonal, etc.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.BasicStatistics(SuperMap.Data.DatasetGrid)"><summary>
            The basic statistical analysis for raster. It includes max, min, mean, and standard deviation.
            </summary><param name="sourceDataset">The specified raster dataset to be made statistics analysis.</param><returns>The result of the basic statistical analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.BasicStatistics(SuperMap.Data.DatasetGrid,SuperMap.Analyst.SpatialAnalyst.FunctionType)"><summary>
            The basic statistical analysis for raster. It includes max, min, mean, and standard deviation.
            <para>When specify the transformation function, the used data is the converted value through the function.</para></summary><param name="sourceDataset">The specified raster dataset to be made statistics analysis.</param><param name="functionType">The specified transformation function type.</param><returns>The result of the basic statistical analysis.</returns><para><b>Note:</b></para><ul><li>When the transformation function type is the Log, the minimax value of statistics raster dataset range should be greater than 0; otherwise, it will throw an exception.</li><li>When the transformation function type is ArcSin, the range of statistics raster dataset should be in [-1,1]; otherwise, it will throw an exception.</li></ul></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.CommonStatistics(SuperMap.Data.DatasetGrid,System.Double,SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            The raster is commonly used in the statistical analysis.
            <para>Each cell in a raster dataset is compared with a fix value. If true, the cell value is 1; if false, the cell value is 0.</para></summary><param name="sourceDataset">The specified raster dataset to be made statistics analysis.</param><param name="comparedValue">The specified compare value. It has the same unit with the cell value of the raster dataset to be calculated.</param><param name="compareType">The specified compare type.</param><param name="isIgnoreNoValue">Specifies whether to ignore no value or not. If true, any cell with no value in the neighbor will not be calculated; If false, any cell with no value will still be output as a cell without value. </param><param name="targetDatasource">Datasource for storing the output data.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The raster dataset for the statistics result.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.CommonStatistics(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetGrid[],SuperMap.Analyst.SpatialAnalyst.StatisticsCompareType,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            The raster is commonly used in the statistical analysis.
            <para>Compare the input raster dataset to the  corresponding cells in one or more raster datasets. The result cell values are the result of "true" times in the comparison.</para></summary><param name="sourceDataset">The specified raster dataset to be made statistics analysis.</param><param name="CompareDatasets">The specified collection of datasets to compare.</param><param name="compareType">The specified compare type.</param><param name="isIgnoreNoValue">Specifies whether to ignore no value or not. If true, any cell with no value in the neighbor will not be calculated; If false, any cell with no value will still be output as a cell without value. </param><param name="targetDatasource">Datasource for storing the output data.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The raster dataset for the statistics result.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.NeighbourStatistics(SuperMap.Analyst.SpatialAnalyst.NeighbourStatisticsParameter)"><summary>
            Raster neighborhood statistics.
            </summary><param name="parameter">The specified neighborhood statistics parameters.</param><returns>The raster dataset for the statistics result.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.ZonalStatisticsOnRasterValue(SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter)"><summary>
             Zonal statistical analysis for raster
             <para>The value data can be raster dataset, and the zonal data can be vector or raster.</para></summary><param name="parameter">Parameter settings for the specified zonal statistics</param><returns>The result of the zonal statistics.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.CreateHistogram(SuperMap.Data.DatasetGrid,System.Int32)"><summary>
            Creates a histogram for the specified rester dataset.
            </summary><param name="sourceDataset">The specified grid dataset.</param><param name="groupCount">The specified group number of the histogram which must be greater than 0.</param><returns>The raster histogram object.</returns><exception cref="T:System.ArgumentException">groupCount &lt;=0</exception></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.CreateHistogram(SuperMap.Data.DatasetGrid,System.Int32,SuperMap.Analyst.SpatialAnalyst.FunctionType)"><summary>
            Create the histogram of a given grid dataset. You can specify the  transformatio function type.
            <para>When specify the transformation function, the statistics data of histogram is the converted value through the function.</para></summary><param name="sourceDataset">The specified grid dataset.</param><param name="groupCount">The specified group number of the histogram which must be greater than 0.</param><param name="functiontype">The specified transformation function type.</param><returns>The raster histogram object.</returns><exception cref="T:System.ArgumentException">groupCount &lt;=0</exception><para><b>Note:</b></para><ul><li>When the transformation function type is the Log, the minimax value of statistics raster dataset range should be greater than 0; otherwise, it will throw an exception.</li><li>When the transformation function type is ArcSin, the range of statistics raster dataset should be in [-1,1]; otherwise, it will throw an exception.</li></ul></member><member name="E:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType"><summary>
            The statistical type of the sparse point is the value of the original point set of the extraction point.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.Average"><summary>
            The statistical average is only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.Sum"><summary>
            Statistics and statistics are only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.MaxValue"><summary>
            Maximum value only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.MinValue"><summary>
            Minimum value, only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.Variance"><summary>
            The variance is only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.SampleVariance"><summary>
            Sample variance, only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.StdDeviation"><summary>
            Standard deviation, only valid for numeric fields.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsFieldType.SampleStdDev"><summary>
            Sample standard deviation, only valid for numeric fields.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.StatisticsField"><summary>
            The statistical field class of the sparse point set.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.StatisticsField.SourceField"><summary>
            Gets or sets the field name that needs to be counted.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.StatisticsField.ResultField"><summary>
            Gets or sets the field name saved by the statistics.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.StatisticsField.Mode"><summary>
            Gets or sets the statistics pattern.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint"><summary>
            The statistics point object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint.#ctor"><summary>
            Creates a new StatisticsPoint object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint.#ctor(SuperMap.Data.Point2D)"><summary>
            Constructs a StatisticsPoint object according to the specified coordinate point.
            </summary><param name="pnt">The point coordinates.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint.#ctor(SuperMap.Data.Point2D,System.Int32)"><summary>
            Constructs a StatisticsPoint object according to the given coordinate and statistics property.
            </summary><param name="pnt">The point coordinates.</param><param name="statisticsCount">Statistica property.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint.Point"><summary>
            Gets or sets the point coordinate.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.StatisticsPoint.StatisticsCount"><summary>
            Gets or sets the statistics property value. The default is .
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.StatisticsType"><summary>
            This enumeration defines the constants of the field statistics type after the dataset is dissolved.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsType.Max"><summary>
            The maximum of the statistics field. Only numeric type and date type are supported. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsType.Min"><summary>
            The minimum of the statistics field. Only numeric type and the date type are supported. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsType.Sum"><summary>
            The sum of the statistics field. Only numeric type is supported.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsType.Mean"><summary>
            The mean of the statistics field. Only numeric type is supported. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsType.First"><summary>
            Retains the field value of the first object. The types of numeric, date, boolean and text are supported.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.StatisticsType.Last"><summary>
            Retains the field value of the last object. The types of numeric, date, boolean and text are supported. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst"><summary>
            The SurfaceAnalyst class is used to extract isoline or isoregion from grid data, or point data with elevation information.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.Datasource,System.String)"><summary>
             Extracts contour lines from the raster dataset, and saves the result into the dataset.
             </summary><param name="parameter">The given parameters for extracting isolines.</param><param name="extractedGrid">The raster dataset to be extracted.</param><param name="outputDatasource">The datasource that will store the result dataset.</param><param name="outputDatasetName">Gets the name of the result dataset.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion)"><summary>
            Extracts isolines from the raster dataset, and saves the result into the dataset. This method can extract isolines from the area you are interested in.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The specified grid dataset to be extracted.</param><param name="outputDatasource">Datasource for storing the output datasets</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsolineGeometry(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the Grid dataset. This method can extract isolines from the area you are interested in.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The specified grid dataset to be extracted.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The raster extracting the isolines result object set. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the point dataset, and saves them to the dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The point dataset to be extracted..</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point dataset when extracting contour lines.</param><param name="outputDatasource">Datasource for storing the output datasets</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the recordset and saves them to the dataset. The operation process of this method is similar to that of the extracting isolines from the dataset. This method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) with point data in recordset through interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecordset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting contour lines.</param><param name="outputDatasource">The datasource that will store the result dataset.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the grid dataset from the intermediate result.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isolines from the 3D point dataset. The operation process of this method is creating a grid dataset (i.e., the intermediate result; and its value is single-precision float) from the 3D point dataset through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly, and the interpolation process uses the values of the third dimension information, except the coordinate information,such as elevation or temperature. Finally extract isolines from the Grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The points used to extract isolines. Every point of them has X,Y coordinates and only one field with the information of others such as elevation and so on.</param><param name="outputDatasource">Datasource for storing the output datasets</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid)"><summary>
            Extracts the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The specified grid dataset to be extracted.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the Grid dataset. This method can extract isolines from the area you are interested in.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The specified grid dataset to be extracted.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the point dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The point dataset to be extracted..</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point dataset when extracting contour lines.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the recordset and saves them to the dataset. The operation process of this method is similar to that of the extracting isolines from the dataset. This method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) with point data in recordset through interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecordset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting contour lines.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isolines from the 3D point dataset. The operation process of this method is creating a grid dataset (i.e., the intermediate result; and its value is single-precision float) from the 3D point dataset through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly, and the interpolation process uses the values of the third dimension information, except the coordinate information,such as elevation or temperature. Finally extract isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The points used to extract isolines. Every point of them has X,Y coordinates and only one field with the information of others such as elevation and so on.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isolines from the 3D points. The operation process of this method is creating a grid dataset (i.e., the intermediate result dataset) from the 3D points dataset through the interpolation analysis firstly, the interpolation process use the values of the third dimension information, except the coordinate information, such as elevation and temperature. Finally extract isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The points used to extract isolines. Every point of them has X,Y coordinates and only one field with the information of others such as elevation and so on.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isolines from the recordset. It is similar to "extract isolines from the point dataset", but it uses the recordset as the executing operation object. The operation process of this method is creating a grid dataset (i.e., the intermediate result; and its value is single-precision float) from the point dataset of the recordset through the interpolation analysis firstly. Finally extract isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecordset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point data in the point dataset when extracting contour lines.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isolines from the recordset, and saves them to the dataset. It is similar to "extract isolines from the point dataset", but it uses the recordset as the executing operation object. The operation process of this method is creating a grid dataset (i.e., the intermediate result; and its value is single-precision float) from the point dataset of the recordset through the interpolation analysis firstly. Finally extract isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecordset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point data in the point dataset when extracting contour lines.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the point dataset, and saves them to the dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through interpolation analysis firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point data in the point dataset when extracting contour lines.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the point dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through interpolation analysis firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The specified dataset to be extracted.</param><param name="zValueFieldName">The name of the field for the extraction operation. The values in this field will be used to interpolate the point data in the point dataset when extracting contour lines.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The line set by extracting the isolines. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoline(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isolines from the point dataset, and saves them to the dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through interpolation analysis firstly and then extracting the isolines from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The point dataset to be extracted..</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point dataset, and saves them to the dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly and then extracting the isoregions from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The point dataset to be extracted..</param><param name="zValueFieldName">The field name used for extracting. When extracting isoregions, the operation will use the values of this field to create a continuous surface from the point dataset by interpolation. The continuous surface is a grid dataset and it is the intermediate result. Then the operation will extract isolines from the intermediate grid dataset. The isolines are also an intermediate result which will produce the final isoregion dataset.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point recordset and saves them to the dataset. It is similar to "extract isoregions from the point dataset". Therefore, this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the point data of the recordset through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly. Extracts the isoregions from the grid dataset secondly. Creates isoregions with isolines finally.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecrodset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting isoregions.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from the 3D point dataset. The operation process of this method is creating a grid dataset (i.e., the intermediate result; and its value is single-precision float) from the 3D point dataset through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly, and the interpolation process uses the values of the third dimension information, except the coordinate information,such as elevation or temperature. Finally extract isoregions from the Grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The points used to extract isoregions. Every point of them has X,Y coordinates and only one field with the information of others such as elevation and so on.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point dataset. The operation process of this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the points through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly. Extracts the isoregions from the grid dataset secondly. Creates isoregions with isolines finally.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The point dataset to be extracted..</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point dataset when extracting isoregions.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from the 3D point dataset. The operation process of this method is creating a grid dataset (i.e., the intermediate result; and its value is float) from the 3D point dataset through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly, and the interpolation process uses the values of the third dimension information, except the coordinate information,such as elevation or temperature. Finally extract isoregions from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The points used to extract isoregions. Every point of them has X,Y coordinates and only one field with the information of others such as elevation and so on.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point recordset. It is similar to "extract isoregions from the point dataset", but it uses the recordset as the executing operation object. Therefore, this method is creating a grid dataset (It is the intermediate result and the grid value is single-precision float) from the point data of the recordset through IDW interpolation analysis (<see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see>) firstly. Extracts the isoregions from the grid dataset secondly. Creates isoregions with isolines finally.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecrodset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting isoregions.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.Datasource,System.String,SuperMap.Data.GeoRegion)"><summary>
             Extracts isoregions from the raster dataset, and saves the result into the dataset.
             </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The grid dataset to be extracted.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from a raster dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The grid dataset to be extracted.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregionGeometry(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetGrid,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from a raster dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedGrid">The grid dataset to be extracted.</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The raster extracting the isoregions result object set. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from the 3D points. The operation process of this method is creating a grid dataset (the intermediate result) from the 3D point dataset through interpolation analysis (you can set the interpolation method) firstly, and the interpolation process use the values of the third dimension information, except the coordinate information, such as elevation or temperature. Finally extract isolines from the Grid dataset, and build isoregions according to the isolines.
            </summary><param name="parameter">The operation required for the specified extraction operation.</param><param name="extractedPoints">The 3D points used to extract isoregions. Every point has X,Y coordinates and a field with only one 3D information (e.g., elevation).</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point recordset. The operation process of this method is similar to that of the extracting isoregions from the point dataset, but its operation object is the recordset. Therefore, this method is creating a grid dataset (it is the intermediate result, and the grid value is single-precision float) from the points of the recordset through interpolation analysis firstly. Extracts isolines from the Grid dataset secondly. Builds isoregions with the isolines finally.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecordset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting isoregions.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point dataset. The operation process of this method is creating a Grid dataset (It is the intermediate result.) from the points through interpolation analysis firstly and then extracting the isolines from the Grid dataset. The isolines are also an intermediate result which will produce the final isoregion dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The point dataset to be extracted..</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting isoregions.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The region set by extracting the isoregions Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.DatasetVector,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from the 3D point dataset. The operation process of this method is creating a grid dataset (It is the intermediate result) from the 3D points set through interpolation analysis firstly, and the interpolation process uses the values of the third dimension information, except the coordinates, such as elevation or temperature. Finally extract isoregions from the grid dataset.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoint">The point dataset to be extracted..</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point dataset when extracting isoregions.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Point3Ds,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts isoregions from the 3D point dataset. The operation process of this method is creating a grid dataset (It is the intermediate result) from the 3D points set through interpolation analysis firstly, and the interpolation process uses the values of the third dimension information, except the coordinates, such as elevation or temperature. Finally extract isoregions from the grid dataset. 
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPoints">The points used to extract. Every point of them has X,Y coordinates and only one field with the information of others such as elevation and so on.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.ExtractIsoregion(SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter,SuperMap.Data.Recordset,System.String,SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType,SuperMap.Data.Datasource,System.String,System.Double,SuperMap.Data.GeoRegion)"><summary>
            Extracts the isoregions from the point recordset. The operation process of this method is similar to that of the extracting isoregions from the point dataset. This method is creating a grid dataset (It is the intermediate result, and the grid value is single-precision float) from the points of the recordset through interpolation analysis firstly and then extracting the isolines from the grid dataset. The isolines are also an intermediate result which will produce the final isoregions.
            </summary><param name="parameter">The parameter required for the specified extraction operation.</param><param name="extractedPointRecordset">The specified recordset to be extracted.</param><param name="zValueFieldName">The name of the specified field for the extraction operation. The values in this field will be used to interpolate the point data in the recordset when extracting isoregions.</param><param name="terrainInterpolateType">The specified terrain interpolation type.</param><param name="outputDatasource">Datasource for storing the output datasets.</param><param name="outputDatasetName">The specified name of the result dataset.</param><param name="resolution">The resolution of the specified intermediate results (raster dataset).</param><param name="clipRegion">The region used to clip the interesting area. If you do not want to clip, you can use null instead of the parameter.</param><returns>The result isoline dataset by extracting. Return null if it fails.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.SurfaceAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter"><summary>
            The SurfaceExtractParameter class. This class provides parameters for generating isolines and isoregions, including the interval, datum value, smoothness, smooth method and resample tolerance of the isoline.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.#ctor"><summary>
            Constructs a new SurfaceExtractParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.#ctor(System.Double,System.Double)"><summary>
            Constructs a new SurfaceExtractParameter object according to given parameters.
            </summary><param name="interval">Specifies the interval.</param><param name="datumValue">Specifies the datum value of isolines.</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.#ctor(System.Double[])"><summary>
            Initializes a new instance of the SurfaceExtractParameter class with the specified Z values.
            </summary><param name="expectedZValues">The specified collection of Z</param></member><member name="M:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.ToString"><summary>
            Outputs a formatted string for the SurfaceExtractParameter class.
            </summary><returns>A formatted string.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.Interval"><summary>
            Gets or sets the contour Interval.
            </summary><value>The default value is 0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.DatumValue"><summary>
            Gets or sets the datum value of the isoline.
            </summary><value>The default value is 0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.Smoothness"><summary>
            Gets or sets the smoothness of the isoline or the outline of the isoregion.
            </summary><value>The default value is 0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.SmoothMethod"><summary>
            Gets or sets the method used for smoothing.
            </summary><value>The default value is BSpline.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.ResampleTolerance"><summary>
            Gets or sets the coefficient of the distance tolerance for sampling.
            </summary><value>The default value is 0.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.SurfaceExtractParameter.ExpectedZValues"><summary>
            Gets or sets the expected analysis result of the z value set.
            </summary><value>The default value is null.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting"><summary>
            The GridAnalystSetting class. This class provides all the parameter information needed for grid analyses. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.#ctor"><summary>
            Constructs a new TerrainAnalystSetting object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.#ctor(SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting)"><summary>
            Initializes a new instance of the TerrainAnalystSetting class which is identical with the specified TerrainAnalystSetting. 
            </summary><param name="terrainAnalystSetting">The given TerrainAnalystSetting object. </param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.BoundsType"><summary>
            Gets or sets the type of the analysis extent.
            </summary><value>The default value is the intersection of the input grid datasets, i.e., <c>BoundsType.Intersection</c>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.Bounds"><summary>
            Gets or sets the extent of the layer.
            </summary><value>The default value is the intersection of the input grid datasets.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.CellSizeType"><summary>
            Gets or sets the cell size type for the result dataset.
            </summary><value>The default value is the minimum cell value in the input grid dataset, i.e., <c>CellSizeType.Min</c>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.CellSize"><summary>
            Gets or sets the cell size of the result raster dataset. Its unit is same with the coordinate system unit of the output grid dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.ValidRegion"><summary>
            Gets or sets the effective analysis region.
            </summary><value>The default value is null, i.e., the analysis region is set by the user. </value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.GridOutputNamePrefix"><summary>
            Gets or sets the prefix of the grid dataset.
            </summary><value>The default value is null.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.VectorOutputNamePrefix"><summary>
            Gets or sets the prefix of the vector dataset.
            </summary><value>The default value is null.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.OutputDatasource"><summary>
            Gets or sets the datasource for storing the output datasets.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainAnalystSetting.IsShowProgress"><summary>
            Gets or sets whether to show progress bar.
            </summary><value>The default value is false.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder"><summary>
            The TerrainBuilder class. This class provides methods to build terrain according to given parameters and to modify elevation values within a specified extent in a DEM dataset. 
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder.BuildTerrain(SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter,SuperMap.Data.Datasource,System.String)"><summary>
            Builds terrain according to given terrain building parameter information.
            </summary><param name="parameter">The specified parameter of terrain construction.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The grid dataset resulted from terrain building. </returns><exception cref="T:System.ArgumentException">The datasets in LineDatasets and PointDatasets specified by this parameter have different coordinate system.</exception></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder.BuildLake(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetVector,System.String,System.Boolean,System.Double)"><summary>
            Builds lakes according to given parameters. This is a process of changing elevation values in a DEM dataset within the extent of a region dataset to specified elevation values.
            </summary><param name="demDataGrid">The specified DEM dataset. </param><param name="lakeGrid">The given region dataset. </param><param name="lakeField">The elevation field in the specified region dataset. It is effective only when useDigital is set to false.</param><param name="useDigital">Whether to adopt specified elevation values as elevations in the result dataset. If useDigital is set to true, specified elevation values will be adopted as the elevation values in the DEM dataset within the extent of the region dataset; otherwise, the elevation field values in a specified region dataset will be used. </param><param name="elevation">The specified elevation values. It is effective only when useDigital is set to true. </param><returns> Returns true if successful, otherwise false. </returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder.BuildLake(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetVector,System.String)"><summary>
            Building lake is a process of changing elevation values in a DEM dataset within the extent of a region dataset into the specified field values.
            </summary><param name="demDataGrid">The specified DEM grid dataset to be built lakes.</param><param name="lakeVector">The specified region dataset for defining lake areas.</param><param name="lakeField">The elevation field of the specified lake area whose field type must be numeric. If it is specified as null, empty string, or the non-existent field in the lake-area dataset, then it will build lake according to the minimum elevation of the DEM cells on the border of the lake area. The elevation value has same unit with the DEM grid dataset.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder.BuildLake(SuperMap.Data.DatasetGrid,SuperMap.Data.DatasetVector,System.Double)"><summary>
            Building lake is a process of changing elevation values in a DEM dataset within the extent of a region dataset into the specified values.
            </summary><param name="demDataGrid">The specified DEM grid dataset to be built lakes.</param><param name="lakeVector">The specified region dataset for defining lake areas.</param><param name="elevation">The specified elevation value. It has the same unit with the cell value of the DEM grid dataset.</param><returns>True if it is removed successfully; false otherwise.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder.Stepped"><summary>
            The event is trigged when the process bar is activated.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter"><summary>
            The TerrainBuilderParameter class provides the necessary parameter information for building terrain (<see cref="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilder.BuildTerrain(SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter,SuperMap.Data.Datasource,System.String)">BuildTerrain</see>), including the point/line dataset used for building terrain as well as the related elevation field, clip dataset, erase dataset, sampling distance, pixed format of the DEM results, cell size, etc.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.#ctor"><summary>
            Constructs a new TerrainBuilderParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter)"><summary>
            Initializes a new instance of the TerrainBuilderParameter class which is a copy of the specified TerrainBuilderParameter object.
            </summary><param name="terrainBuildParameter"></param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.LineDatasets"><summary>
            Gets and sets the line dataset array.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.PointDatasets"><summary>
            Gets or sets the point dataset array. 
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.LineAltitudeFileds"><summary>
            Gets and sets the elevation field array of the line dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.PointAltitudeFileds"><summary>
            Gets or sets the elevation field array of the point dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.LakeAltitudeFiled"><summary>
            Gets or sets the elevation field of the region dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.LakeDataset"><summary>
            Gets or sets the lake region dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.ClipDataset"><summary>
            Gets or sets the dataset used to clip operation.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.EraseDataset"><summary>
            Gets or sets the dataset used to erase.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.InterpolateType"><summary>
            Gets or sets the type of the terrain interpolation.
            </summary><value>The default value is TerrainInterpolateType.IDW.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.PixelFormat"><summary>
            Gets or sets the pixel type for the result dataset.
            </summary><value>The default value is PixelFormat.Single.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.StatisticType"><summary>
            Gets or sets the handling way of repeated points in the source dataset.
            </summary><value>The default value is "Unique". </value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.CellSize"><summary>
            Gets or sets the cell size of the result dataset.
            </summary><value>The default value is L/500, where L is the length of the diagonal line of the rectangle corresponding to the extent of the source dataset.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.ZFactor"><summary>
            Gets or sets the elevation zooming factor.
            </summary><value>The default value is 1.0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.ResampleLen"><summary>
            Gets or Sets sample distance. It works only for line dataset. Its unit is uniform with the unit of line data used for building terrain.
            </summary><value>The default value is 0, meaning not resampling.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.EncodeType"><summary>
            Gets or sets the encoding method.
            </summary><value>The default value is none. </value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TerrainBuilderParameter.IsProcessFlatArea"><summary>
            Gets of Sets whether to handle the flat area.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType"><summary>
            This class defines the constants representing types of interpolation analysis on terrain.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType.IDW"><summary>
            The Inverse Distance Weighted interpolation method. For details, please refer to the <see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.IDW">InterpolationAlgorithmType.IDW</see> enumeration member. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType.Kriging"><summary>
            The Kriging interpolation method. For details, please refer to the <see cref="F:SuperMap.Analyst.SpatialAnalyst.InterpolationAlgorithmType.Kriging">InterpolationAlgorithmType.Kriging</see> enumeration member. 
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainInterpolateType.TIN"><summary>
            Triangulated Irregular Network. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType"><summary>
            This class defines the constants representing types of statistical analyses on terrain.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType.Unique"><summary>
            Removing duplicate points.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType.Mean"><summary>
            Calculating the mean.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType.Min"><summary>
            Finding the minimum value.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType.Max"><summary>
            Finding the maximum value.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType.Majority"><summary>
            Finding the mode.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TerrainStatisticType.Median"><summary>
            Finding the median.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TopologicalHierarchicalSchema"><summary>
            Level topology logic diagram. Constructs the level topology logic diagram according to the given parameter.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema"><summary>
            Topology logic diagram base class is used to build topology logic diagram.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.Finalize"><summary>
            Releases unmanaged resources and performs other cleanup operations before the topology logic diagram creating object is reclaimed by garbage collection.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.Dispose"><summary>Releases the local resources.</summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.Build(SuperMap.Analyst.SpatialAnalyst.NetworkEdgeID[])"><summary>
             Constructs the topology logic diagram according to the network relationship represented by edge ID. Before calling this interface, it needs to set the datasource and dataset name which includes the result dataset.
             </summary><param name="networkEdgeIDs">Represents the edge ID object set of network relationship.</param><returns>Constructs the 2D network dataset that returns the storage topology logic diagram successfully; otherwise, false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.Build(SuperMap.Analyst.SpatialAnalyst.NetworkEdge[],SuperMap.Analyst.SpatialAnalyst.NetworkNode[],System.Boolean,System.Double)"><summary>
            Constructs the topology logic diagram according to the network relationship represented by edge and network node. Before calling this interface, it needs to set the datasource and dataset name which includes the result dataset.
            </summary><param name="networkEdges">Represents the network edge object set of network relationship.</param><param name="networkNodes">Represents the network node object set of network relationship.</param><param name="isMerger">Whether to merge the repeated the network arc and network node objects in spatial. In the network relationship, if there are repeated arcs and nodes in spatial, if it is true, it will extract a public arc relation construction logic diagram, and there are repeated arc and nodes in the constructed topology logic diagram. If it is false, it will normally process every correct network topology relationship when calculating typology logic diagram.</param><param name="tolerance">Node tolerance is used in spatial calculation node object comparison. If the isMerge parameter is set as true, this parameter is valid; otherwise, false.</param><returns>Constructs the 2D network dataset that returns the storage topology logic diagram successfully; otherwise, false.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.Build(SuperMap.Data.DatasetVector)"><summary>
            Constructs the topology logic diagram according to the 2D network dataset.
            </summary><param name="networkDataset">The specified 2D network dataset.</param><returns>Constructs the 2D network dataset that returns the storage topology logic diagram successfully; otherwise, false.</returns></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.OutputDatasource"><summary>
            Gets and sets the datasource where the result dataset is included.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalSchema.OutputDatasetName"><summary>
            Gets and sets the name of the result dataset.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalHierarchicalSchema.#ctor"><summary>
            Constructs a new object of level topology logic diagram.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalHierarchicalSchema.NodeSpacing"><summary>
            Sets or gets the distance of topology logic diagram nodes. The default value is 30.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalHierarchicalSchema.RankNodeSpacing"><summary>
            Sets or gets the level distance of topology logic diagrams. The default value is 50.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalHierarchicalSchema.Smooth"><summary>
            Sets or gets the smooth coefficient. If you need to smooth the result, you can set the smoth coefficient larger than 1. Default is 1, indicating do not smooth.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalHierarchicalSchema.Orientation"><summary>
            Set or gets the layout trend of topology logic diagram. Default is from left to right.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TopologicalOrthogonalSchema"><summary>
            Rectangular orthogonal topology logic diagram. Constructs the rectangular orthogonal topology logic diagram according the given parameter.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalOrthogonalSchema.#ctor"><summary>
            Constructs a new object of rectangular orthogonal topology logic diagram.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalOrthogonalSchema.NodeSpacing"><summary>
            Sets or gets the distance of topology logic diagram nodes. The default value is 10.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TopologicalSchemaOrientation"><summary>
            Enumeration of the constant of the layout orientation.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TopologicalSchemaOrientation.LeftToRight"><summary>
            From left to right.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TopologicalSchemaOrientation.RightToLeft"><summary>
            From right to left.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TopologicalSchemaOrientation.TopToBottom"><summary>
            From up to bottom.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.TopologicalSchemaOrientation.BottomToTop"><summary>
            From bottom to up.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.TopologicalTreeSchema"><summary>
            Tree topology logic diagram. Constructs the tree topology logic diagram according to the given parameter.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.TopologicalTreeSchema.#ctor"><summary>
            Constructs a new object of tree topology logic diagram.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalTreeSchema.LevelSpacing"><summary>
            Sets or gets the distance between different tree levels. The default value is 20.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalTreeSchema.NodeSpacing"><summary>
            Sets or gets the distance of topology logic diagram nodes. The default value is 30.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalTreeSchema.BreakRadio"><summary>
            Sets or gets the polyline breaking ratio, the range is [0,1], and the default value is 0.5.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.TopologicalTreeSchema.Orientation"><summary>
            Set or gets the layout trend of topology logic diagram. Default is from left to right.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.VariogramMode"><summary>
            Defines the semivariogram mode of Kriging Interpolation method. Such as Exponential Variogram Mode, Gaussian Variogram Mode and Spherical Variogram Mode.The selected mode influences the prediction of the unknown values, particularly when the shape of the curve nears the origin differs significantly. The steeper the curve near the origin, the more influence the closest neighbors will have on the prediction. As a result, the output surface will be less smooth. Each model is designed to fit different types of phenomenon more accurately.
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.VariogramMode.Exponential"><summary><para>Exponential Variogram Mode.</para><para>Exponential Variogram ModeThis mode is applied when spatial autocorrelation decreases exponentially with increasing distance. Here the autocorrelation disappears completely only at an infinite distance. The exponential model is also a commonly used model. The choice of which model to use is based on the spatial autocorrelation of the data and on prior knowledge of the phenomenon.</para><para>Exponential Variogram Mode is commonly used.</para><para></para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.VariogramMode.Gaussian"><summary><para>Gaussian Variogram Mode.</para><para></para></summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.VariogramMode.Spherical"><summary><para>Spherical Variogram Mode.</para><para>Spherical Variogram Mode. This mode shows a progressive decrease of spatial autocorrelation (equivalently, an increase of semivariance) until some distance, beyond which autocorrelation is zero. The spherical model is one of the most commonly used models.</para><para></para></summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.VectorClip"><summary>
            A VectorClip class. It is used to clip vector datasets.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VectorClip.ClipDatasetVector(SuperMap.Data.DatasetVector,SuperMap.Data.GeoRegion,System.Boolean,System.Boolean,SuperMap.Data.Datasource,System.String)"><summary>
            Clips the vector dataset whose result is saved as a new vector dataset.
            </summary><param name="sourceDataset">Specified vector datasets in a map to be clipped, include point, line, region, text, and CAD datasets.</param><param name="userRegion">The specified clip region that can be rectangle, circle, polygon, etc.</param><param name="isClipInRegion">Specifies which clipping mode to choose. If true is returned, the part in the dataset within the clipping region will be extracted; if false is returned, the part in the dataset outside of the clipping region will be extracted.</param><param name="isEraseSource">Whether to erase the clipping region. True indicates that the clipping region is to be erased, and false indicates that it is not.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><returns>The clipped result dataset.</returns></member><member name="E:SuperMap.Analyst.SpatialAnalyst.VectorClip.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ViewShedType"><summary>
            This enumeration class defines the constants representing viewshed types when performing a viewshed analysis on multiple observation points (or target points).
            </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ViewShedType.ViewShedIntersect"><summary>
            Common viewshed, the intersection of the viewsheds of multiple points. 
             </summary></member><member name="F:SuperMap.Analyst.SpatialAnalyst.ViewShedType.ViewShedUnion"><summary>
            Non-common viewshed, the union of the viewsheds of multiple points.
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst"><summary>
            The VisibilityAnalyst class provides two-points or multi-points visibility analysis based on the grid surface (terrain), one or more points viewshed analysis, and line-of-sight visibility analysis.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.IsVisible(SuperMap.Data.DatasetGrid,SuperMap.Data.Point3D,SuperMap.Data.Point3D)"><summary>
            The visibility analysis between points is to analyze whether the two points are mutually visible.
            </summary><param name="sourceDatasetGrid">The specified grid surface dataset for the visibility analysis.</param><param name="fromPoint">The specified start point for the visibility analysis, i.e., the observation point.</param><param name="toPoint">The specified end point for the visibility analysis, i.e., the target point.</param><returns>The result of a visibility analysis, saved in a VisibleResult object.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.IsVisible(SuperMap.Data.DatasetGrid,SuperMap.Data.Point3Ds,SuperMap.Data.Point3Ds)"><summary>
            The multi-points visibility analysis is to analyze whether the points are mutually visible.
            </summary><param name="sourceDatasetGrid">The specified grid surface dataset for the visibility analysis.</param><param name="fromPoints">The specified start point for the visibility analysis, i.e., the observation point.</param><param name="toPoints">The specified end point for the visibility analysis, i.e., the target point.</param><returns>The result of a visibility analysis, saved in a m*n VisibleResult object array.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.CalculateViewShed(SuperMap.Data.DatasetGrid,SuperMap.Data.Point3D,System.Double,System.Double,System.Double,SuperMap.Data.Datasource,System.String)"><summary>
            The one-point viewshed analysis is to analyze the visible range of a viewpoint.
            </summary><param name="sourceDatasetGrid">The specified grid surface dataset for the viewshed analysis.</param><param name="viewPoint">The specified viewpoint</param><param name="startAngle">The specified start point. The unit is degree. The north direction is 0 degree, and the observation direction rotates clockwise. If the specified value is negative or greater than 360°, then it will be converted automatically in range [0, 360°].</param><param name="viewAngle">The specified view angle, Its unit is degree, and the maximum value is 360°. The view angle is in range [start angle, start angle+view angle]. For example, if the start angle is 90° and the view angle is 180°, then the view range is in [0, 180°]. Note: if the specified view angle is 0 or negative, then no matter how many degrees the start angle is, the range of the view angle is [0, 360°].</param><param name="viewRadius">The specified observation radius. It restricts the size of the view extent. A radius less than or equal to 0 indicates that no limitation is applied. The unit is in meters.</param><param name="targetDatasource">The specified datasource for saving the viewshed analysis result.</param><param name="targetDatasetName">The specified name of the dataset for saving the viewshed analysis result.</param><returns>The target dataset of the one-point viewshed analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.CalculateViewShed(SuperMap.Data.DatasetGrid,SuperMap.Data.Point3Ds,System.Double[],System.Double[],System.Double[],SuperMap.Data.Datasource,System.String,SuperMap.Analyst.SpatialAnalyst.ViewShedType)"><summary>
            The multi-points viewshed analysis is to analyze the visible regions of the multiple points, which can be the public visible regions or non-public visible regions.
            </summary><param name="sourceDatasetGrid">The specified grid surface dataset for the viewshed analysis.</param><param name="viewPoints">The  specified viewpoints.</param><param name="startAngles">The specified start angles which have one-to-one correspondence with the viewpoint. The unit is degree. The north direction is 0 degree, and the observation direction rotates clockwise. If the specified value is negative or greater than 360°, then it will be converted automatically in range [0, 360°].</param><param name="viewAngles">The specified view angles which have one-to-one correspondence with the view point and the start angle. Its unit is degree, and the maximum value is 360°. The view angle is in range [start angle, start angle+view angle]. For example, if the start angle is 90° and the view angle is 180°, then the view range is in [0, 180°]. Note: if the specified view angle is 0 or negative, then no matter how many degrees the start angle is, the range of the view angle is [0, 360°].</param><param name="viewRadiuses">The specified observation radius collection. It restricts the size of the view extent. A radius less than or equal to 0 indicates that no limitation is applied. The unit is in meters.</param><param name="targetDatasource">Datasource for storing the output datasets.</param><param name="targetDatasetName">The specified name of the result dataset.</param><param name="viewShedType">The specified viewshed type. It can be the intersection or the union of the viewsheds of the observation points.</param><returns>The target dataset of the multi-points viewshed analysis.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.LineOfSight(SuperMap.Data.DatasetGrid,SuperMap.Data.Point3D,SuperMap.Data.Point3D)"><summary>
            The line-of-sight visibility analysis is to calculate the visible and invisible part of the sightline between the start point and the target point.
            </summary><param name="sourceDataset">The specified grid surface dataset.</param><param name="fromPoint">The specified view point is a 3D point object.</param><param name="toPoint">The specified target point is a 3D point object.</param><returns>The output visible sightliness constitutes a 2D line array. See "Note" about the array.</returns></member><member name="M:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.RadarShieldAngle(SuperMap.Data.DatasetGrid,SuperMap.Data.Point3D,System.Double,System.Double,System.Double,SuperMap.Data.Datasource,System.String )">
            <summary>
            According to the topographic map and the radar center point, the point data set of the largest radar shielding angle on each side is returned. The azimuth is the angle from the true north direction, and one radar shadow point is returned every 1 degree clockwise.
            </summary>
            <param name="sourceDataset"> Delete the data set or DEM. Image data sets are not supported. </param>
            <param name="viewPoint">3D point object, which represents the coordinates of the radar center point and the height of the radar center. </param>
            <param name="startAngle">The starting angle of the radar azimuth, in degrees, is 0 degrees in the north direction and rotates clockwise. The range is 0 to 360 degrees. </param>
            <param name="viewAngle">Specified azimuth angle in degrees and a maximum of 360 degrees. The observation angle is based on the starting angle, that is, the viewing angle range is [starting angle, starting angle + viewing angle]. </param>
            <param name="viewRadius">The scope of observation, in meters. If set to less than 0, it represents the entire terrain map range. </param>
            <param name="targetDatasource">Target data source. If you pass in null, the default is the data source where the terrain data is located. </param>
            <param name="targetDatasetName">Result data set name. </param>
            <returns> returns the 3D point dataset, where Z represents the terrain height at the location of the point. The data set records the point where the radar shadow angle is the largest in each azimuth, and adds the fields "ShieldAngle", "ShieldPosition" and "RadarDistance" to record the radar shadow angle, the angle between the point and the north direction, and the point and point. The distance from the radar center. </returns>
        </member><member name="P:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.AnalystSetting"><summary>
            Gets or sets an environment set object of the raster analysis.
            </summary></member><member name="E:SuperMap.Analyst.SpatialAnalyst.VisibilityAnalyst.Stepped"><summary>
            The event is trigged when the process bar is activated. 
            </summary></member><member name="T:SuperMap.Analyst.SpatialAnalyst.VisibleResult"><summary>
            The VisibleResult class. This class provides the result of a visibility analysis on observation points and target points. It also provides information about barrier points if the target points are not visible to the observation point(s).
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.VisibleResult.Visible"><summary>
            Gets whether the target point(s) are visible to the observation point(s).
            </summary><value>The default value is false.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.VisibleResult.FromPointIndex"><summary>
            Gets the index of an observation point. If the visibility analysis is on only two points, the index of the observation point is 0.
            </summary><value>The default value is 0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.VisibleResult.ToPointIndex"><summary>
            Gets the index of a target point. If the visibility analysis is on only two points, the index of the target point is 0.
            </summary><value>The default value is 0.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.VisibleResult.BarrierPoint"><summary>
            Gets the coordinates of a barrier point. If the observation points and the target points are not visible to each other, then the attribute value is the first barrier point between the two points. If the two points are visible to each other, the default values are assigned to the barrier point coordinates.
            </summary><value>The default value is (0,0,0).</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.VisibleResult.BarrierAlterHeight"><summary>
            Gets the suggested maximum altered height of barrier points. If you modify the cell value (elevation) of the grid surface which has the barrier point so as to make it less than or equal to this maximum value, then this point will no longer obstruct the view, but it may have the other barrier points. The cell value can be modified by the <see cref="M:SuperMap.Data.DatasetGrid.SetValue(System.Int32,System.Int32,System.Double)">SetValue</see> method of the DatasetGrid class.
            </summary><value>The default value is -9999.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter"><summary>
            The ZonalStatisticsAnalystParameter class. This class provides parameter settings for zonal statistics.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.#ctor"><summary>
            Constructs a new  ZonalStatisticAnalystParameter object.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.#ctor(SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter)"><summary>
            Constructs a new object identical to the given  ZonalStatisticAnalystParameter object.
            </summary><param name="zonalStatisticAnalystParameter">The given  ZonalStatisticAnalystParameter object.</param></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.StatisticsMode"><summary>
            Gets or sets the type of the zonal statistics.
            </summary><value>The default value is <b>GridStatisticsMode.Sum</b>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.IsIgnoreNoValue"><summary>
            Gets or sets whether to ignore no value or not. If true, any cell with no value will not be calculated; If false, any cell with no value will still be output as a cell without value.
            </summary><value>The default value is true.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.TargetDatasetName"><summary>
            Gets or sets the name of the result dataset.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.TargetDatasource"><summary>
            Gets or sets the datasource for storing the output data.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.TargetTableName"><summary>
            Gets or sets the name of the result attribute table.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.PixelFormat"><summary>
            Gets or sets the pixel format. It has been abolished. See <see cref="M:SuperMap.Analyst.SpatialAnalyst.StatisticsAnalyst.ZonalStatisticsOnRasterValue(SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter)">ZonalStatisticsOnRasterValue</see> for the introduction of the pixel type of the result raster.
            </summary><value>The default value is <b>PixelFormat.Single</b>.</value></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.ValueDataset"><summary>
            Gets or sets the value raster to be statistics. Currently, only raster data is supported.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.ZonalDataset"><summary>
            Gets or sets the zonal dataset for the statistics. It only supports the raster dataset or vector region dataset whose <see cref="T:SuperMap.Data.PixelFormat">PixelFormat</see> is UBit1, UBit4, UBit8 and UBit16.
            </summary><exception cref="T:System.ArgumentException">The specified pixel format of the raster dataset is not UBit1, UBit4, UBit8 or UBit16; or the specified vector dataset is not region dataset.</exception></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystParameter.ZonalFieldName"><summary>
            Gets or sets the field used to identify the zone in the vector zoning data. The field type only supports the int32.
            </summary><value>The default value is SMID.</value></member><member name="T:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystResult"><summary>
            The ZonalStatisticsAnalystResult class. This class offers the zonal statistics results, including raster dataset and attribute tables.
            </summary></member><member name="M:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystResult.#ctor"><summary>
            The Constructor.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystResult.ResultDatasetGrid"><summary>
            Gets the zonal statistics raster datasets.
            </summary></member><member name="P:SuperMap.Analyst.SpatialAnalyst.ZonalStatisticsAnalystResult.ResultTable"><summary>
            Gets the zonal statistics attribute tables.
            </summary></member></members>
</doc>